ARM GAS  /tmp/ccBOZJGA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_timebase_TIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_InitTick,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_InitTick
  22              		.thumb
  23              		.thumb_func
  25              	HAL_InitTick:
  26              	.LFB64:
  27              		.file 1 "Src/stm32f1xx_hal_timebase_TIM.c"
   1:Src/stm32f1xx_hal_timebase_TIM.c **** /**
   2:Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Src/stm32f1xx_hal_timebase_TIM.c ****   * @file    stm32f1xx_hal_timebase_TIM.c 
   4:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Src/stm32f1xx_hal_timebase_TIM.c ****   * This notice applies to any and all portions of this file
   7:Src/stm32f1xx_hal_timebase_TIM.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/stm32f1xx_hal_timebase_TIM.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/stm32f1xx_hal_timebase_TIM.c ****   * inserted by the user or by software development tools
  10:Src/stm32f1xx_hal_timebase_TIM.c ****   * are owned by their respective copyright owners.
  11:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  12:Src/stm32f1xx_hal_timebase_TIM.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  13:Src/stm32f1xx_hal_timebase_TIM.c ****   * All rights reserved.
  14:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  15:Src/stm32f1xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/stm32f1xx_hal_timebase_TIM.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  18:Src/stm32f1xx_hal_timebase_TIM.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer.
  20:Src/stm32f1xx_hal_timebase_TIM.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f1xx_hal_timebase_TIM.c ****   *    and/or other materials provided with the distribution.
  23:Src/stm32f1xx_hal_timebase_TIM.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/stm32f1xx_hal_timebase_TIM.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/stm32f1xx_hal_timebase_TIM.c ****   *    derived from this software without specific written permission.
  26:Src/stm32f1xx_hal_timebase_TIM.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/stm32f1xx_hal_timebase_TIM.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/stm32f1xx_hal_timebase_TIM.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/stm32f1xx_hal_timebase_TIM.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this license. 
ARM GAS  /tmp/ccBOZJGA.s 			page 2


  32:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  33:Src/stm32f1xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/stm32f1xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/stm32f1xx_hal_timebase_TIM.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/stm32f1xx_hal_timebase_TIM.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/stm32f1xx_hal_timebase_TIM.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/stm32f1xx_hal_timebase_TIM.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/stm32f1xx_hal_timebase_TIM.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/stm32f1xx_hal_timebase_TIM.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/stm32f1xx_hal_timebase_TIM.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/stm32f1xx_hal_timebase_TIM.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/stm32f1xx_hal_timebase_TIM.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/stm32f1xx_hal_timebase_TIM.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  46:Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
  47:Src/stm32f1xx_hal_timebase_TIM.c ****   */
  48:Src/stm32f1xx_hal_timebase_TIM.c **** 
  49:Src/stm32f1xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/stm32f1xx_hal_timebase_TIM.c **** #include "stm32f1xx_hal.h"
  51:Src/stm32f1xx_hal_timebase_TIM.c **** #include "stm32f1xx_hal_tim.h"
  52:Src/stm32f1xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  53:Src/stm32f1xx_hal_timebase_TIM.c ****   * @{
  54:Src/stm32f1xx_hal_timebase_TIM.c ****   */
  55:Src/stm32f1xx_hal_timebase_TIM.c **** 
  56:Src/stm32f1xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  57:Src/stm32f1xx_hal_timebase_TIM.c ****   * @{
  58:Src/stm32f1xx_hal_timebase_TIM.c ****   */ 
  59:Src/stm32f1xx_hal_timebase_TIM.c **** 
  60:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  61:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  62:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  63:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f1xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim4; 
  65:Src/stm32f1xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  66:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  67:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  68:Src/stm32f1xx_hal_timebase_TIM.c **** 
  69:Src/stm32f1xx_hal_timebase_TIM.c **** /**
  70:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM4 as a time base source. 
  71:Src/stm32f1xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  72:Src/stm32f1xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  73:Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  74:Src/stm32f1xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  75:Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  76:Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval HAL status
  77:Src/stm32f1xx_hal_timebase_TIM.c ****   */
  78:Src/stm32f1xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  79:Src/stm32f1xx_hal_timebase_TIM.c **** {
  28              		.loc 1 79 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
ARM GAS  /tmp/ccBOZJGA.s 			page 3


  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40              	.LVL1:
  80:Src/stm32f1xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  81:Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
  82:Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  83:Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  84:Src/stm32f1xx_hal_timebase_TIM.c ****   
  85:Src/stm32f1xx_hal_timebase_TIM.c ****   /*Configure the TIM4 IRQ priority */
  86:Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM4_IRQn, TickPriority ,0); 
  41              		.loc 1 86 0
  42 0004 0022     		movs	r2, #0
  43 0006 0146     		mov	r1, r0
  44 0008 1E20     		movs	r0, #30
  45              	.LVL2:
  46 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  47              	.LVL3:
  87:Src/stm32f1xx_hal_timebase_TIM.c ****   
  88:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable the TIM4 global Interrupt */
  89:Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM4_IRQn); 
  48              		.loc 1 89 0
  49 000e 1E20     		movs	r0, #30
  50 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  51              	.LVL4:
  52              	.LBB2:
  90:Src/stm32f1xx_hal_timebase_TIM.c ****   
  91:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable TIM4 clock */
  92:Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM4_CLK_ENABLE();
  53              		.loc 1 92 0
  54 0014 154B     		ldr	r3, .L5
  55 0016 DA69     		ldr	r2, [r3, #28]
  56 0018 42F00402 		orr	r2, r2, #4
  57 001c DA61     		str	r2, [r3, #28]
  58 001e DB69     		ldr	r3, [r3, #28]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61 0026 019B     		ldr	r3, [sp, #4]
  62              	.LBE2:
  93:Src/stm32f1xx_hal_timebase_TIM.c ****   
  94:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Get clock configuration */
  95:Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  63              		.loc 1 95 0
  64 0028 02A9     		add	r1, sp, #8
  65 002a 03A8     		add	r0, sp, #12
  66 002c FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  67              	.LVL5:
  96:Src/stm32f1xx_hal_timebase_TIM.c ****   
  97:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Compute TIM4 clock */
  98:Src/stm32f1xx_hal_timebase_TIM.c ****   uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  68              		.loc 1 98 0
  69 0030 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  70              	.LVL6:
  71 0034 4000     		lsls	r0, r0, #1
  72              	.LVL7:
  99:Src/stm32f1xx_hal_timebase_TIM.c ****    
 100:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM4 counter clock equal to 1MHz */
ARM GAS  /tmp/ccBOZJGA.s 			page 4


 101:Src/stm32f1xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  73              		.loc 1 101 0
  74 0036 0E4B     		ldr	r3, .L5+4
  75 0038 A3FB0023 		umull	r2, r3, r3, r0
  76 003c 9B0C     		lsrs	r3, r3, #18
  77 003e 013B     		subs	r3, r3, #1
  78              	.LVL8:
 102:Src/stm32f1xx_hal_timebase_TIM.c ****   
 103:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Initialize TIM4 */
 104:Src/stm32f1xx_hal_timebase_TIM.c ****   htim4.Instance = TIM4;
  79              		.loc 1 104 0
  80 0040 0C48     		ldr	r0, .L5+8
  81              	.LVL9:
  82 0042 0D4A     		ldr	r2, .L5+12
  83 0044 0260     		str	r2, [r0]
 105:Src/stm32f1xx_hal_timebase_TIM.c ****   
 106:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
 107:Src/stm32f1xx_hal_timebase_TIM.c ****   + Period = [(TIM4CLK/1000) - 1]. to have a (1/1000) s time base.
 108:Src/stm32f1xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 109:Src/stm32f1xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 110:Src/stm32f1xx_hal_timebase_TIM.c ****   + Counter direction = Up
 111:Src/stm32f1xx_hal_timebase_TIM.c ****   */
 112:Src/stm32f1xx_hal_timebase_TIM.c ****   htim4.Init.Period = (1000000 / 1000) - 1;
  84              		.loc 1 112 0
  85 0046 40F2E732 		movw	r2, #999
  86 004a C260     		str	r2, [r0, #12]
 113:Src/stm32f1xx_hal_timebase_TIM.c ****   htim4.Init.Prescaler = uwPrescalerValue;
  87              		.loc 1 113 0
  88 004c 4360     		str	r3, [r0, #4]
 114:Src/stm32f1xx_hal_timebase_TIM.c ****   htim4.Init.ClockDivision = 0;
  89              		.loc 1 114 0
  90 004e 0023     		movs	r3, #0
  91              	.LVL10:
  92 0050 0361     		str	r3, [r0, #16]
 115:Src/stm32f1xx_hal_timebase_TIM.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
  93              		.loc 1 115 0
  94 0052 8360     		str	r3, [r0, #8]
 116:Src/stm32f1xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim4) == HAL_OK)
  95              		.loc 1 116 0
  96 0054 FFF7FEFF 		bl	HAL_TIM_Base_Init
  97              	.LVL11:
  98 0058 18B9     		cbnz	r0, .L3
 117:Src/stm32f1xx_hal_timebase_TIM.c ****   {
 118:Src/stm32f1xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 119:Src/stm32f1xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim4);
  99              		.loc 1 119 0
 100 005a 0648     		ldr	r0, .L5+8
 101 005c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 102              	.LVL12:
 103 0060 00E0     		b	.L2
 104              	.L3:
 120:Src/stm32f1xx_hal_timebase_TIM.c ****   }
 121:Src/stm32f1xx_hal_timebase_TIM.c ****   
 122:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Return function status */
 123:Src/stm32f1xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 105              		.loc 1 123 0
 106 0062 0120     		movs	r0, #1
ARM GAS  /tmp/ccBOZJGA.s 			page 5


 107              	.L2:
 124:Src/stm32f1xx_hal_timebase_TIM.c **** }
 108              		.loc 1 124 0
 109 0064 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 4
 112              		@ sp needed
 113 0066 5DF804FB 		ldr	pc, [sp], #4
 114              	.L6:
 115 006a 00BF     		.align	2
 116              	.L5:
 117 006c 00100240 		.word	1073876992
 118 0070 83DE1B43 		.word	1125899907
 119 0074 00000000 		.word	htim4
 120 0078 00080040 		.word	1073743872
 121              		.cfi_endproc
 122              	.LFE64:
 124              		.section	.text.HAL_SuspendTick,"ax",%progbits
 125              		.align	2
 126              		.global	HAL_SuspendTick
 127              		.thumb
 128              		.thumb_func
 130              	HAL_SuspendTick:
 131              	.LFB65:
 125:Src/stm32f1xx_hal_timebase_TIM.c **** 
 126:Src/stm32f1xx_hal_timebase_TIM.c **** /**
 127:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
 128:Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM4 update interrupt.
 129:Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  None
 130:Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval None
 131:Src/stm32f1xx_hal_timebase_TIM.c ****   */
 132:Src/stm32f1xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 133:Src/stm32f1xx_hal_timebase_TIM.c **** {
 132              		.loc 1 133 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 134:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Disable TIM4 update Interrupt */
 135:Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim4, TIM_IT_UPDATE);                                                  
 137              		.loc 1 135 0
 138 0000 034B     		ldr	r3, .L8
 139 0002 1A68     		ldr	r2, [r3]
 140 0004 D368     		ldr	r3, [r2, #12]
 141 0006 23F00103 		bic	r3, r3, #1
 142 000a D360     		str	r3, [r2, #12]
 143 000c 7047     		bx	lr
 144              	.L9:
 145 000e 00BF     		.align	2
 146              	.L8:
 147 0010 00000000 		.word	htim4
 148              		.cfi_endproc
 149              	.LFE65:
 151              		.section	.text.HAL_ResumeTick,"ax",%progbits
 152              		.align	2
 153              		.global	HAL_ResumeTick
 154              		.thumb
ARM GAS  /tmp/ccBOZJGA.s 			page 6


 155              		.thumb_func
 157              	HAL_ResumeTick:
 158              	.LFB66:
 136:Src/stm32f1xx_hal_timebase_TIM.c **** }
 137:Src/stm32f1xx_hal_timebase_TIM.c **** 
 138:Src/stm32f1xx_hal_timebase_TIM.c **** /**
 139:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 140:Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM4 update interrupt.
 141:Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  None
 142:Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval None
 143:Src/stm32f1xx_hal_timebase_TIM.c ****   */
 144:Src/stm32f1xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 145:Src/stm32f1xx_hal_timebase_TIM.c **** {
 159              		.loc 1 145 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 146:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable TIM4 Update interrupt */
 147:Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim4, TIM_IT_UPDATE);
 164              		.loc 1 147 0
 165 0000 034B     		ldr	r3, .L11
 166 0002 1A68     		ldr	r2, [r3]
 167 0004 D368     		ldr	r3, [r2, #12]
 168 0006 43F00103 		orr	r3, r3, #1
 169 000a D360     		str	r3, [r2, #12]
 170 000c 7047     		bx	lr
 171              	.L12:
 172 000e 00BF     		.align	2
 173              	.L11:
 174 0010 00000000 		.word	htim4
 175              		.cfi_endproc
 176              	.LFE66:
 178              		.global	uwIncrementState
 179              		.comm	htim4,64,4
 180              		.section	.bss.uwIncrementState,"aw",%nobits
 181              		.align	2
 184              	uwIncrementState:
 185 0000 00000000 		.space	4
 186              		.text
 187              	.Letext0:
 188              		.file 2 "/home/user/Library/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_ty
 189              		.file 3 "/home/user/Library/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 190              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 191              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 192              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 193              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 194              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 195              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 196              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccBOZJGA.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_timebase_TIM.c
     /tmp/ccBOZJGA.s:20     .text.HAL_InitTick:00000000 $t
     /tmp/ccBOZJGA.s:25     .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccBOZJGA.s:117    .text.HAL_InitTick:0000006c $d
                            *COM*:00000040 htim4
     /tmp/ccBOZJGA.s:125    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccBOZJGA.s:130    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccBOZJGA.s:147    .text.HAL_SuspendTick:00000010 $d
     /tmp/ccBOZJGA.s:152    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccBOZJGA.s:157    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccBOZJGA.s:174    .text.HAL_ResumeTick:00000010 $d
     /tmp/ccBOZJGA.s:184    .bss.uwIncrementState:00000000 uwIncrementState
     /tmp/ccBOZJGA.s:181    .bss.uwIncrementState:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
