ARM GAS  /tmp/ccqdGmFz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	2
  21              		.weak	HAL_MspInit
  22              		.thumb
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB66:
  27              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccqdGmFz.s 			page 2


  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.2
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccqdGmFz.s 			page 3


  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           and the backup domain when enabled.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
ARM GAS  /tmp/ccqdGmFz.s 			page 4


 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
ARM GAS  /tmp/ccqdGmFz.s 			page 5


 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  28              		.loc 1 217 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE66:
  37 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	2
  39              		.weak	HAL_MspDeInit
  40              		.thumb
  41              		.thumb_func
  43              	HAL_MspDeInit:
  44              	.LFB67:
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  45              		.loc 1 228 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE67:
  54 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	2
  56              		.global	HAL_DeInit
  57              		.thumb
  58              		.thumb_func
  60              	HAL_DeInit:
  61              	.LFB65:
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
ARM GAS  /tmp/ccqdGmFz.s 			page 6


  62              		.loc 1 192 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 192 0
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  72              		.loc 1 194 0
  73 0002 064B     		ldr	r3, .L5
  74 0004 4FF0FF32 		mov	r2, #-1
  75 0008 DA60     		str	r2, [r3, #12]
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  76              		.loc 1 195 0
  77 000a 0024     		movs	r4, #0
  78 000c 1C61     		str	r4, [r3, #16]
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  79              		.loc 1 197 0
  80 000e DA60     		str	r2, [r3, #12]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  81              		.loc 1 198 0
  82 0010 DC60     		str	r4, [r3, #12]
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  83              		.loc 1 206 0
  84 0012 FFF7FEFF 		bl	HAL_MspDeInit
  85              	.LVL0:
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  86              		.loc 1 210 0
  87 0016 2046     		mov	r0, r4
  88 0018 10BD     		pop	{r4, pc}
  89              	.L6:
  90 001a 00BF     		.align	2
  91              	.L5:
  92 001c 00100240 		.word	1073876992
  93              		.cfi_endproc
  94              	.LFE65:
  96              		.section	.text.HAL_InitTick,"ax",%progbits
  97              		.align	2
  98              		.weak	HAL_InitTick
  99              		.thumb
 100              		.thumb_func
 102              	HAL_InitTick:
 103              	.LFB68:
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
ARM GAS  /tmp/ccqdGmFz.s 			page 7


 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 104              		.loc 1 251 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              	.LVL1:
 109 0000 10B5     		push	{r4, lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 4, -8
 113              		.cfi_offset 14, -4
 114 0002 0446     		mov	r4, r0
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 115              		.loc 1 253 0
 116 0004 0E4B     		ldr	r3, .L12
 117 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 118              	.LVL2:
 119 0008 4FF47A73 		mov	r3, #1000
 120 000c B3FBF0F3 		udiv	r3, r3, r0
 121 0010 0C4A     		ldr	r2, .L12+4
 122 0012 1068     		ldr	r0, [r2]
 123 0014 B0FBF3F0 		udiv	r0, r0, r3
 124 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 125              	.LVL3:
 126 001c 58B9     		cbnz	r0, .L9
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 127              		.loc 1 259 0
 128 001e 0F2C     		cmp	r4, #15
 129 0020 0BD8     		bhi	.L10
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 130              		.loc 1 261 0
 131 0022 0022     		movs	r2, #0
 132 0024 2146     		mov	r1, r4
 133 0026 4FF0FF30 		mov	r0, #-1
 134 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 135              	.LVL4:
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 136              		.loc 1 262 0
ARM GAS  /tmp/ccqdGmFz.s 			page 8


 137 002e 064B     		ldr	r3, .L12+8
 138 0030 1C60     		str	r4, [r3]
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   else
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 139              		.loc 1 270 0
 140 0032 0020     		movs	r0, #0
 141 0034 10BD     		pop	{r4, pc}
 142              	.LVL5:
 143              	.L9:
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 144              		.loc 1 255 0
 145 0036 0120     		movs	r0, #1
 146 0038 10BD     		pop	{r4, pc}
 147              	.LVL6:
 148              	.L10:
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 149              		.loc 1 266 0
 150 003a 0120     		movs	r0, #1
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 151              		.loc 1 271 0
 152 003c 10BD     		pop	{r4, pc}
 153              	.LVL7:
 154              	.L13:
 155 003e 00BF     		.align	2
 156              	.L12:
 157 0040 00000000 		.word	.LANCHOR0
 158 0044 00000000 		.word	SystemCoreClock
 159 0048 00000000 		.word	.LANCHOR1
 160              		.cfi_endproc
 161              	.LFE68:
 163              		.section	.text.HAL_Init,"ax",%progbits
 164              		.align	2
 165              		.global	HAL_Init
 166              		.thumb
 167              		.thumb_func
 169              	HAL_Init:
 170              	.LFB64:
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 171              		.loc 1 159 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 180              		.loc 1 168 0
 181 0002 074A     		ldr	r2, .L16
 182 0004 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccqdGmFz.s 			page 9


 183 0006 43F01003 		orr	r3, r3, #16
 184 000a 1360     		str	r3, [r2]
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185              		.loc 1 173 0
 186 000c 0320     		movs	r0, #3
 187 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 188              	.LVL8:
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 189              		.loc 1 176 0
 190 0012 0020     		movs	r0, #0
 191 0014 FFF7FEFF 		bl	HAL_InitTick
 192              	.LVL9:
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 193              		.loc 1 179 0
 194 0018 FFF7FEFF 		bl	HAL_MspInit
 195              	.LVL10:
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 196              		.loc 1 183 0
 197 001c 0020     		movs	r0, #0
 198 001e 08BD     		pop	{r3, pc}
 199              	.L17:
 200              		.align	2
 201              	.L16:
 202 0020 00200240 		.word	1073881088
 203              		.cfi_endproc
 204              	.LFE64:
 206              		.section	.text.HAL_IncTick,"ax",%progbits
 207              		.align	2
 208              		.weak	HAL_IncTick
 209              		.thumb
 210              		.thumb_func
 212              	HAL_IncTick:
 213              	.LFB69:
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccqdGmFz.s 			page 10


 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in SysTick ISR.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 214              		.loc 1 310 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 219              		.loc 1 311 0
 220 0000 034A     		ldr	r2, .L19
 221 0002 1368     		ldr	r3, [r2]
 222 0004 0349     		ldr	r1, .L19+4
 223 0006 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 224 0008 0B44     		add	r3, r3, r1
 225 000a 1360     		str	r3, [r2]
 226 000c 7047     		bx	lr
 227              	.L20:
 228 000e 00BF     		.align	2
 229              	.L19:
 230 0010 00000000 		.word	uwTick
 231 0014 00000000 		.word	.LANCHOR0
 232              		.cfi_endproc
 233              	.LFE69:
 235              		.section	.text.HAL_GetTick,"ax",%progbits
 236              		.align	2
 237              		.weak	HAL_GetTick
 238              		.thumb
 239              		.thumb_func
 241              	HAL_GetTick:
 242              	.LFB70:
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 243              		.loc 1 321 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccqdGmFz.s 			page 11


 247              		@ link register save eliminated.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 248              		.loc 1 322 0
 249 0000 014B     		ldr	r3, .L22
 250 0002 1868     		ldr	r0, [r3]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 251              		.loc 1 323 0
 252 0004 7047     		bx	lr
 253              	.L23:
 254 0006 00BF     		.align	2
 255              	.L22:
 256 0008 00000000 		.word	uwTick
 257              		.cfi_endproc
 258              	.LFE70:
 260              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 261              		.align	2
 262              		.global	HAL_GetTickPrio
 263              		.thumb
 264              		.thumb_func
 266              	HAL_GetTickPrio:
 267              	.LFB71:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick priority
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 268              		.loc 1 330 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickPrio;
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 273              		.loc 1 332 0
 274 0000 014B     		ldr	r3, .L25
 275 0002 1868     		ldr	r0, [r3]
 276 0004 7047     		bx	lr
 277              	.L26:
 278 0006 00BF     		.align	2
 279              	.L25:
 280 0008 00000000 		.word	.LANCHOR1
 281              		.cfi_endproc
 282              	.LFE71:
 284              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 285              		.align	2
 286              		.global	HAL_SetTickFreq
 287              		.thumb
 288              		.thumb_func
 290              	HAL_SetTickFreq:
 291              	.LFB72:
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Status
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccqdGmFz.s 			page 12


 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 292              		.loc 1 339 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              	.LVL11:
 297 0000 08B5     		push	{r3, lr}
 298              	.LCFI3:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 3, -8
 301              		.cfi_offset 14, -4
 302              	.LVL12:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 303              		.loc 1 343 0
 304 0002 064B     		ldr	r3, .L31
 305 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0006 8342     		cmp	r3, r0
 307 0008 06D0     		beq	.L29
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickFreq = Freq;
 308              		.loc 1 345 0
 309 000a 044B     		ldr	r3, .L31
 310 000c 1870     		strb	r0, [r3]
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 311              		.loc 1 348 0
 312 000e 044B     		ldr	r3, .L31+4
 313 0010 1868     		ldr	r0, [r3]
 314              	.LVL13:
 315 0012 FFF7FEFF 		bl	HAL_InitTick
 316              	.LVL14:
 317 0016 08BD     		pop	{r3, pc}
 318              	.LVL15:
 319              	.L29:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 320              		.loc 1 340 0
 321 0018 0020     		movs	r0, #0
 322              	.LVL16:
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return status;
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 323              		.loc 1 352 0
 324 001a 08BD     		pop	{r3, pc}
 325              	.L32:
 326              		.align	2
 327              	.L31:
 328 001c 00000000 		.word	.LANCHOR0
 329 0020 00000000 		.word	.LANCHOR1
 330              		.cfi_endproc
 331              	.LFE72:
 333              		.section	.text.HAL_GetTickFreq,"ax",%progbits
ARM GAS  /tmp/ccqdGmFz.s 			page 13


 334              		.align	2
 335              		.global	HAL_GetTickFreq
 336              		.thumb
 337              		.thumb_func
 339              	HAL_GetTickFreq:
 340              	.LFB73:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return tick frequency.
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick period in Hz
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 341              		.loc 1 359 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickFreq;
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 346              		.loc 1 361 0
 347 0000 014B     		ldr	r3, .L34
 348 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 349 0004 7047     		bx	lr
 350              	.L35:
 351 0006 00BF     		.align	2
 352              	.L34:
 353 0008 00000000 		.word	.LANCHOR0
 354              		.cfi_endproc
 355              	.LFE73:
 357              		.section	.text.HAL_Delay,"ax",%progbits
 358              		.align	2
 359              		.weak	HAL_Delay
 360              		.thumb
 361              		.thumb_func
 363              	HAL_Delay:
 364              	.LFB74:
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 365              		.loc 1 375 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              	.LVL17:
 370 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccqdGmFz.s 			page 14


 371              	.LCFI4:
 372              		.cfi_def_cfa_offset 16
 373              		.cfi_offset 3, -16
 374              		.cfi_offset 4, -12
 375              		.cfi_offset 5, -8
 376              		.cfi_offset 14, -4
 377 0002 0446     		mov	r4, r0
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 378              		.loc 1 376 0
 379 0004 FFF7FEFF 		bl	HAL_GetTick
 380              	.LVL18:
 381 0008 0546     		mov	r5, r0
 382              	.LVL19:
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 383              		.loc 1 380 0
 384 000a B4F1FF3F 		cmp	r4, #-1
 385 000e 02D0     		beq	.L38
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 386              		.loc 1 382 0
 387 0010 044B     		ldr	r3, .L40
 388 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 389 0014 1C44     		add	r4, r4, r3
 390              	.LVL20:
 391              	.L38:
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 392              		.loc 1 385 0 discriminator 1
 393 0016 FFF7FEFF 		bl	HAL_GetTick
 394              	.LVL21:
 395 001a 401B     		subs	r0, r0, r5
 396 001c 8442     		cmp	r4, r0
 397 001e FAD8     		bhi	.L38
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 398              		.loc 1 388 0
 399 0020 38BD     		pop	{r3, r4, r5, pc}
 400              	.LVL22:
 401              	.L41:
 402 0022 00BF     		.align	2
 403              	.L40:
 404 0024 00000000 		.word	.LANCHOR0
 405              		.cfi_endproc
 406              	.LFE74:
 408              		.section	.text.HAL_SuspendTick,"ax",%progbits
 409              		.align	2
 410              		.weak	HAL_SuspendTick
 411              		.thumb
 412              		.thumb_func
 414              	HAL_SuspendTick:
 415              	.LFB75:
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccqdGmFz.s 			page 15


 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 416              		.loc 1 401 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 421              		.loc 1 403 0
 422 0000 024A     		ldr	r2, .L43
 423 0002 1368     		ldr	r3, [r2]
 424 0004 23F00203 		bic	r3, r3, #2
 425 0008 1360     		str	r3, [r2]
 426 000a 7047     		bx	lr
 427              	.L44:
 428              		.align	2
 429              	.L43:
 430 000c 10E000E0 		.word	-536813552
 431              		.cfi_endproc
 432              	.LFE75:
 434              		.section	.text.HAL_ResumeTick,"ax",%progbits
 435              		.align	2
 436              		.weak	HAL_ResumeTick
 437              		.thumb
 438              		.thumb_func
 440              	HAL_ResumeTick:
 441              	.LFB76:
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 442              		.loc 1 417 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
ARM GAS  /tmp/ccqdGmFz.s 			page 16


 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 447              		.loc 1 419 0
 448 0000 024A     		ldr	r2, .L46
 449 0002 1368     		ldr	r3, [r2]
 450 0004 43F00203 		orr	r3, r3, #2
 451 0008 1360     		str	r3, [r2]
 452 000a 7047     		bx	lr
 453              	.L47:
 454              		.align	2
 455              	.L46:
 456 000c 10E000E0 		.word	-536813552
 457              		.cfi_endproc
 458              	.LFE76:
 460              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 461              		.align	2
 462              		.global	HAL_GetHalVersion
 463              		.thumb
 464              		.thumb_func
 466              	HAL_GetHalVersion:
 467              	.LFB77:
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 468              		.loc 1 427 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 473              		.loc 1 429 0
 474 0000 0048     		ldr	r0, .L49
 475 0002 7047     		bx	lr
 476              	.L50:
 477              		.align	2
 478              	.L49:
 479 0004 00020101 		.word	16843264
 480              		.cfi_endproc
 481              	.LFE77:
 483              		.section	.text.HAL_GetREVID,"ax",%progbits
 484              		.align	2
 485              		.global	HAL_GetREVID
 486              		.thumb
 487              		.thumb_func
 489              	HAL_GetREVID:
 490              	.LFB78:
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
ARM GAS  /tmp/ccqdGmFz.s 			page 17


 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 491              		.loc 1 443 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 496              		.loc 1 444 0
 497 0000 014B     		ldr	r3, .L52
 498 0002 1868     		ldr	r0, [r3]
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 499              		.loc 1 445 0
 500 0004 000C     		lsrs	r0, r0, #16
 501 0006 7047     		bx	lr
 502              	.L53:
 503              		.align	2
 504              	.L52:
 505 0008 002004E0 		.word	-536600576
 506              		.cfi_endproc
 507              	.LFE78:
 509              		.section	.text.HAL_GetDEVID,"ax",%progbits
 510              		.align	2
 511              		.global	HAL_GetDEVID
 512              		.thumb
 513              		.thumb_func
 515              	HAL_GetDEVID:
 516              	.LFB79:
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 517              		.loc 1 459 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 522              		.loc 1 460 0
 523 0000 024B     		ldr	r3, .L55
ARM GAS  /tmp/ccqdGmFz.s 			page 18


 524 0002 1868     		ldr	r0, [r3]
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 525              		.loc 1 461 0
 526 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 527 0008 7047     		bx	lr
 528              	.L56:
 529 000a 00BF     		.align	2
 530              	.L55:
 531 000c 002004E0 		.word	-536600576
 532              		.cfi_endproc
 533              	.LFE79:
 535              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 536              		.align	2
 537              		.global	HAL_DBGMCU_EnableDBGSleepMode
 538              		.thumb
 539              		.thumb_func
 541              	HAL_DBGMCU_EnableDBGSleepMode:
 542              	.LFB80:
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 543              		.loc 1 468 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 548              		.loc 1 469 0
 549 0000 024A     		ldr	r2, .L58
 550 0002 5368     		ldr	r3, [r2, #4]
 551 0004 43F00103 		orr	r3, r3, #1
 552 0008 5360     		str	r3, [r2, #4]
 553 000a 7047     		bx	lr
 554              	.L59:
 555              		.align	2
 556              	.L58:
 557 000c 002004E0 		.word	-536600576
 558              		.cfi_endproc
 559              	.LFE80:
 561              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 562              		.align	2
 563              		.global	HAL_DBGMCU_DisableDBGSleepMode
 564              		.thumb
 565              		.thumb_func
 567              	HAL_DBGMCU_DisableDBGSleepMode:
 568              	.LFB81:
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
ARM GAS  /tmp/ccqdGmFz.s 			page 19


 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 569              		.loc 1 484 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 574              		.loc 1 485 0
 575 0000 024A     		ldr	r2, .L61
 576 0002 5368     		ldr	r3, [r2, #4]
 577 0004 23F00103 		bic	r3, r3, #1
 578 0008 5360     		str	r3, [r2, #4]
 579 000a 7047     		bx	lr
 580              	.L62:
 581              		.align	2
 582              	.L61:
 583 000c 002004E0 		.word	-536600576
 584              		.cfi_endproc
 585              	.LFE81:
 587              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 588              		.align	2
 589              		.global	HAL_DBGMCU_EnableDBGStopMode
 590              		.thumb
 591              		.thumb_func
 593              	HAL_DBGMCU_EnableDBGStopMode:
 594              	.LFB82:
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
ARM GAS  /tmp/ccqdGmFz.s 			page 20


 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 595              		.loc 1 514 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 600              		.loc 1 515 0
 601 0000 024A     		ldr	r2, .L64
 602 0002 5368     		ldr	r3, [r2, #4]
 603 0004 43F00203 		orr	r3, r3, #2
 604 0008 5360     		str	r3, [r2, #4]
 605 000a 7047     		bx	lr
 606              	.L65:
 607              		.align	2
 608              	.L64:
 609 000c 002004E0 		.word	-536600576
 610              		.cfi_endproc
 611              	.LFE82:
 613              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 614              		.align	2
 615              		.global	HAL_DBGMCU_DisableDBGStopMode
 616              		.thumb
 617              		.thumb_func
 619              	HAL_DBGMCU_DisableDBGStopMode:
 620              	.LFB83:
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 621              		.loc 1 530 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 626              		.loc 1 531 0
 627 0000 024A     		ldr	r2, .L67
 628 0002 5368     		ldr	r3, [r2, #4]
 629 0004 23F00203 		bic	r3, r3, #2
 630 0008 5360     		str	r3, [r2, #4]
 631 000a 7047     		bx	lr
ARM GAS  /tmp/ccqdGmFz.s 			page 21


 632              	.L68:
 633              		.align	2
 634              	.L67:
 635 000c 002004E0 		.word	-536600576
 636              		.cfi_endproc
 637              	.LFE83:
 639              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 640              		.align	2
 641              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 642              		.thumb
 643              		.thumb_func
 645              	HAL_DBGMCU_EnableDBGStandbyMode:
 646              	.LFB84:
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 647              		.loc 1 546 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 652              		.loc 1 547 0
 653 0000 024A     		ldr	r2, .L70
 654 0002 5368     		ldr	r3, [r2, #4]
 655 0004 43F00403 		orr	r3, r3, #4
 656 0008 5360     		str	r3, [r2, #4]
 657 000a 7047     		bx	lr
 658              	.L71:
 659              		.align	2
 660              	.L70:
 661 000c 002004E0 		.word	-536600576
 662              		.cfi_endproc
 663              	.LFE84:
 665              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 666              		.align	2
 667              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 668              		.thumb
 669              		.thumb_func
 671              	HAL_DBGMCU_DisableDBGStandbyMode:
 672              	.LFB85:
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
ARM GAS  /tmp/ccqdGmFz.s 			page 22


 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 673              		.loc 1 562 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 678              		.loc 1 563 0
 679 0000 024A     		ldr	r2, .L73
 680 0002 5368     		ldr	r3, [r2, #4]
 681 0004 23F00403 		bic	r3, r3, #4
 682 0008 5360     		str	r3, [r2, #4]
 683 000a 7047     		bx	lr
 684              	.L74:
 685              		.align	2
 686              	.L73:
 687 000c 002004E0 		.word	-536600576
 688              		.cfi_endproc
 689              	.LFE85:
 691              		.section	.text.HAL_GetUID,"ax",%progbits
 692              		.align	2
 693              		.global	HAL_GetUID
 694              		.thumb
 695              		.thumb_func
 697              	HAL_GetUID:
 698              	.LFB86:
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID pointer to 3 words array.
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 699              		.loc 1 572 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704              	.LVL23:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 705              		.loc 1 573 0
 706 0000 044B     		ldr	r3, .L76
 707 0002 1B68     		ldr	r3, [r3]
 708 0004 0360     		str	r3, [r0]
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
ARM GAS  /tmp/ccqdGmFz.s 			page 23


 709              		.loc 1 574 0
 710 0006 044B     		ldr	r3, .L76+4
 711 0008 1B68     		ldr	r3, [r3]
 712 000a 4360     		str	r3, [r0, #4]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 713              		.loc 1 575 0
 714 000c 034B     		ldr	r3, .L76+8
 715 000e 1B68     		ldr	r3, [r3]
 716 0010 8360     		str	r3, [r0, #8]
 717 0012 7047     		bx	lr
 718              	.L77:
 719              		.align	2
 720              	.L76:
 721 0014 E8F7FF1F 		.word	536868840
 722 0018 ECF7FF1F 		.word	536868844
 723 001c F0F7FF1F 		.word	536868848
 724              		.cfi_endproc
 725              	.LFE86:
 727              		.global	uwTickFreq
 728              		.global	uwTickPrio
 729              		.comm	uwTick,4,4
 730              		.section	.data.uwTickPrio,"aw",%progbits
 731              		.align	2
 732              		.set	.LANCHOR1,. + 0
 735              	uwTickPrio:
 736 0000 10000000 		.word	16
 737              		.section	.data.uwTickFreq,"aw",%progbits
 738              		.set	.LANCHOR0,. + 0
 741              	uwTickFreq:
 742 0000 01       		.byte	1
 743              		.text
 744              	.Letext0:
 745              		.file 2 "/home/user/Library/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_ty
 746              		.file 3 "/home/user/Library/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 747              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 748              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 749              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 750              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 751              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 752              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccqdGmFz.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal.c
     /tmp/ccqdGmFz.s:20     .text.HAL_MspInit:00000000 $t
     /tmp/ccqdGmFz.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccqdGmFz.s:38     .text.HAL_MspDeInit:00000000 $t
     /tmp/ccqdGmFz.s:43     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccqdGmFz.s:55     .text.HAL_DeInit:00000000 $t
     /tmp/ccqdGmFz.s:60     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccqdGmFz.s:92     .text.HAL_DeInit:0000001c $d
     /tmp/ccqdGmFz.s:97     .text.HAL_InitTick:00000000 $t
     /tmp/ccqdGmFz.s:102    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccqdGmFz.s:157    .text.HAL_InitTick:00000040 $d
     /tmp/ccqdGmFz.s:164    .text.HAL_Init:00000000 $t
     /tmp/ccqdGmFz.s:169    .text.HAL_Init:00000000 HAL_Init
     /tmp/ccqdGmFz.s:202    .text.HAL_Init:00000020 $d
     /tmp/ccqdGmFz.s:207    .text.HAL_IncTick:00000000 $t
     /tmp/ccqdGmFz.s:212    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccqdGmFz.s:230    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
     /tmp/ccqdGmFz.s:236    .text.HAL_GetTick:00000000 $t
     /tmp/ccqdGmFz.s:241    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccqdGmFz.s:256    .text.HAL_GetTick:00000008 $d
     /tmp/ccqdGmFz.s:261    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccqdGmFz.s:266    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccqdGmFz.s:280    .text.HAL_GetTickPrio:00000008 $d
     /tmp/ccqdGmFz.s:285    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccqdGmFz.s:290    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccqdGmFz.s:328    .text.HAL_SetTickFreq:0000001c $d
     /tmp/ccqdGmFz.s:334    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccqdGmFz.s:339    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccqdGmFz.s:353    .text.HAL_GetTickFreq:00000008 $d
     /tmp/ccqdGmFz.s:358    .text.HAL_Delay:00000000 $t
     /tmp/ccqdGmFz.s:363    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccqdGmFz.s:404    .text.HAL_Delay:00000024 $d
     /tmp/ccqdGmFz.s:409    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccqdGmFz.s:414    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccqdGmFz.s:430    .text.HAL_SuspendTick:0000000c $d
     /tmp/ccqdGmFz.s:435    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccqdGmFz.s:440    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccqdGmFz.s:456    .text.HAL_ResumeTick:0000000c $d
     /tmp/ccqdGmFz.s:461    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccqdGmFz.s:466    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccqdGmFz.s:479    .text.HAL_GetHalVersion:00000004 $d
     /tmp/ccqdGmFz.s:484    .text.HAL_GetREVID:00000000 $t
     /tmp/ccqdGmFz.s:489    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccqdGmFz.s:505    .text.HAL_GetREVID:00000008 $d
     /tmp/ccqdGmFz.s:510    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccqdGmFz.s:515    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccqdGmFz.s:531    .text.HAL_GetDEVID:0000000c $d
     /tmp/ccqdGmFz.s:536    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
     /tmp/ccqdGmFz.s:541    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccqdGmFz.s:557    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
     /tmp/ccqdGmFz.s:562    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
     /tmp/ccqdGmFz.s:567    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccqdGmFz.s:583    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
     /tmp/ccqdGmFz.s:588    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccqdGmFz.s:593    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
ARM GAS  /tmp/ccqdGmFz.s 			page 25


     /tmp/ccqdGmFz.s:609    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
     /tmp/ccqdGmFz.s:614    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccqdGmFz.s:619    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccqdGmFz.s:635    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
     /tmp/ccqdGmFz.s:640    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccqdGmFz.s:645    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccqdGmFz.s:661    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
     /tmp/ccqdGmFz.s:666    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccqdGmFz.s:671    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccqdGmFz.s:687    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
     /tmp/ccqdGmFz.s:692    .text.HAL_GetUID:00000000 $t
     /tmp/ccqdGmFz.s:697    .text.HAL_GetUID:00000000 HAL_GetUID
     /tmp/ccqdGmFz.s:721    .text.HAL_GetUID:00000014 $d
     /tmp/ccqdGmFz.s:741    .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccqdGmFz.s:735    .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccqdGmFz.s:731    .data.uwTickPrio:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
