ARM GAS  /tmp/ccQPxto7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	UART_EndTxTransfer:
  25              	.LFB108:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART pins (TX as alternate function pull-up, RX as alternate functi
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  /tmp/ccQPxto7.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver:
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
ARM GAS  /tmp/ccQPxto7.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /tmp/ccQPxto7.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccQPxto7.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  /tmp/ccQPxto7.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  /tmp/ccQPxto7.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */ 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  /tmp/ccQPxto7.s 			page 8


 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
ARM GAS  /tmp/ccQPxto7.s 			page 9


 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address: USART address
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
ARM GAS  /tmp/ccQPxto7.s 			page 10


 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccQPxto7.s 			page 11


 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             after finishing transfer.  
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             using DMA mode.
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             a communication error is detected.
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
ARM GAS  /tmp/ccQPxto7.s 			page 12


 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           can't be useful.
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccQPxto7.s 			page 13


 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  /tmp/ccQPxto7.s 			page 14


 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receive an amount of data in blocking mode. 
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*)pData;
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       } 
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
ARM GAS  /tmp/ccQPxto7.s 			page 15


 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U)) 
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccQPxto7.s 			page 16


 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/ccQPxto7.s 			page 17


 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccQPxto7.s 			page 18


 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
ARM GAS  /tmp/ccQPxto7.s 			page 19


1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in the UART CR3 register */
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 20


1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 21


1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQPxto7.s 			page 22


1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
ARM GAS  /tmp/ccQPxto7.s 			page 23


1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 24


1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
ARM GAS  /tmp/ccQPxto7.s 			page 25


1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
ARM GAS  /tmp/ccQPxto7.s 			page 26


1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /tmp/ccQPxto7.s 			page 27


1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 28


1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(errorflags == RESET)
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
ARM GAS  /tmp/ccQPxto7.s 			page 29


1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
ARM GAS  /tmp/ccQPxto7.s 			page 30


1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccQPxto7.s 			page 31


1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccQPxto7.s 			page 32


1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart); 
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
ARM GAS  /tmp/ccQPxto7.s 			page 33


1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccQPxto7.s 			page 34


1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 35


1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
ARM GAS  /tmp/ccQPxto7.s 			page 36


1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  /tmp/ccQPxto7.s 			page 37


2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccQPxto7.s 			page 38


2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
ARM GAS  /tmp/ccQPxto7.s 			page 39


2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  27              		.loc 1 2175 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2177 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 D368     		ldr	r3, [r2, #12]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 D360     		str	r3, [r2, #12]
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 2180 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F83930 		strb	r3, [r0, #57]
  41 0010 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE108:
  45 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
ARM GAS  /tmp/ccQPxto7.s 			page 40


  46              		.align	2
  47              		.thumb
  48              		.thumb_func
  50              	UART_EndRxTransfer:
  51              	.LFB109:
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  52              		.loc 1 2189 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  58              		.loc 1 2191 0
  59 0000 0268     		ldr	r2, [r0]
  60 0002 D368     		ldr	r3, [r2, #12]
  61 0004 23F49073 		bic	r3, r3, #288
  62 0008 D360     		str	r3, [r2, #12]
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  63              		.loc 1 2192 0
  64 000a 0268     		ldr	r2, [r0]
  65 000c 5369     		ldr	r3, [r2, #20]
  66 000e 23F00103 		bic	r3, r3, #1
  67 0012 5361     		str	r3, [r2, #20]
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  68              		.loc 1 2195 0
  69 0014 2023     		movs	r3, #32
  70 0016 80F83A30 		strb	r3, [r0, #58]
  71 001a 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE109:
  75              		.section	.text.UART_Transmit_IT,"ax",%progbits
  76              		.align	2
  77              		.thumb
  78              		.thumb_func
  80              	UART_Transmit_IT:
  81              	.LFB115:
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccQPxto7.s 			page 41


2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
ARM GAS  /tmp/ccQPxto7.s 			page 42


2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccQPxto7.s 			page 43


2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  82              		.loc 1 2338 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL2:
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  88              		.loc 1 2342 0
  89 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  90 0004 DBB2     		uxtb	r3, r3
  91 0006 212B     		cmp	r3, #33
  92 0008 2BD1     		bne	.L8
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
  93              		.loc 1 2344 0
  94 000a 8368     		ldr	r3, [r0, #8]
  95 000c B3F5805F 		cmp	r3, #4096
  96 0010 0FD1     		bne	.L5
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
  97              		.loc 1 2346 0
  98 0012 036A     		ldr	r3, [r0, #32]
  99              	.LVL3:
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 100              		.loc 1 2347 0
 101 0014 0268     		ldr	r2, [r0]
 102 0016 1B88     		ldrh	r3, [r3]
 103              	.LVL4:
 104 0018 C3F30803 		ubfx	r3, r3, #0, #9
 105 001c 5360     		str	r3, [r2, #4]
 106              	.LVL5:
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 107              		.loc 1 2348 0
 108 001e 0369     		ldr	r3, [r0, #16]
ARM GAS  /tmp/ccQPxto7.s 			page 44


 109 0020 1BB9     		cbnz	r3, .L6
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 110              		.loc 1 2350 0
 111 0022 036A     		ldr	r3, [r0, #32]
 112 0024 0233     		adds	r3, r3, #2
 113 0026 0362     		str	r3, [r0, #32]
 114 0028 09E0     		b	.L7
 115              	.L6:
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 116              		.loc 1 2354 0
 117 002a 036A     		ldr	r3, [r0, #32]
 118 002c 0133     		adds	r3, r3, #1
 119 002e 0362     		str	r3, [r0, #32]
 120 0030 05E0     		b	.L7
 121              	.L5:
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     } 
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 122              		.loc 1 2359 0
 123 0032 0268     		ldr	r2, [r0]
 124 0034 036A     		ldr	r3, [r0, #32]
 125 0036 591C     		adds	r1, r3, #1
 126 0038 0162     		str	r1, [r0, #32]
 127 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128 003c 5360     		str	r3, [r2, #4]
 129              	.L7:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 130              		.loc 1 2362 0
 131 003e C38C     		ldrh	r3, [r0, #38]
 132 0040 9BB2     		uxth	r3, r3
 133 0042 013B     		subs	r3, r3, #1
 134 0044 9BB2     		uxth	r3, r3
 135 0046 C384     		strh	r3, [r0, #38]	@ movhi
 136 0048 6BB9     		cbnz	r3, .L9
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 137              		.loc 1 2365 0
 138 004a 0268     		ldr	r2, [r0]
 139 004c D368     		ldr	r3, [r2, #12]
 140 004e 23F08003 		bic	r3, r3, #128
 141 0052 D360     		str	r3, [r2, #12]
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 142              		.loc 1 2368 0
 143 0054 0268     		ldr	r2, [r0]
 144 0056 D368     		ldr	r3, [r2, #12]
 145 0058 43F04003 		orr	r3, r3, #64
ARM GAS  /tmp/ccQPxto7.s 			page 45


 146 005c D360     		str	r3, [r2, #12]
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 147              		.loc 1 2370 0
 148 005e 0020     		movs	r0, #0
 149              	.LVL6:
 150 0060 7047     		bx	lr
 151              	.LVL7:
 152              	.L8:
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 153              		.loc 1 2374 0
 154 0062 0220     		movs	r0, #2
 155              	.LVL8:
 156 0064 7047     		bx	lr
 157              	.LVL9:
 158              	.L9:
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 159              		.loc 1 2370 0
 160 0066 0020     		movs	r0, #0
 161              	.LVL10:
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 162              		.loc 1 2376 0
 163 0068 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE115:
 167 006a 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 168              		.align	2
 169              		.thumb
 170              		.thumb_func
 172              	UART_SetConfig:
 173              	.LFB118:
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/ccQPxto7.s 			page 46


2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the IRDA Data Register not empty Interrupt */
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccQPxto7.s 			page 47


2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 174              		.loc 1 2467 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL11:
 179 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 32
 182              		.cfi_offset 3, -32
 183              		.cfi_offset 4, -28
 184              		.cfi_offset 5, -24
 185              		.cfi_offset 6, -20
 186              		.cfi_offset 7, -16
 187              		.cfi_offset 8, -12
 188              		.cfi_offset 9, -8
 189              		.cfi_offset 14, -4
 190 0004 8146     		mov	r9, r0
 191              	.LVL12:
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 192              		.loc 1 2479 0
 193 0006 0168     		ldr	r1, [r0]
 194 0008 0B69     		ldr	r3, [r1, #16]
 195 000a 23F44052 		bic	r2, r3, #12288
 196 000e C368     		ldr	r3, [r0, #12]
 197 0010 1343     		orrs	r3, r3, r2
 198 0012 0B61     		str	r3, [r1, #16]
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 48


2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 199              		.loc 1 2494 0
 200 0014 8168     		ldr	r1, [r0, #8]
 201 0016 0369     		ldr	r3, [r0, #16]
 202 0018 1943     		orrs	r1, r1, r3
 203 001a 4369     		ldr	r3, [r0, #20]
 204 001c 1943     		orrs	r1, r1, r3
 205              	.LVL13:
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
 206              		.loc 1 2495 0
 207 001e 0068     		ldr	r0, [r0]
 208              	.LVL14:
 209 0020 C268     		ldr	r2, [r0, #12]
 210 0022 22F4B053 		bic	r3, r2, #5632
 211 0026 23F00C03 		bic	r3, r3, #12
 212 002a 0B43     		orrs	r3, r3, r1
 213 002c C360     		str	r3, [r0, #12]
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 214              		.loc 1 2502 0
 215 002e D9F80010 		ldr	r1, [r9]
 216              	.LVL15:
 217 0032 4B69     		ldr	r3, [r1, #20]
 218 0034 23F44072 		bic	r2, r3, #768
 219 0038 D9F81830 		ldr	r3, [r9, #24]
 220 003c 1343     		orrs	r3, r3, r2
 221 003e 4B61     		str	r3, [r1, #20]
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Over Sampling */
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
ARM GAS  /tmp/ccQPxto7.s 			page 49


2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 222              		.loc 1 2532 0
 223 0040 D9F80050 		ldr	r5, [r9]
 224 0044 5B4B     		ldr	r3, .L14
 225 0046 9D42     		cmp	r5, r3
 226 0048 59D1     		bne	.L11
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 227              		.loc 1 2534 0
 228 004a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 229              	.LVL16:
 230 004e 00EB8000 		add	r0, r0, r0, lsl #2
 231 0052 00EB8000 		add	r0, r0, r0, lsl #2
 232 0056 D9F80440 		ldr	r4, [r9, #4]
 233 005a A400     		lsls	r4, r4, #2
 234 005c B0FBF4F4 		udiv	r4, r0, r4
 235 0060 554E     		ldr	r6, .L14+4
 236 0062 A6FB0434 		umull	r3, r4, r6, r4
 237 0066 6409     		lsrs	r4, r4, #5
 238 0068 2401     		lsls	r4, r4, #4
 239 006a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 240              	.LVL17:
 241 006e 00EB8000 		add	r0, r0, r0, lsl #2
 242 0072 00EB8000 		add	r0, r0, r0, lsl #2
 243 0076 D9F80430 		ldr	r3, [r9, #4]
 244 007a 9B00     		lsls	r3, r3, #2
 245 007c B0FBF3F7 		udiv	r7, r0, r3
 246 0080 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 247              	.LVL18:
 248 0084 00EB8000 		add	r0, r0, r0, lsl #2
 249 0088 00EB8000 		add	r0, r0, r0, lsl #2
 250 008c D9F80430 		ldr	r3, [r9, #4]
 251 0090 9B00     		lsls	r3, r3, #2
 252 0092 B0FBF3F3 		udiv	r3, r0, r3
 253 0096 A6FB0323 		umull	r2, r3, r6, r3
 254 009a 5B09     		lsrs	r3, r3, #5
 255 009c 4FF06408 		mov	r8, #100
 256 00a0 08FB1373 		mls	r3, r8, r3, r7
 257 00a4 1B01     		lsls	r3, r3, #4
 258 00a6 3233     		adds	r3, r3, #50
 259 00a8 A6FB0323 		umull	r2, r3, r6, r3
 260 00ac 5B09     		lsrs	r3, r3, #5
 261 00ae 03F0F003 		and	r3, r3, #240
 262 00b2 1C44     		add	r4, r4, r3
 263 00b4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 264              	.LVL19:
 265 00b8 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/ccQPxto7.s 			page 50


 266 00bc 00EB8000 		add	r0, r0, r0, lsl #2
 267 00c0 D9F80430 		ldr	r3, [r9, #4]
 268 00c4 9B00     		lsls	r3, r3, #2
 269 00c6 B0FBF3F7 		udiv	r7, r0, r3
 270 00ca FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 271              	.LVL20:
 272 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 273 00d2 00EB8000 		add	r0, r0, r0, lsl #2
 274 00d6 D9F80430 		ldr	r3, [r9, #4]
 275 00da 9B00     		lsls	r3, r3, #2
 276 00dc B0FBF3F3 		udiv	r3, r0, r3
 277 00e0 A6FB0323 		umull	r2, r3, r6, r3
 278 00e4 5B09     		lsrs	r3, r3, #5
 279 00e6 08FB1373 		mls	r3, r8, r3, r7
 280 00ea 1B01     		lsls	r3, r3, #4
 281 00ec 3233     		adds	r3, r3, #50
 282 00ee A6FB0323 		umull	r2, r3, r6, r3
 283 00f2 C3F34313 		ubfx	r3, r3, #5, #4
 284 00f6 1C44     		add	r4, r4, r3
 285 00f8 AC60     		str	r4, [r5, #8]
 286 00fa BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 287              	.LVL21:
 288              	.L11:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 289              		.loc 1 2538 0
 290 00fe FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 291              	.LVL22:
 292 0102 00EB8000 		add	r0, r0, r0, lsl #2
 293 0106 00EB8000 		add	r0, r0, r0, lsl #2
 294 010a D9F80440 		ldr	r4, [r9, #4]
 295 010e A400     		lsls	r4, r4, #2
 296 0110 B0FBF4F4 		udiv	r4, r0, r4
 297 0114 284E     		ldr	r6, .L14+4
 298 0116 A6FB0434 		umull	r3, r4, r6, r4
 299 011a 6409     		lsrs	r4, r4, #5
 300 011c 2401     		lsls	r4, r4, #4
 301 011e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 302              	.LVL23:
 303 0122 00EB8000 		add	r0, r0, r0, lsl #2
 304 0126 00EB8000 		add	r0, r0, r0, lsl #2
 305 012a D9F80430 		ldr	r3, [r9, #4]
 306 012e 9B00     		lsls	r3, r3, #2
 307 0130 B0FBF3F7 		udiv	r7, r0, r3
 308 0134 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 309              	.LVL24:
 310 0138 00EB8000 		add	r0, r0, r0, lsl #2
 311 013c 00EB8000 		add	r0, r0, r0, lsl #2
 312 0140 D9F80430 		ldr	r3, [r9, #4]
 313 0144 9B00     		lsls	r3, r3, #2
 314 0146 B0FBF3F3 		udiv	r3, r0, r3
 315 014a A6FB0323 		umull	r2, r3, r6, r3
 316 014e 5B09     		lsrs	r3, r3, #5
 317 0150 4FF06408 		mov	r8, #100
 318 0154 08FB1373 		mls	r3, r8, r3, r7
ARM GAS  /tmp/ccQPxto7.s 			page 51


 319 0158 1B01     		lsls	r3, r3, #4
 320 015a 3233     		adds	r3, r3, #50
 321 015c A6FB0323 		umull	r2, r3, r6, r3
 322 0160 5B09     		lsrs	r3, r3, #5
 323 0162 03F0F003 		and	r3, r3, #240
 324 0166 1C44     		add	r4, r4, r3
 325 0168 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 326              	.LVL25:
 327 016c 00EB8000 		add	r0, r0, r0, lsl #2
 328 0170 00EB8000 		add	r0, r0, r0, lsl #2
 329 0174 D9F80430 		ldr	r3, [r9, #4]
 330 0178 9B00     		lsls	r3, r3, #2
 331 017a B0FBF3F7 		udiv	r7, r0, r3
 332 017e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 333              	.LVL26:
 334 0182 00EB8000 		add	r0, r0, r0, lsl #2
 335 0186 00EB8000 		add	r0, r0, r0, lsl #2
 336 018a D9F80430 		ldr	r3, [r9, #4]
 337 018e 9B00     		lsls	r3, r3, #2
 338 0190 B0FBF3F3 		udiv	r3, r0, r3
 339 0194 A6FB0323 		umull	r2, r3, r6, r3
 340 0198 5B09     		lsrs	r3, r3, #5
 341 019a 08FB1373 		mls	r3, r8, r3, r7
 342 019e 1B01     		lsls	r3, r3, #4
 343 01a0 3233     		adds	r3, r3, #50
 344 01a2 A6FB0323 		umull	r2, r3, r6, r3
 345 01a6 C3F34313 		ubfx	r3, r3, #5, #4
 346 01aa 1C44     		add	r4, r4, r3
 347 01ac AC60     		str	r4, [r5, #8]
 348 01ae BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 349              	.LVL27:
 350              	.L15:
 351 01b2 00BF     		.align	2
 352              	.L14:
 353 01b4 00380140 		.word	1073821696
 354 01b8 1F85EB51 		.word	1374389535
 355              		.cfi_endproc
 356              	.LFE118:
 358              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 359              		.align	2
 360              		.thumb
 361              		.thumb_func
 363              	UART_WaitOnFlagUntilTimeout:
 364              	.LFB107:
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
 365              		.loc 1 2142 0
 366              		.cfi_startproc
 367              		@ args = 4, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              	.LVL28:
 370 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 371              	.LCFI1:
 372              		.cfi_def_cfa_offset 24
 373              		.cfi_offset 4, -24
 374              		.cfi_offset 5, -20
 375              		.cfi_offset 6, -16
 376              		.cfi_offset 7, -12
ARM GAS  /tmp/ccQPxto7.s 			page 52


 377              		.cfi_offset 8, -8
 378              		.cfi_offset 14, -4
 379 0004 0546     		mov	r5, r0
 380 0006 0F46     		mov	r7, r1
 381 0008 1646     		mov	r6, r2
 382 000a 9846     		mov	r8, r3
 383 000c 069C     		ldr	r4, [sp, #24]
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 384              		.loc 1 2144 0
 385 000e 1EE0     		b	.L18
 386              	.LVL29:
 387              	.L21:
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 388              		.loc 1 2147 0
 389 0010 B4F1FF3F 		cmp	r4, #-1
 390 0014 1BD0     		beq	.L18
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 391              		.loc 1 2149 0
 392 0016 2CB1     		cbz	r4, .L19
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 393              		.loc 1 2149 0 is_stmt 0 discriminator 1
 394 0018 FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL30:
 396 001c C8EB0000 		rsb	r0, r8, r0
 397 0020 8442     		cmp	r4, r0
 398 0022 14D2     		bcs	.L18
 399              	.L19:
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 400              		.loc 1 2152 0 is_stmt 1
 401 0024 2A68     		ldr	r2, [r5]
 402 0026 D368     		ldr	r3, [r2, #12]
 403 0028 23F4D073 		bic	r3, r3, #416
 404 002c D360     		str	r3, [r2, #12]
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 405              		.loc 1 2153 0
 406 002e 2A68     		ldr	r2, [r5]
 407 0030 5369     		ldr	r3, [r2, #20]
 408 0032 23F00103 		bic	r3, r3, #1
 409 0036 5361     		str	r3, [r2, #20]
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 410              		.loc 1 2155 0
 411 0038 2023     		movs	r3, #32
 412 003a 85F83930 		strb	r3, [r5, #57]
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 413              		.loc 1 2156 0
 414 003e 85F83A30 		strb	r3, [r5, #58]
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 415              		.loc 1 2159 0
 416 0042 0023     		movs	r3, #0
 417 0044 85F83830 		strb	r3, [r5, #56]
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 418              		.loc 1 2161 0
 419 0048 0320     		movs	r0, #3
 420 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 421              	.LVL31:
 422              	.L18:
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/ccQPxto7.s 			page 53


 423              		.loc 1 2144 0
 424 004e 2B68     		ldr	r3, [r5]
 425 0050 1B68     		ldr	r3, [r3]
 426 0052 37EA0303 		bics	r3, r7, r3
 427 0056 0CBF     		ite	eq
 428 0058 0123     		moveq	r3, #1
 429 005a 0023     		movne	r3, #0
 430 005c B342     		cmp	r3, r6
 431 005e D7D0     		beq	.L21
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 432              		.loc 1 2166 0
 433 0060 0020     		movs	r0, #0
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 434              		.loc 1 2167 0
 435 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 436              		.cfi_endproc
 437              	.LFE107:
 439 0066 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 440              		.align	2
 441              		.weak	HAL_UART_MspInit
 442              		.thumb
 443              		.thumb_func
 445              	HAL_UART_MspInit:
 446              	.LFB69:
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 447              		.loc 1 550 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452              	.LVL32:
 453 0000 7047     		bx	lr
 454              		.cfi_endproc
 455              	.LFE69:
 457 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 458              		.align	2
 459              		.global	HAL_UART_Init
 460              		.thumb
 461              		.thumb_func
 463              	HAL_UART_Init:
 464              	.LFB64:
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 465              		.loc 1 260 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL33:
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 470              		.loc 1 262 0
 471 0000 68B3     		cbz	r0, .L27
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 472              		.loc 1 260 0
 473 0002 10B5     		push	{r4, lr}
 474              	.LCFI2:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQPxto7.s 			page 54


 478 0004 0446     		mov	r4, r0
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 479              		.loc 1 283 0
 480 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 481 000a 13F0FF0F 		tst	r3, #255
 482 000e 04D1     		bne	.L26
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 483              		.loc 1 286 0
 484 0010 0023     		movs	r3, #0
 485 0012 80F83830 		strb	r3, [r0, #56]
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 486              		.loc 1 289 0
 487 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 488              	.LVL34:
 489              	.L26:
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 490              		.loc 1 292 0
 491 001a 2423     		movs	r3, #36
 492 001c 84F83930 		strb	r3, [r4, #57]
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 493              		.loc 1 295 0
 494 0020 2268     		ldr	r2, [r4]
 495 0022 D368     		ldr	r3, [r2, #12]
 496 0024 23F40053 		bic	r3, r3, #8192
 497 0028 D360     		str	r3, [r2, #12]
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 498              		.loc 1 298 0
 499 002a 2046     		mov	r0, r4
 500 002c FFF7FEFF 		bl	UART_SetConfig
 501              	.LVL35:
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 502              		.loc 1 303 0
 503 0030 2268     		ldr	r2, [r4]
 504 0032 1369     		ldr	r3, [r2, #16]
 505 0034 23F49043 		bic	r3, r3, #18432
 506 0038 1361     		str	r3, [r2, #16]
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 507              		.loc 1 304 0
 508 003a 2268     		ldr	r2, [r4]
 509 003c 5369     		ldr	r3, [r2, #20]
 510 003e 23F02A03 		bic	r3, r3, #42
 511 0042 5361     		str	r3, [r2, #20]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 512              		.loc 1 307 0
 513 0044 2268     		ldr	r2, [r4]
 514 0046 D368     		ldr	r3, [r2, #12]
 515 0048 43F40053 		orr	r3, r3, #8192
 516 004c D360     		str	r3, [r2, #12]
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 517              		.loc 1 310 0
 518 004e 0020     		movs	r0, #0
 519 0050 E063     		str	r0, [r4, #60]
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 520              		.loc 1 311 0
 521 0052 2023     		movs	r3, #32
 522 0054 84F83930 		strb	r3, [r4, #57]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/ccQPxto7.s 			page 55


 523              		.loc 1 312 0
 524 0058 84F83A30 		strb	r3, [r4, #58]
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 525              		.loc 1 314 0
 526 005c 10BD     		pop	{r4, pc}
 527              	.LVL36:
 528              	.L27:
 529              	.LCFI3:
 530              		.cfi_def_cfa_offset 0
 531              		.cfi_restore 4
 532              		.cfi_restore 14
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 533              		.loc 1 264 0
 534 005e 0120     		movs	r0, #1
 535              	.LVL37:
 536 0060 7047     		bx	lr
 537              		.cfi_endproc
 538              	.LFE64:
 540 0062 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 541              		.align	2
 542              		.global	HAL_HalfDuplex_Init
 543              		.thumb
 544              		.thumb_func
 546              	HAL_HalfDuplex_Init:
 547              	.LFB65:
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 548              		.loc 1 325 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              	.LVL38:
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 553              		.loc 1 327 0
 554 0000 0028     		cmp	r0, #0
 555 0002 32D0     		beq	.L33
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 556              		.loc 1 325 0
 557 0004 10B5     		push	{r4, lr}
 558              	.LCFI4:
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 4, -8
 561              		.cfi_offset 14, -4
 562 0006 0446     		mov	r4, r0
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 563              		.loc 1 338 0
 564 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 565 000c 13F0FF0F 		tst	r3, #255
 566 0010 04D1     		bne	.L32
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 567              		.loc 1 341 0
 568 0012 0023     		movs	r3, #0
 569 0014 80F83830 		strb	r3, [r0, #56]
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 570              		.loc 1 343 0
 571 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 572              	.LVL39:
 573              	.L32:
ARM GAS  /tmp/ccQPxto7.s 			page 56


 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 574              		.loc 1 346 0
 575 001c 2423     		movs	r3, #36
 576 001e 84F83930 		strb	r3, [r4, #57]
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 577              		.loc 1 349 0
 578 0022 2268     		ldr	r2, [r4]
 579 0024 D368     		ldr	r3, [r2, #12]
 580 0026 23F40053 		bic	r3, r3, #8192
 581 002a D360     		str	r3, [r2, #12]
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 582              		.loc 1 352 0
 583 002c 2046     		mov	r0, r4
 584 002e FFF7FEFF 		bl	UART_SetConfig
 585              	.LVL40:
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 586              		.loc 1 357 0
 587 0032 2268     		ldr	r2, [r4]
 588 0034 1369     		ldr	r3, [r2, #16]
 589 0036 23F49043 		bic	r3, r3, #18432
 590 003a 1361     		str	r3, [r2, #16]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 591              		.loc 1 358 0
 592 003c 2268     		ldr	r2, [r4]
 593 003e 5369     		ldr	r3, [r2, #20]
 594 0040 23F02203 		bic	r3, r3, #34
 595 0044 5361     		str	r3, [r2, #20]
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 596              		.loc 1 361 0
 597 0046 2268     		ldr	r2, [r4]
 598 0048 5369     		ldr	r3, [r2, #20]
 599 004a 43F00803 		orr	r3, r3, #8
 600 004e 5361     		str	r3, [r2, #20]
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 601              		.loc 1 364 0
 602 0050 2268     		ldr	r2, [r4]
 603 0052 D368     		ldr	r3, [r2, #12]
 604 0054 43F40053 		orr	r3, r3, #8192
 605 0058 D360     		str	r3, [r2, #12]
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 606              		.loc 1 367 0
 607 005a 0020     		movs	r0, #0
 608 005c E063     		str	r0, [r4, #60]
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 609              		.loc 1 368 0
 610 005e 2023     		movs	r3, #32
 611 0060 84F83930 		strb	r3, [r4, #57]
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 612              		.loc 1 369 0
 613 0064 84F83A30 		strb	r3, [r4, #58]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 614              		.loc 1 371 0
 615 0068 10BD     		pop	{r4, pc}
 616              	.LVL41:
 617              	.L33:
 618              	.LCFI5:
 619              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccQPxto7.s 			page 57


 620              		.cfi_restore 4
 621              		.cfi_restore 14
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 622              		.loc 1 329 0
 623 006a 0120     		movs	r0, #1
 624              	.LVL42:
 625 006c 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE65:
 629 006e 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 630              		.align	2
 631              		.global	HAL_LIN_Init
 632              		.thumb
 633              		.thumb_func
 635              	HAL_LIN_Init:
 636              	.LFB66:
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 637              		.loc 1 386 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL43:
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 642              		.loc 1 388 0
 643 0000 0028     		cmp	r0, #0
 644 0002 39D0     		beq	.L39
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 645              		.loc 1 386 0
 646 0004 38B5     		push	{r3, r4, r5, lr}
 647              	.LCFI6:
 648              		.cfi_def_cfa_offset 16
 649              		.cfi_offset 3, -16
 650              		.cfi_offset 4, -12
 651              		.cfi_offset 5, -8
 652              		.cfi_offset 14, -4
 653 0006 0446     		mov	r4, r0
 654 0008 0D46     		mov	r5, r1
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 655              		.loc 1 402 0
 656 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 657 000e 13F0FF0F 		tst	r3, #255
 658 0012 04D1     		bne	.L38
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 659              		.loc 1 405 0
 660 0014 0023     		movs	r3, #0
 661 0016 80F83830 		strb	r3, [r0, #56]
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 662              		.loc 1 407 0
 663 001a FFF7FEFF 		bl	HAL_UART_MspInit
 664              	.LVL44:
 665              	.L38:
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 666              		.loc 1 410 0
 667 001e 2423     		movs	r3, #36
 668 0020 84F83930 		strb	r3, [r4, #57]
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 669              		.loc 1 413 0
ARM GAS  /tmp/ccQPxto7.s 			page 58


 670 0024 2268     		ldr	r2, [r4]
 671 0026 D368     		ldr	r3, [r2, #12]
 672 0028 23F40053 		bic	r3, r3, #8192
 673 002c D360     		str	r3, [r2, #12]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 674              		.loc 1 416 0
 675 002e 2046     		mov	r0, r4
 676 0030 FFF7FEFF 		bl	UART_SetConfig
 677              	.LVL45:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 678              		.loc 1 421 0
 679 0034 2268     		ldr	r2, [r4]
 680 0036 1369     		ldr	r3, [r2, #16]
 681 0038 23F40063 		bic	r3, r3, #2048
 682 003c 1361     		str	r3, [r2, #16]
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 683              		.loc 1 422 0
 684 003e 2268     		ldr	r2, [r4]
 685 0040 5369     		ldr	r3, [r2, #20]
 686 0042 23F02A03 		bic	r3, r3, #42
 687 0046 5361     		str	r3, [r2, #20]
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 688              		.loc 1 425 0
 689 0048 2268     		ldr	r2, [r4]
 690 004a 1369     		ldr	r3, [r2, #16]
 691 004c 43F48043 		orr	r3, r3, #16384
 692 0050 1361     		str	r3, [r2, #16]
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 693              		.loc 1 428 0
 694 0052 2368     		ldr	r3, [r4]
 695 0054 1969     		ldr	r1, [r3, #16]
 696 0056 21F02001 		bic	r1, r1, #32
 697 005a 0D43     		orrs	r5, r5, r1
 698              	.LVL46:
 699 005c 1D61     		str	r5, [r3, #16]
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 700              		.loc 1 431 0
 701 005e 2268     		ldr	r2, [r4]
 702 0060 D368     		ldr	r3, [r2, #12]
 703 0062 43F40053 		orr	r3, r3, #8192
 704 0066 D360     		str	r3, [r2, #12]
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 705              		.loc 1 434 0
 706 0068 0020     		movs	r0, #0
 707 006a E063     		str	r0, [r4, #60]
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 708              		.loc 1 435 0
 709 006c 2023     		movs	r3, #32
 710 006e 84F83930 		strb	r3, [r4, #57]
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 711              		.loc 1 436 0
 712 0072 84F83A30 		strb	r3, [r4, #58]
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 713              		.loc 1 438 0
 714 0076 38BD     		pop	{r3, r4, r5, pc}
 715              	.LVL47:
 716              	.L39:
ARM GAS  /tmp/ccQPxto7.s 			page 59


 717              	.LCFI7:
 718              		.cfi_def_cfa_offset 0
 719              		.cfi_restore 3
 720              		.cfi_restore 4
 721              		.cfi_restore 5
 722              		.cfi_restore 14
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 723              		.loc 1 390 0
 724 0078 0120     		movs	r0, #1
 725              	.LVL48:
 726 007a 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE66:
 730              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 731              		.align	2
 732              		.global	HAL_MultiProcessor_Init
 733              		.thumb
 734              		.thumb_func
 736              	HAL_MultiProcessor_Init:
 737              	.LFB67:
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 738              		.loc 1 454 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              	.LVL49:
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 743              		.loc 1 456 0
 744 0000 0028     		cmp	r0, #0
 745 0002 3CD0     		beq	.L45
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 746              		.loc 1 454 0
 747 0004 70B5     		push	{r4, r5, r6, lr}
 748              	.LCFI8:
 749              		.cfi_def_cfa_offset 16
 750              		.cfi_offset 4, -16
 751              		.cfi_offset 5, -12
 752              		.cfi_offset 6, -8
 753              		.cfi_offset 14, -4
 754 0006 0446     		mov	r4, r0
 755 0008 1546     		mov	r5, r2
 756 000a 0E46     		mov	r6, r1
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 757              		.loc 1 472 0
 758 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 759 0010 13F0FF0F 		tst	r3, #255
 760 0014 04D1     		bne	.L44
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 761              		.loc 1 475 0
 762 0016 0023     		movs	r3, #0
 763 0018 80F83830 		strb	r3, [r0, #56]
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 764              		.loc 1 477 0
 765 001c FFF7FEFF 		bl	HAL_UART_MspInit
 766              	.LVL50:
 767              	.L44:
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 60


 768              		.loc 1 480 0
 769 0020 2423     		movs	r3, #36
 770 0022 84F83930 		strb	r3, [r4, #57]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 771              		.loc 1 483 0
 772 0026 2268     		ldr	r2, [r4]
 773 0028 D368     		ldr	r3, [r2, #12]
 774 002a 23F40053 		bic	r3, r3, #8192
 775 002e D360     		str	r3, [r2, #12]
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 776              		.loc 1 486 0
 777 0030 2046     		mov	r0, r4
 778 0032 FFF7FEFF 		bl	UART_SetConfig
 779              	.LVL51:
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 780              		.loc 1 491 0
 781 0036 2268     		ldr	r2, [r4]
 782 0038 1369     		ldr	r3, [r2, #16]
 783 003a 23F49043 		bic	r3, r3, #18432
 784 003e 1361     		str	r3, [r2, #16]
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 785              		.loc 1 492 0
 786 0040 2268     		ldr	r2, [r4]
 787 0042 5369     		ldr	r3, [r2, #20]
 788 0044 23F02A03 		bic	r3, r3, #42
 789 0048 5361     		str	r3, [r2, #20]
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 790              		.loc 1 495 0
 791 004a 2268     		ldr	r2, [r4]
 792 004c 1369     		ldr	r3, [r2, #16]
 793 004e 23F00F03 		bic	r3, r3, #15
 794 0052 46EA0301 		orr	r1, r6, r3
 795 0056 1161     		str	r1, [r2, #16]
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 796              		.loc 1 498 0
 797 0058 2368     		ldr	r3, [r4]
 798 005a DA68     		ldr	r2, [r3, #12]
 799 005c 22F40062 		bic	r2, r2, #2048
 800 0060 1543     		orrs	r5, r5, r2
 801              	.LVL52:
 802 0062 DD60     		str	r5, [r3, #12]
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 803              		.loc 1 501 0
 804 0064 2268     		ldr	r2, [r4]
 805 0066 D368     		ldr	r3, [r2, #12]
 806 0068 43F40053 		orr	r3, r3, #8192
 807 006c D360     		str	r3, [r2, #12]
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 808              		.loc 1 504 0
 809 006e 0020     		movs	r0, #0
 810 0070 E063     		str	r0, [r4, #60]
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 811              		.loc 1 505 0
 812 0072 2023     		movs	r3, #32
 813 0074 84F83930 		strb	r3, [r4, #57]
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 814              		.loc 1 506 0
ARM GAS  /tmp/ccQPxto7.s 			page 61


 815 0078 84F83A30 		strb	r3, [r4, #58]
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 816              		.loc 1 508 0
 817 007c 70BD     		pop	{r4, r5, r6, pc}
 818              	.LVL53:
 819              	.L45:
 820              	.LCFI9:
 821              		.cfi_def_cfa_offset 0
 822              		.cfi_restore 4
 823              		.cfi_restore 5
 824              		.cfi_restore 6
 825              		.cfi_restore 14
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 826              		.loc 1 458 0
 827 007e 0120     		movs	r0, #1
 828              	.LVL54:
 829 0080 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE67:
 833 0082 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 834              		.align	2
 835              		.weak	HAL_UART_MspDeInit
 836              		.thumb
 837              		.thumb_func
 839              	HAL_UART_MspDeInit:
 840              	.LFB70:
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 841              		.loc 1 565 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846              	.LVL55:
 847 0000 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE70:
 851 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 852              		.align	2
 853              		.global	HAL_UART_DeInit
 854              		.thumb
 855              		.thumb_func
 857              	HAL_UART_DeInit:
 858              	.LFB68:
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 859              		.loc 1 518 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL56:
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 864              		.loc 1 520 0
 865 0000 78B1     		cbz	r0, .L51
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 866              		.loc 1 518 0
 867 0002 10B5     		push	{r4, lr}
 868              	.LCFI10:
 869              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQPxto7.s 			page 62


 870              		.cfi_offset 4, -8
 871              		.cfi_offset 14, -4
 872 0004 0446     		mov	r4, r0
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 873              		.loc 1 528 0
 874 0006 2423     		movs	r3, #36
 875 0008 80F83930 		strb	r3, [r0, #57]
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 876              		.loc 1 531 0
 877 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 878              	.LVL57:
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 879              		.loc 1 533 0
 880 0010 0020     		movs	r0, #0
 881 0012 E063     		str	r0, [r4, #60]
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 882              		.loc 1 534 0
 883 0014 84F83900 		strb	r0, [r4, #57]
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 884              		.loc 1 535 0
 885 0018 84F83A00 		strb	r0, [r4, #58]
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 886              		.loc 1 538 0
 887 001c 84F83800 		strb	r0, [r4, #56]
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 888              		.loc 1 540 0
 889 0020 10BD     		pop	{r4, pc}
 890              	.LVL58:
 891              	.L51:
 892              	.LCFI11:
 893              		.cfi_def_cfa_offset 0
 894              		.cfi_restore 4
 895              		.cfi_restore 14
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 896              		.loc 1 522 0
 897 0022 0120     		movs	r0, #1
 898              	.LVL59:
 899 0024 7047     		bx	lr
 900              		.cfi_endproc
 901              	.LFE68:
 903 0026 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 904              		.align	2
 905              		.global	HAL_UART_Transmit
 906              		.thumb
 907              		.thumb_func
 909              	HAL_UART_Transmit:
 910              	.LFB71:
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 911              		.loc 1 644 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              	.LVL60:
 916 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 917              	.LCFI12:
 918              		.cfi_def_cfa_offset 24
 919              		.cfi_offset 4, -24
ARM GAS  /tmp/ccQPxto7.s 			page 63


 920              		.cfi_offset 5, -20
 921              		.cfi_offset 6, -16
 922              		.cfi_offset 7, -12
 923              		.cfi_offset 8, -8
 924              		.cfi_offset 14, -4
 925 0004 82B0     		sub	sp, sp, #8
 926              	.LCFI13:
 927              		.cfi_def_cfa_offset 32
 928 0006 1E46     		mov	r6, r3
 929              	.LVL61:
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 930              		.loc 1 649 0
 931 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 932              	.LVL62:
 933 000c DBB2     		uxtb	r3, r3
 934 000e 202B     		cmp	r3, #32
 935 0010 56D1     		bne	.L61
 936 0012 0446     		mov	r4, r0
 937 0014 0D46     		mov	r5, r1
 938 0016 9046     		mov	r8, r2
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 939              		.loc 1 651 0
 940 0018 0029     		cmp	r1, #0
 941 001a 53D0     		beq	.L62
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 942              		.loc 1 651 0 is_stmt 0 discriminator 1
 943 001c 002A     		cmp	r2, #0
 944 001e 53D0     		beq	.L63
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 945              		.loc 1 657 0 is_stmt 1
 946 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 947 0024 012B     		cmp	r3, #1
 948 0026 51D0     		beq	.L64
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 949              		.loc 1 657 0 is_stmt 0 discriminator 2
 950 0028 0123     		movs	r3, #1
 951 002a 80F83830 		strb	r3, [r0, #56]
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 952              		.loc 1 659 0 is_stmt 1 discriminator 2
 953 002e 0023     		movs	r3, #0
 954 0030 C363     		str	r3, [r0, #60]
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 955              		.loc 1 660 0 discriminator 2
 956 0032 2123     		movs	r3, #33
 957 0034 80F83930 		strb	r3, [r0, #57]
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 958              		.loc 1 663 0 discriminator 2
 959 0038 FFF7FEFF 		bl	HAL_GetTick
 960              	.LVL63:
 961 003c 0746     		mov	r7, r0
 962              	.LVL64:
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 963              		.loc 1 665 0 discriminator 2
 964 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 965              		.loc 1 666 0 discriminator 2
 966 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
ARM GAS  /tmp/ccQPxto7.s 			page 64


 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 967              		.loc 1 667 0 discriminator 2
 968 0046 27E0     		b	.L56
 969              	.LVL65:
 970              	.L60:
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 971              		.loc 1 669 0
 972 0048 E38C     		ldrh	r3, [r4, #38]
 973 004a 9BB2     		uxth	r3, r3
 974 004c 013B     		subs	r3, r3, #1
 975 004e 9BB2     		uxth	r3, r3
 976 0050 E384     		strh	r3, [r4, #38]	@ movhi
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 977              		.loc 1 670 0
 978 0052 A368     		ldr	r3, [r4, #8]
 979 0054 B3F5805F 		cmp	r3, #4096
 980 0058 12D1     		bne	.L57
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 981              		.loc 1 672 0
 982 005a 0096     		str	r6, [sp]
 983 005c 3B46     		mov	r3, r7
 984 005e 0022     		movs	r2, #0
 985 0060 8021     		movs	r1, #128
 986 0062 2046     		mov	r0, r4
 987 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 988              	.LVL66:
 989 0068 90BB     		cbnz	r0, .L65
 990              	.LVL67:
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 991              		.loc 1 677 0
 992 006a 2268     		ldr	r2, [r4]
 993 006c 2B88     		ldrh	r3, [r5]
 994 006e C3F30803 		ubfx	r3, r3, #0, #9
 995 0072 5360     		str	r3, [r2, #4]
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 996              		.loc 1 678 0
 997 0074 2369     		ldr	r3, [r4, #16]
 998 0076 0BB9     		cbnz	r3, .L58
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 999              		.loc 1 680 0
 1000 0078 0235     		adds	r5, r5, #2
 1001              	.LVL68:
 1002 007a 0DE0     		b	.L56
 1003              	.LVL69:
 1004              	.L58:
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1005              		.loc 1 684 0
 1006 007c 0135     		adds	r5, r5, #1
 1007              	.LVL70:
 1008 007e 0BE0     		b	.L56
 1009              	.LVL71:
 1010              	.L57:
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1011              		.loc 1 689 0
 1012 0080 0096     		str	r6, [sp]
 1013 0082 3B46     		mov	r3, r7
 1014 0084 0022     		movs	r2, #0
ARM GAS  /tmp/ccQPxto7.s 			page 65


 1015 0086 8021     		movs	r1, #128
 1016 0088 2046     		mov	r0, r4
 1017 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1018              	.LVL72:
 1019 008e 08BB     		cbnz	r0, .L66
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 1020              		.loc 1 693 0
 1021 0090 2368     		ldr	r3, [r4]
 1022              	.LVL73:
 1023 0092 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1024 0094 5A60     		str	r2, [r3, #4]
 1025 0096 0135     		adds	r5, r5, #1
 1026              	.LVL74:
 1027              	.L56:
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1028              		.loc 1 667 0
 1029 0098 E38C     		ldrh	r3, [r4, #38]
 1030 009a 9BB2     		uxth	r3, r3
 1031 009c 002B     		cmp	r3, #0
 1032 009e D3D1     		bne	.L60
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1033              		.loc 1 697 0
 1034 00a0 0096     		str	r6, [sp]
 1035 00a2 3B46     		mov	r3, r7
 1036 00a4 0022     		movs	r2, #0
 1037 00a6 4021     		movs	r1, #64
 1038 00a8 2046     		mov	r0, r4
 1039 00aa FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1040              	.LVL75:
 1041 00ae 0346     		mov	r3, r0
 1042 00b0 90B9     		cbnz	r0, .L67
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1043              		.loc 1 703 0
 1044 00b2 2022     		movs	r2, #32
 1045 00b4 84F83920 		strb	r2, [r4, #57]
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1046              		.loc 1 706 0
 1047 00b8 0022     		movs	r2, #0
 1048 00ba 84F83820 		strb	r2, [r4, #56]
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1049              		.loc 1 708 0
 1050 00be 0CE0     		b	.L55
 1051              	.LVL76:
 1052              	.L61:
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1053              		.loc 1 712 0
 1054 00c0 0223     		movs	r3, #2
 1055 00c2 0AE0     		b	.L55
 1056              	.L62:
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1057              		.loc 1 653 0
 1058 00c4 0123     		movs	r3, #1
 1059 00c6 08E0     		b	.L55
 1060              	.L63:
 1061 00c8 0123     		movs	r3, #1
 1062 00ca 06E0     		b	.L55
 1063              	.L64:
ARM GAS  /tmp/ccQPxto7.s 			page 66


 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1064              		.loc 1 657 0
 1065 00cc 0223     		movs	r3, #2
 1066 00ce 04E0     		b	.L55
 1067              	.LVL77:
 1068              	.L65:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1069              		.loc 1 674 0
 1070 00d0 0323     		movs	r3, #3
 1071 00d2 02E0     		b	.L55
 1072              	.L66:
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1073              		.loc 1 691 0
 1074 00d4 0323     		movs	r3, #3
 1075 00d6 00E0     		b	.L55
 1076              	.L67:
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1077              		.loc 1 699 0
 1078 00d8 0323     		movs	r3, #3
 1079              	.LVL78:
 1080              	.L55:
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1081              		.loc 1 714 0
 1082 00da 1846     		mov	r0, r3
 1083 00dc 02B0     		add	sp, sp, #8
 1084              	.LCFI14:
 1085              		.cfi_def_cfa_offset 24
 1086              		@ sp needed
 1087 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1088              		.cfi_endproc
 1089              	.LFE71:
 1091 00e2 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 1092              		.align	2
 1093              		.global	HAL_UART_Receive
 1094              		.thumb
 1095              		.thumb_func
 1097              	HAL_UART_Receive:
 1098              	.LFB72:
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 1099              		.loc 1 726 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              	.LVL79:
 1104 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1105              	.LCFI15:
 1106              		.cfi_def_cfa_offset 24
 1107              		.cfi_offset 4, -24
 1108              		.cfi_offset 5, -20
 1109              		.cfi_offset 6, -16
 1110              		.cfi_offset 7, -12
 1111              		.cfi_offset 8, -8
 1112              		.cfi_offset 14, -4
 1113 0004 82B0     		sub	sp, sp, #8
 1114              	.LCFI16:
 1115              		.cfi_def_cfa_offset 32
 1116 0006 1E46     		mov	r6, r3
ARM GAS  /tmp/ccQPxto7.s 			page 67


 1117              	.LVL80:
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1118              		.loc 1 731 0
 1119 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1120              	.LVL81:
 1121 000c DBB2     		uxtb	r3, r3
 1122 000e 202B     		cmp	r3, #32
 1123 0010 5BD1     		bne	.L77
 1124 0012 0446     		mov	r4, r0
 1125 0014 0D46     		mov	r5, r1
 1126 0016 9046     		mov	r8, r2
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1127              		.loc 1 733 0
 1128 0018 0029     		cmp	r1, #0
 1129 001a 58D0     		beq	.L78
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1130              		.loc 1 733 0 is_stmt 0 discriminator 1
 1131 001c 002A     		cmp	r2, #0
 1132 001e 58D0     		beq	.L79
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1133              		.loc 1 739 0 is_stmt 1
 1134 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1135 0024 012B     		cmp	r3, #1
 1136 0026 56D0     		beq	.L80
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1137              		.loc 1 739 0 is_stmt 0 discriminator 2
 1138 0028 0123     		movs	r3, #1
 1139 002a 80F83830 		strb	r3, [r0, #56]
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1140              		.loc 1 741 0 is_stmt 1 discriminator 2
 1141 002e 0023     		movs	r3, #0
 1142 0030 C363     		str	r3, [r0, #60]
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1143              		.loc 1 742 0 discriminator 2
 1144 0032 2223     		movs	r3, #34
 1145 0034 80F83A30 		strb	r3, [r0, #58]
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1146              		.loc 1 745 0 discriminator 2
 1147 0038 FFF7FEFF 		bl	HAL_GetTick
 1148              	.LVL82:
 1149 003c 0746     		mov	r7, r0
 1150              	.LVL83:
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1151              		.loc 1 747 0 discriminator 2
 1152 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1153              		.loc 1 748 0 discriminator 2
 1154 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1155              		.loc 1 751 0 discriminator 2
 1156 0046 35E0     		b	.L71
 1157              	.LVL84:
 1158              	.L76:
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1159              		.loc 1 753 0
 1160 0048 E38D     		ldrh	r3, [r4, #46]
 1161 004a 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccQPxto7.s 			page 68


 1162 004c 013B     		subs	r3, r3, #1
 1163 004e 9BB2     		uxth	r3, r3
 1164 0050 E385     		strh	r3, [r4, #46]	@ movhi
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1165              		.loc 1 754 0
 1166 0052 A368     		ldr	r3, [r4, #8]
 1167 0054 B3F5805F 		cmp	r3, #4096
 1168 0058 17D1     		bne	.L72
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1169              		.loc 1 756 0
 1170 005a 0096     		str	r6, [sp]
 1171 005c 3B46     		mov	r3, r7
 1172 005e 0022     		movs	r2, #0
 1173 0060 2021     		movs	r1, #32
 1174 0062 2046     		mov	r0, r4
 1175 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1176              	.LVL85:
 1177 0068 0028     		cmp	r0, #0
 1178 006a 36D1     		bne	.L81
 1179              	.LVL86:
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1180              		.loc 1 761 0
 1181 006c 2369     		ldr	r3, [r4, #16]
 1182 006e 33B9     		cbnz	r3, .L73
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 1183              		.loc 1 763 0
 1184 0070 2368     		ldr	r3, [r4]
 1185 0072 5B68     		ldr	r3, [r3, #4]
 1186 0074 C3F30803 		ubfx	r3, r3, #0, #9
 1187 0078 25F8023B 		strh	r3, [r5], #2	@ movhi
 1188              	.LVL87:
 1189 007c 1AE0     		b	.L71
 1190              	.LVL88:
 1191              	.L73:
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 1192              		.loc 1 768 0
 1193 007e 2368     		ldr	r3, [r4]
 1194 0080 5B68     		ldr	r3, [r3, #4]
 1195 0082 DBB2     		uxtb	r3, r3
 1196 0084 25F8013B 		strh	r3, [r5], #1	@ movhi
 1197              	.LVL89:
 1198 0088 14E0     		b	.L71
 1199              	.LVL90:
 1200              	.L72:
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1201              		.loc 1 775 0
 1202 008a 0096     		str	r6, [sp]
 1203 008c 3B46     		mov	r3, r7
 1204 008e 0022     		movs	r2, #0
 1205 0090 2021     		movs	r1, #32
 1206 0092 2046     		mov	r0, r4
 1207 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1208              	.LVL91:
 1209 0098 08BB     		cbnz	r0, .L82
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1210              		.loc 1 779 0
 1211 009a 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/ccQPxto7.s 			page 69


 1212 009c 23B9     		cbnz	r3, .L75
 1213              	.LVL92:
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1214              		.loc 1 781 0
 1215 009e 2368     		ldr	r3, [r4]
 1216 00a0 5B68     		ldr	r3, [r3, #4]
 1217 00a2 2B70     		strb	r3, [r5]
 1218 00a4 0135     		adds	r5, r5, #1
 1219              	.LVL93:
 1220 00a6 05E0     		b	.L71
 1221              	.L75:
 1222              	.LVL94:
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1223              		.loc 1 785 0
 1224 00a8 2368     		ldr	r3, [r4]
 1225 00aa 5B68     		ldr	r3, [r3, #4]
 1226 00ac 03F07F03 		and	r3, r3, #127
 1227 00b0 2B70     		strb	r3, [r5]
 1228 00b2 0135     		adds	r5, r5, #1
 1229              	.LVL95:
 1230              	.L71:
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1231              		.loc 1 751 0
 1232 00b4 E38D     		ldrh	r3, [r4, #46]
 1233 00b6 9BB2     		uxth	r3, r3
 1234 00b8 002B     		cmp	r3, #0
 1235 00ba C5D1     		bne	.L76
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1236              		.loc 1 792 0
 1237 00bc 2023     		movs	r3, #32
 1238 00be 84F83A30 		strb	r3, [r4, #58]
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1239              		.loc 1 795 0
 1240 00c2 0020     		movs	r0, #0
 1241 00c4 84F83800 		strb	r0, [r4, #56]
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1242              		.loc 1 797 0
 1243 00c8 0AE0     		b	.L70
 1244              	.LVL96:
 1245              	.L77:
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1246              		.loc 1 801 0
 1247 00ca 0220     		movs	r0, #2
 1248              	.LVL97:
 1249 00cc 08E0     		b	.L70
 1250              	.LVL98:
 1251              	.L78:
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1252              		.loc 1 735 0
 1253 00ce 0120     		movs	r0, #1
 1254              	.LVL99:
 1255 00d0 06E0     		b	.L70
 1256              	.LVL100:
 1257              	.L79:
 1258 00d2 0120     		movs	r0, #1
 1259              	.LVL101:
 1260 00d4 04E0     		b	.L70
ARM GAS  /tmp/ccQPxto7.s 			page 70


 1261              	.LVL102:
 1262              	.L80:
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1263              		.loc 1 739 0
 1264 00d6 0220     		movs	r0, #2
 1265              	.LVL103:
 1266 00d8 02E0     		b	.L70
 1267              	.LVL104:
 1268              	.L81:
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1269              		.loc 1 758 0
 1270 00da 0320     		movs	r0, #3
 1271 00dc 00E0     		b	.L70
 1272              	.L82:
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1273              		.loc 1 777 0
 1274 00de 0320     		movs	r0, #3
 1275              	.LVL105:
 1276              	.L70:
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1277              		.loc 1 803 0
 1278 00e0 02B0     		add	sp, sp, #8
 1279              	.LCFI17:
 1280              		.cfi_def_cfa_offset 24
 1281              		@ sp needed
 1282 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1283              		.cfi_endproc
 1284              	.LFE72:
 1286              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1287              		.align	2
 1288              		.global	HAL_UART_Transmit_IT
 1289              		.thumb
 1290              		.thumb_func
 1292              	HAL_UART_Transmit_IT:
 1293              	.LFB73:
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1294              		.loc 1 814 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 1299              	.LVL106:
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1300              		.loc 1 816 0
 1301 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1302 0004 DBB2     		uxtb	r3, r3
 1303 0006 202B     		cmp	r3, #32
 1304 0008 16D1     		bne	.L86
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1305              		.loc 1 818 0
 1306 000a B9B1     		cbz	r1, .L87
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1307              		.loc 1 818 0 is_stmt 0 discriminator 1
 1308 000c C2B1     		cbz	r2, .L88
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1309              		.loc 1 823 0 is_stmt 1
 1310 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
ARM GAS  /tmp/ccQPxto7.s 			page 71


 1311 0012 012B     		cmp	r3, #1
 1312 0014 16D0     		beq	.L89
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1313              		.loc 1 825 0 discriminator 2
 1314 0016 0162     		str	r1, [r0, #32]
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1315              		.loc 1 826 0 discriminator 2
 1316 0018 8284     		strh	r2, [r0, #36]	@ movhi
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1317              		.loc 1 827 0 discriminator 2
 1318 001a C284     		strh	r2, [r0, #38]	@ movhi
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1319              		.loc 1 829 0 discriminator 2
 1320 001c 0023     		movs	r3, #0
 1321 001e C363     		str	r3, [r0, #60]
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1322              		.loc 1 830 0 discriminator 2
 1323 0020 2122     		movs	r2, #33
 1324              	.LVL107:
 1325 0022 80F83920 		strb	r2, [r0, #57]
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1326              		.loc 1 833 0 discriminator 2
 1327 0026 80F83830 		strb	r3, [r0, #56]
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1328              		.loc 1 836 0 discriminator 2
 1329 002a 0168     		ldr	r1, [r0]
 1330              	.LVL108:
 1331 002c CA68     		ldr	r2, [r1, #12]
 1332 002e 42F08002 		orr	r2, r2, #128
 1333 0032 CA60     		str	r2, [r1, #12]
 1334              	.LVL109:
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1335              		.loc 1 838 0 discriminator 2
 1336 0034 1846     		mov	r0, r3
 1337              	.LVL110:
 1338 0036 7047     		bx	lr
 1339              	.LVL111:
 1340              	.L86:
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1341              		.loc 1 842 0
 1342 0038 0220     		movs	r0, #2
 1343              	.LVL112:
 1344 003a 7047     		bx	lr
 1345              	.LVL113:
 1346              	.L87:
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1347              		.loc 1 820 0
 1348 003c 0120     		movs	r0, #1
 1349              	.LVL114:
 1350 003e 7047     		bx	lr
 1351              	.LVL115:
 1352              	.L88:
 1353 0040 0120     		movs	r0, #1
 1354              	.LVL116:
 1355 0042 7047     		bx	lr
 1356              	.LVL117:
 1357              	.L89:
ARM GAS  /tmp/ccQPxto7.s 			page 72


 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1358              		.loc 1 823 0
 1359 0044 0220     		movs	r0, #2
 1360              	.LVL118:
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1361              		.loc 1 844 0
 1362 0046 7047     		bx	lr
 1363              		.cfi_endproc
 1364              	.LFE73:
 1366              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1367              		.align	2
 1368              		.global	HAL_UART_Receive_IT
 1369              		.thumb
 1370              		.thumb_func
 1372              	HAL_UART_Receive_IT:
 1373              	.LFB74:
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1374              		.loc 1 855 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              		@ link register save eliminated.
 1379              	.LVL119:
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1380              		.loc 1 857 0
 1381 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1382 0004 DBB2     		uxtb	r3, r3
 1383 0006 202B     		cmp	r3, #32
 1384 0008 20D1     		bne	.L92
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1385              		.loc 1 859 0
 1386 000a 09B3     		cbz	r1, .L93
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1387              		.loc 1 859 0 is_stmt 0 discriminator 1
 1388 000c 12B3     		cbz	r2, .L94
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1389              		.loc 1 865 0 is_stmt 1
 1390 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1391 0012 012B     		cmp	r3, #1
 1392 0014 20D0     		beq	.L95
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1393              		.loc 1 867 0 discriminator 2
 1394 0016 8162     		str	r1, [r0, #40]
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1395              		.loc 1 868 0 discriminator 2
 1396 0018 8285     		strh	r2, [r0, #44]	@ movhi
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1397              		.loc 1 869 0 discriminator 2
 1398 001a C285     		strh	r2, [r0, #46]	@ movhi
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1399              		.loc 1 871 0 discriminator 2
 1400 001c 0023     		movs	r3, #0
 1401 001e C363     		str	r3, [r0, #60]
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1402              		.loc 1 872 0 discriminator 2
 1403 0020 2222     		movs	r2, #34
 1404              	.LVL120:
ARM GAS  /tmp/ccQPxto7.s 			page 73


 1405 0022 80F83A20 		strb	r2, [r0, #58]
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1406              		.loc 1 875 0 discriminator 2
 1407 0026 80F83830 		strb	r3, [r0, #56]
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1408              		.loc 1 878 0 discriminator 2
 1409 002a 0168     		ldr	r1, [r0]
 1410              	.LVL121:
 1411 002c CA68     		ldr	r2, [r1, #12]
 1412 002e 42F48072 		orr	r2, r2, #256
 1413 0032 CA60     		str	r2, [r1, #12]
 1414              	.LVL122:
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1415              		.loc 1 881 0 discriminator 2
 1416 0034 0168     		ldr	r1, [r0]
 1417 0036 4A69     		ldr	r2, [r1, #20]
 1418 0038 42F00102 		orr	r2, r2, #1
 1419 003c 4A61     		str	r2, [r1, #20]
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1420              		.loc 1 884 0 discriminator 2
 1421 003e 0168     		ldr	r1, [r0]
 1422 0040 CA68     		ldr	r2, [r1, #12]
 1423 0042 42F02002 		orr	r2, r2, #32
 1424 0046 CA60     		str	r2, [r1, #12]
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1425              		.loc 1 886 0 discriminator 2
 1426 0048 1846     		mov	r0, r3
 1427              	.LVL123:
 1428 004a 7047     		bx	lr
 1429              	.LVL124:
 1430              	.L92:
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1431              		.loc 1 890 0
 1432 004c 0220     		movs	r0, #2
 1433              	.LVL125:
 1434 004e 7047     		bx	lr
 1435              	.LVL126:
 1436              	.L93:
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1437              		.loc 1 861 0
 1438 0050 0120     		movs	r0, #1
 1439              	.LVL127:
 1440 0052 7047     		bx	lr
 1441              	.LVL128:
 1442              	.L94:
 1443 0054 0120     		movs	r0, #1
 1444              	.LVL129:
 1445 0056 7047     		bx	lr
 1446              	.LVL130:
 1447              	.L95:
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1448              		.loc 1 865 0
 1449 0058 0220     		movs	r0, #2
 1450              	.LVL131:
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1451              		.loc 1 892 0
 1452 005a 7047     		bx	lr
ARM GAS  /tmp/ccQPxto7.s 			page 74


 1453              		.cfi_endproc
 1454              	.LFE74:
 1456              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1457              		.align	2
 1458              		.global	HAL_UART_Transmit_DMA
 1459              		.thumb
 1460              		.thumb_func
 1462              	HAL_UART_Transmit_DMA:
 1463              	.LFB75:
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1464              		.loc 1 903 0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468              	.LVL132:
 1469 0000 38B5     		push	{r3, r4, r5, lr}
 1470              	.LCFI18:
 1471              		.cfi_def_cfa_offset 16
 1472              		.cfi_offset 3, -16
 1473              		.cfi_offset 4, -12
 1474              		.cfi_offset 5, -8
 1475              		.cfi_offset 14, -4
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1476              		.loc 1 907 0
 1477 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1478 0006 E4B2     		uxtb	r4, r4
 1479 0008 202C     		cmp	r4, #32
 1480 000a 31D1     		bne	.L98
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1481              		.loc 1 909 0
 1482 000c 0029     		cmp	r1, #0
 1483 000e 31D0     		beq	.L99
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1484              		.loc 1 909 0 is_stmt 0 discriminator 1
 1485 0010 002A     		cmp	r2, #0
 1486 0012 31D0     		beq	.L100
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1487              		.loc 1 915 0 is_stmt 1
 1488 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1489 0018 012B     		cmp	r3, #1
 1490 001a 2FD0     		beq	.L101
 1491 001c 1346     		mov	r3, r2
 1492 001e 0446     		mov	r4, r0
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1493              		.loc 1 915 0 is_stmt 0 discriminator 2
 1494 0020 0122     		movs	r2, #1
 1495              	.LVL133:
 1496 0022 80F83820 		strb	r2, [r0, #56]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1497              		.loc 1 917 0 is_stmt 1 discriminator 2
 1498 0026 0162     		str	r1, [r0, #32]
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1499              		.loc 1 918 0 discriminator 2
 1500 0028 8384     		strh	r3, [r0, #36]	@ movhi
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1501              		.loc 1 919 0 discriminator 2
 1502 002a C384     		strh	r3, [r0, #38]	@ movhi
ARM GAS  /tmp/ccQPxto7.s 			page 75


 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1503              		.loc 1 921 0 discriminator 2
 1504 002c 0025     		movs	r5, #0
 1505 002e C563     		str	r5, [r0, #60]
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1506              		.loc 1 922 0 discriminator 2
 1507 0030 2122     		movs	r2, #33
 1508 0032 80F83920 		strb	r2, [r0, #57]
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1509              		.loc 1 925 0 discriminator 2
 1510 0036 026B     		ldr	r2, [r0, #48]
 1511 0038 1148     		ldr	r0, .L103
 1512              	.LVL134:
 1513 003a 9062     		str	r0, [r2, #40]
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1514              		.loc 1 928 0 discriminator 2
 1515 003c 226B     		ldr	r2, [r4, #48]
 1516 003e 1148     		ldr	r0, .L103+4
 1517 0040 D062     		str	r0, [r2, #44]
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1518              		.loc 1 931 0 discriminator 2
 1519 0042 226B     		ldr	r2, [r4, #48]
 1520 0044 1048     		ldr	r0, .L103+8
 1521 0046 1063     		str	r0, [r2, #48]
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1522              		.loc 1 934 0 discriminator 2
 1523 0048 226B     		ldr	r2, [r4, #48]
 1524 004a 5563     		str	r5, [r2, #52]
 1525              	.LVL135:
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1526              		.loc 1 938 0 discriminator 2
 1527 004c 2268     		ldr	r2, [r4]
 1528 004e 0432     		adds	r2, r2, #4
 1529 0050 206B     		ldr	r0, [r4, #48]
 1530 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1531              	.LVL136:
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1532              		.loc 1 941 0 discriminator 2
 1533 0056 2368     		ldr	r3, [r4]
 1534 0058 6FF04002 		mvn	r2, #64
 1535 005c 1A60     		str	r2, [r3]
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1536              		.loc 1 944 0 discriminator 2
 1537 005e 84F83850 		strb	r5, [r4, #56]
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1538              		.loc 1 948 0 discriminator 2
 1539 0062 2268     		ldr	r2, [r4]
 1540 0064 5369     		ldr	r3, [r2, #20]
 1541 0066 43F08003 		orr	r3, r3, #128
 1542 006a 5361     		str	r3, [r2, #20]
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1543              		.loc 1 950 0 discriminator 2
 1544 006c 2846     		mov	r0, r5
 1545 006e 38BD     		pop	{r3, r4, r5, pc}
 1546              	.LVL137:
 1547              	.L98:
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/ccQPxto7.s 			page 76


 1548              		.loc 1 954 0
 1549 0070 0220     		movs	r0, #2
 1550              	.LVL138:
 1551 0072 38BD     		pop	{r3, r4, r5, pc}
 1552              	.LVL139:
 1553              	.L99:
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1554              		.loc 1 911 0
 1555 0074 0120     		movs	r0, #1
 1556              	.LVL140:
 1557 0076 38BD     		pop	{r3, r4, r5, pc}
 1558              	.LVL141:
 1559              	.L100:
 1560 0078 0120     		movs	r0, #1
 1561              	.LVL142:
 1562 007a 38BD     		pop	{r3, r4, r5, pc}
 1563              	.LVL143:
 1564              	.L101:
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1565              		.loc 1 915 0
 1566 007c 0220     		movs	r0, #2
 1567              	.LVL144:
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1568              		.loc 1 956 0
 1569 007e 38BD     		pop	{r3, r4, r5, pc}
 1570              	.L104:
 1571              		.align	2
 1572              	.L103:
 1573 0080 00000000 		.word	UART_DMATransmitCplt
 1574 0084 00000000 		.word	UART_DMATxHalfCplt
 1575 0088 00000000 		.word	UART_DMAError
 1576              		.cfi_endproc
 1577              	.LFE75:
 1579              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1580              		.align	2
 1581              		.global	HAL_UART_Receive_DMA
 1582              		.thumb
 1583              		.thumb_func
 1585              	HAL_UART_Receive_DMA:
 1586              	.LFB76:
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1587              		.loc 1 968 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 8
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591              	.LVL145:
 1592 0000 30B5     		push	{r4, r5, lr}
 1593              	.LCFI19:
 1594              		.cfi_def_cfa_offset 12
 1595              		.cfi_offset 4, -12
 1596              		.cfi_offset 5, -8
 1597              		.cfi_offset 14, -4
 1598 0002 83B0     		sub	sp, sp, #12
 1599              	.LCFI20:
 1600              		.cfi_def_cfa_offset 24
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1601              		.loc 1 972 0
ARM GAS  /tmp/ccQPxto7.s 			page 77


 1602 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1603 0008 E4B2     		uxtb	r4, r4
 1604 000a 202C     		cmp	r4, #32
 1605 000c 3DD1     		bne	.L107
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1606              		.loc 1 974 0
 1607 000e 0029     		cmp	r1, #0
 1608 0010 3DD0     		beq	.L108
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1609              		.loc 1 974 0 is_stmt 0 discriminator 1
 1610 0012 002A     		cmp	r2, #0
 1611 0014 3DD0     		beq	.L109
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1612              		.loc 1 980 0 is_stmt 1
 1613 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1614 001a 012B     		cmp	r3, #1
 1615 001c 3BD0     		beq	.L110
 1616 001e 1346     		mov	r3, r2
 1617 0020 0A46     		mov	r2, r1
 1618              	.LVL146:
 1619 0022 0446     		mov	r4, r0
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1620              		.loc 1 980 0 is_stmt 0 discriminator 2
 1621 0024 0121     		movs	r1, #1
 1622              	.LVL147:
 1623 0026 80F83810 		strb	r1, [r0, #56]
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1624              		.loc 1 982 0 is_stmt 1 discriminator 2
 1625 002a 8262     		str	r2, [r0, #40]
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1626              		.loc 1 983 0 discriminator 2
 1627 002c 8385     		strh	r3, [r0, #44]	@ movhi
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1628              		.loc 1 985 0 discriminator 2
 1629 002e 0025     		movs	r5, #0
 1630 0030 C563     		str	r5, [r0, #60]
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1631              		.loc 1 986 0 discriminator 2
 1632 0032 2221     		movs	r1, #34
 1633 0034 80F83A10 		strb	r1, [r0, #58]
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1634              		.loc 1 989 0 discriminator 2
 1635 0038 416B     		ldr	r1, [r0, #52]
 1636 003a 1848     		ldr	r0, .L112
 1637              	.LVL148:
 1638 003c 8862     		str	r0, [r1, #40]
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1639              		.loc 1 992 0 discriminator 2
 1640 003e 616B     		ldr	r1, [r4, #52]
 1641 0040 1748     		ldr	r0, .L112+4
 1642 0042 C862     		str	r0, [r1, #44]
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1643              		.loc 1 995 0 discriminator 2
 1644 0044 616B     		ldr	r1, [r4, #52]
 1645 0046 1748     		ldr	r0, .L112+8
 1646 0048 0863     		str	r0, [r1, #48]
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 78


 1647              		.loc 1 998 0 discriminator 2
 1648 004a 616B     		ldr	r1, [r4, #52]
 1649 004c 4D63     		str	r5, [r1, #52]
 1650              	.LVL149:
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1651              		.loc 1 1002 0 discriminator 2
 1652 004e 2168     		ldr	r1, [r4]
 1653 0050 0431     		adds	r1, r1, #4
 1654 0052 606B     		ldr	r0, [r4, #52]
 1655 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1656              	.LVL150:
 1657              	.LBB2:
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1658              		.loc 1 1005 0 discriminator 2
 1659 0058 0195     		str	r5, [sp, #4]
 1660 005a 2368     		ldr	r3, [r4]
 1661 005c 1A68     		ldr	r2, [r3]
 1662 005e 0192     		str	r2, [sp, #4]
 1663 0060 5A68     		ldr	r2, [r3, #4]
 1664 0062 0192     		str	r2, [sp, #4]
 1665 0064 019A     		ldr	r2, [sp, #4]
 1666              	.LBE2:
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1667              		.loc 1 1008 0 discriminator 2
 1668 0066 84F83850 		strb	r5, [r4, #56]
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1669              		.loc 1 1011 0 discriminator 2
 1670 006a DA68     		ldr	r2, [r3, #12]
 1671 006c 42F48072 		orr	r2, r2, #256
 1672 0070 DA60     		str	r2, [r3, #12]
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1673              		.loc 1 1014 0 discriminator 2
 1674 0072 2268     		ldr	r2, [r4]
 1675 0074 5369     		ldr	r3, [r2, #20]
 1676 0076 43F00103 		orr	r3, r3, #1
 1677 007a 5361     		str	r3, [r2, #20]
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1678              		.loc 1 1018 0 discriminator 2
 1679 007c 2268     		ldr	r2, [r4]
 1680 007e 5369     		ldr	r3, [r2, #20]
 1681 0080 43F04003 		orr	r3, r3, #64
 1682 0084 5361     		str	r3, [r2, #20]
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1683              		.loc 1 1020 0 discriminator 2
 1684 0086 2846     		mov	r0, r5
 1685 0088 06E0     		b	.L106
 1686              	.LVL151:
 1687              	.L107:
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1688              		.loc 1 1024 0
 1689 008a 0220     		movs	r0, #2
 1690              	.LVL152:
 1691 008c 04E0     		b	.L106
 1692              	.LVL153:
 1693              	.L108:
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1694              		.loc 1 976 0
ARM GAS  /tmp/ccQPxto7.s 			page 79


 1695 008e 0120     		movs	r0, #1
 1696              	.LVL154:
 1697 0090 02E0     		b	.L106
 1698              	.LVL155:
 1699              	.L109:
 1700 0092 0120     		movs	r0, #1
 1701              	.LVL156:
 1702 0094 00E0     		b	.L106
 1703              	.LVL157:
 1704              	.L110:
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1705              		.loc 1 980 0
 1706 0096 0220     		movs	r0, #2
 1707              	.LVL158:
 1708              	.L106:
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1709              		.loc 1 1026 0
 1710 0098 03B0     		add	sp, sp, #12
 1711              	.LCFI21:
 1712              		.cfi_def_cfa_offset 12
 1713              		@ sp needed
 1714 009a 30BD     		pop	{r4, r5, pc}
 1715              	.L113:
 1716              		.align	2
 1717              	.L112:
 1718 009c 00000000 		.word	UART_DMAReceiveCplt
 1719 00a0 00000000 		.word	UART_DMARxHalfCplt
 1720 00a4 00000000 		.word	UART_DMAError
 1721              		.cfi_endproc
 1722              	.LFE76:
 1724              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1725              		.align	2
 1726              		.global	HAL_UART_DMAPause
 1727              		.thumb
 1728              		.thumb_func
 1730              	HAL_UART_DMAPause:
 1731              	.LFB77:
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1732              		.loc 1 1035 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736              		@ link register save eliminated.
 1737              	.LVL159:
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1738              		.loc 1 1039 0
 1739 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1740 0004 012B     		cmp	r3, #1
 1741 0006 2DD0     		beq	.L118
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1742              		.loc 1 1039 0 is_stmt 0 discriminator 2
 1743 0008 0123     		movs	r3, #1
 1744 000a 80F83830 		strb	r3, [r0, #56]
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1745              		.loc 1 1041 0 is_stmt 1 discriminator 2
 1746 000e 0168     		ldr	r1, [r0]
 1747 0010 4B69     		ldr	r3, [r1, #20]
ARM GAS  /tmp/ccQPxto7.s 			page 80


 1748 0012 03F08002 		and	r2, r3, #128
 1749              	.LVL160:
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1750              		.loc 1 1042 0 discriminator 2
 1751 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1752 001a DBB2     		uxtb	r3, r3
 1753 001c 212B     		cmp	r3, #33
 1754 001e 04D1     		bne	.L116
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1755              		.loc 1 1042 0 is_stmt 0 discriminator 1
 1756 0020 1AB1     		cbz	r2, .L116
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1757              		.loc 1 1045 0 is_stmt 1
 1758 0022 4B69     		ldr	r3, [r1, #20]
 1759 0024 23F08003 		bic	r3, r3, #128
 1760 0028 4B61     		str	r3, [r1, #20]
 1761              	.L116:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1762              		.loc 1 1048 0
 1763 002a 0168     		ldr	r1, [r0]
 1764 002c 4B69     		ldr	r3, [r1, #20]
 1765 002e 03F04002 		and	r2, r3, #64
 1766              	.LVL161:
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1767              		.loc 1 1049 0
 1768 0032 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1769 0036 DBB2     		uxtb	r3, r3
 1770 0038 222B     		cmp	r3, #34
 1771 003a 0ED1     		bne	.L117
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1772              		.loc 1 1049 0 is_stmt 0 discriminator 1
 1773 003c 6AB1     		cbz	r2, .L117
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1774              		.loc 1 1052 0 is_stmt 1
 1775 003e CB68     		ldr	r3, [r1, #12]
 1776 0040 23F48073 		bic	r3, r3, #256
 1777 0044 CB60     		str	r3, [r1, #12]
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1778              		.loc 1 1053 0
 1779 0046 0268     		ldr	r2, [r0]
 1780              	.LVL162:
 1781 0048 5369     		ldr	r3, [r2, #20]
 1782 004a 23F00103 		bic	r3, r3, #1
 1783 004e 5361     		str	r3, [r2, #20]
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1784              		.loc 1 1056 0
 1785 0050 0268     		ldr	r2, [r0]
 1786 0052 5369     		ldr	r3, [r2, #20]
 1787 0054 23F04003 		bic	r3, r3, #64
 1788 0058 5361     		str	r3, [r2, #20]
 1789              	.L117:
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1790              		.loc 1 1060 0
 1791 005a 0023     		movs	r3, #0
 1792 005c 80F83830 		strb	r3, [r0, #56]
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1793              		.loc 1 1062 0
ARM GAS  /tmp/ccQPxto7.s 			page 81


 1794 0060 1846     		mov	r0, r3
 1795              	.LVL163:
 1796 0062 7047     		bx	lr
 1797              	.LVL164:
 1798              	.L118:
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1799              		.loc 1 1039 0
 1800 0064 0220     		movs	r0, #2
 1801              	.LVL165:
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1802              		.loc 1 1063 0
 1803 0066 7047     		bx	lr
 1804              		.cfi_endproc
 1805              	.LFE77:
 1807              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1808              		.align	2
 1809              		.global	HAL_UART_DMAResume
 1810              		.thumb
 1811              		.thumb_func
 1813              	HAL_UART_DMAResume:
 1814              	.LFB78:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 1815              		.loc 1 1072 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 8
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820              	.LVL166:
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1821              		.loc 1 1074 0
 1822 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1823 0004 012B     		cmp	r3, #1
 1824 0006 2DD0     		beq	.L123
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1825              		.loc 1 1074 0 is_stmt 0 discriminator 2
 1826 0008 0123     		movs	r3, #1
 1827 000a 80F83830 		strb	r3, [r0, #56]
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1828              		.loc 1 1076 0 is_stmt 1 discriminator 2
 1829 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1830 0012 DBB2     		uxtb	r3, r3
 1831 0014 212B     		cmp	r3, #33
 1832 0016 04D1     		bne	.L121
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1833              		.loc 1 1079 0
 1834 0018 0268     		ldr	r2, [r0]
 1835 001a 5369     		ldr	r3, [r2, #20]
 1836 001c 43F08003 		orr	r3, r3, #128
 1837 0020 5361     		str	r3, [r2, #20]
 1838              	.L121:
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1839              		.loc 1 1082 0
 1840 0022 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1841 0026 DBB2     		uxtb	r3, r3
 1842 0028 222B     		cmp	r3, #34
 1843 002a 1FD1     		bne	.L125
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccQPxto7.s 			page 82


 1844              		.loc 1 1072 0
 1845 002c 82B0     		sub	sp, sp, #8
 1846              	.LCFI22:
 1847              		.cfi_def_cfa_offset 8
 1848              	.LBB3:
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1849              		.loc 1 1085 0
 1850 002e 0023     		movs	r3, #0
 1851 0030 0193     		str	r3, [sp, #4]
 1852 0032 0368     		ldr	r3, [r0]
 1853 0034 1A68     		ldr	r2, [r3]
 1854 0036 0192     		str	r2, [sp, #4]
 1855 0038 5A68     		ldr	r2, [r3, #4]
 1856 003a 0192     		str	r2, [sp, #4]
 1857 003c 019A     		ldr	r2, [sp, #4]
 1858              	.LBE3:
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1859              		.loc 1 1088 0
 1860 003e DA68     		ldr	r2, [r3, #12]
 1861 0040 42F48072 		orr	r2, r2, #256
 1862 0044 DA60     		str	r2, [r3, #12]
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1863              		.loc 1 1089 0
 1864 0046 0268     		ldr	r2, [r0]
 1865 0048 5369     		ldr	r3, [r2, #20]
 1866 004a 43F00103 		orr	r3, r3, #1
 1867 004e 5361     		str	r3, [r2, #20]
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1868              		.loc 1 1092 0
 1869 0050 0268     		ldr	r2, [r0]
 1870 0052 5369     		ldr	r3, [r2, #20]
 1871 0054 43F04003 		orr	r3, r3, #64
 1872 0058 5361     		str	r3, [r2, #20]
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1873              		.loc 1 1096 0
 1874 005a 0023     		movs	r3, #0
 1875 005c 80F83830 		strb	r3, [r0, #56]
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1876              		.loc 1 1098 0
 1877 0060 1846     		mov	r0, r3
 1878              	.LVL167:
 1879 0062 01E0     		b	.L120
 1880              	.LVL168:
 1881              	.L123:
 1882              	.LCFI23:
 1883              		.cfi_def_cfa_offset 0
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1884              		.loc 1 1074 0
 1885 0064 0220     		movs	r0, #2
 1886              	.LVL169:
 1887 0066 7047     		bx	lr
 1888              	.L120:
 1889              	.LCFI24:
 1890              		.cfi_def_cfa_offset 8
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1891              		.loc 1 1099 0
 1892 0068 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccQPxto7.s 			page 83


 1893              	.LCFI25:
 1894              		.cfi_def_cfa_offset 0
 1895              		@ sp needed
 1896 006a 7047     		bx	lr
 1897              	.LVL170:
 1898              	.L125:
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1899              		.loc 1 1096 0
 1900 006c 0023     		movs	r3, #0
 1901 006e 80F83830 		strb	r3, [r0, #56]
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1902              		.loc 1 1098 0
 1903 0072 1846     		mov	r0, r3
 1904              	.LVL171:
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1905              		.loc 1 1099 0
 1906 0074 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE78:
 1910 0076 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1911              		.align	2
 1912              		.global	HAL_UART_DMAStop
 1913              		.thumb
 1914              		.thumb_func
 1916              	HAL_UART_DMAStop:
 1917              	.LFB79:
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1918              		.loc 1 1108 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              	.LVL172:
 1923 0000 10B5     		push	{r4, lr}
 1924              	.LCFI26:
 1925              		.cfi_def_cfa_offset 8
 1926              		.cfi_offset 4, -8
 1927              		.cfi_offset 14, -4
 1928 0002 0446     		mov	r4, r0
 1929              	.LVL173:
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1930              		.loc 1 1117 0
 1931 0004 0168     		ldr	r1, [r0]
 1932 0006 4B69     		ldr	r3, [r1, #20]
 1933 0008 03F08002 		and	r2, r3, #128
 1934              	.LVL174:
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1935              		.loc 1 1118 0
 1936 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1937 0010 DBB2     		uxtb	r3, r3
 1938 0012 212B     		cmp	r3, #33
 1939 0014 0BD1     		bne	.L128
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1940              		.loc 1 1118 0 is_stmt 0 discriminator 1
 1941 0016 52B1     		cbz	r2, .L128
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1942              		.loc 1 1120 0 is_stmt 1
 1943 0018 4B69     		ldr	r3, [r1, #20]
ARM GAS  /tmp/ccQPxto7.s 			page 84


 1944 001a 23F08003 		bic	r3, r3, #128
 1945 001e 4B61     		str	r3, [r1, #20]
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1946              		.loc 1 1123 0
 1947 0020 006B     		ldr	r0, [r0, #48]
 1948              	.LVL175:
 1949 0022 08B1     		cbz	r0, .L129
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1950              		.loc 1 1125 0
 1951 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 1952              	.LVL176:
 1953              	.L129:
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1954              		.loc 1 1127 0
 1955 0028 2046     		mov	r0, r4
 1956 002a FFF7FEFF 		bl	UART_EndTxTransfer
 1957              	.LVL177:
 1958              	.L128:
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1959              		.loc 1 1131 0
 1960 002e 2168     		ldr	r1, [r4]
 1961 0030 4B69     		ldr	r3, [r1, #20]
 1962 0032 03F04002 		and	r2, r3, #64
 1963              	.LVL178:
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1964              		.loc 1 1132 0
 1965 0036 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 1966 003a DBB2     		uxtb	r3, r3
 1967 003c 222B     		cmp	r3, #34
 1968 003e 0BD1     		bne	.L130
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1969              		.loc 1 1132 0 is_stmt 0 discriminator 1
 1970 0040 52B1     		cbz	r2, .L130
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1971              		.loc 1 1134 0 is_stmt 1
 1972 0042 4B69     		ldr	r3, [r1, #20]
 1973 0044 23F04003 		bic	r3, r3, #64
 1974 0048 4B61     		str	r3, [r1, #20]
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1975              		.loc 1 1137 0
 1976 004a 606B     		ldr	r0, [r4, #52]
 1977 004c 08B1     		cbz	r0, .L131
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1978              		.loc 1 1139 0
 1979 004e FFF7FEFF 		bl	HAL_DMA_Abort
 1980              	.LVL179:
 1981              	.L131:
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1982              		.loc 1 1141 0
 1983 0052 2046     		mov	r0, r4
 1984 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 1985              	.LVL180:
 1986              	.L130:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1987              		.loc 1 1145 0
 1988 0058 0020     		movs	r0, #0
 1989 005a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccQPxto7.s 			page 85


 1990              		.cfi_endproc
 1991              	.LFE79:
 1993              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1994              		.align	2
 1995              		.global	HAL_UART_Abort
 1996              		.thumb
 1997              		.thumb_func
 1999              	HAL_UART_Abort:
 2000              	.LFB80:
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2001              		.loc 1 1160 0
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 0
 2004              		@ frame_needed = 0, uses_anonymous_args = 0
 2005              	.LVL181:
 2006 0000 10B5     		push	{r4, lr}
 2007              	.LCFI27:
 2008              		.cfi_def_cfa_offset 8
 2009              		.cfi_offset 4, -8
 2010              		.cfi_offset 14, -4
 2011 0002 0446     		mov	r4, r0
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2012              		.loc 1 1162 0
 2013 0004 0268     		ldr	r2, [r0]
 2014 0006 D368     		ldr	r3, [r2, #12]
 2015 0008 23F4F073 		bic	r3, r3, #480
 2016 000c D360     		str	r3, [r2, #12]
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2017              		.loc 1 1163 0
 2018 000e 0268     		ldr	r2, [r0]
 2019 0010 5369     		ldr	r3, [r2, #20]
 2020 0012 23F00103 		bic	r3, r3, #1
 2021 0016 5361     		str	r3, [r2, #20]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2022              		.loc 1 1166 0
 2023 0018 0368     		ldr	r3, [r0]
 2024 001a 5A69     		ldr	r2, [r3, #20]
 2025 001c 12F0800F 		tst	r2, #128
 2026 0020 0AD0     		beq	.L134
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2027              		.loc 1 1168 0
 2028 0022 5A69     		ldr	r2, [r3, #20]
 2029 0024 22F08002 		bic	r2, r2, #128
 2030 0028 5A61     		str	r2, [r3, #20]
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2031              		.loc 1 1171 0
 2032 002a 036B     		ldr	r3, [r0, #48]
 2033 002c 23B1     		cbz	r3, .L134
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2034              		.loc 1 1175 0
 2035 002e 0022     		movs	r2, #0
 2036 0030 5A63     		str	r2, [r3, #52]
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2037              		.loc 1 1177 0
 2038 0032 006B     		ldr	r0, [r0, #48]
 2039              	.LVL182:
 2040 0034 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/ccQPxto7.s 			page 86


 2041              	.LVL183:
 2042              	.L134:
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2043              		.loc 1 1182 0
 2044 0038 2368     		ldr	r3, [r4]
 2045 003a 5A69     		ldr	r2, [r3, #20]
 2046 003c 12F0400F 		tst	r2, #64
 2047 0040 0AD0     		beq	.L135
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2048              		.loc 1 1184 0
 2049 0042 5A69     		ldr	r2, [r3, #20]
 2050 0044 22F04002 		bic	r2, r2, #64
 2051 0048 5A61     		str	r2, [r3, #20]
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2052              		.loc 1 1187 0
 2053 004a 636B     		ldr	r3, [r4, #52]
 2054 004c 23B1     		cbz	r3, .L135
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2055              		.loc 1 1191 0
 2056 004e 0022     		movs	r2, #0
 2057 0050 5A63     		str	r2, [r3, #52]
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2058              		.loc 1 1193 0
 2059 0052 606B     		ldr	r0, [r4, #52]
 2060 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2061              	.LVL184:
 2062              	.L135:
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2063              		.loc 1 1198 0
 2064 0058 0020     		movs	r0, #0
 2065 005a E084     		strh	r0, [r4, #38]	@ movhi
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2066              		.loc 1 1199 0
 2067 005c E085     		strh	r0, [r4, #46]	@ movhi
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2068              		.loc 1 1202 0
 2069 005e E063     		str	r0, [r4, #60]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2070              		.loc 1 1205 0
 2071 0060 2023     		movs	r3, #32
 2072 0062 84F83A30 		strb	r3, [r4, #58]
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2073              		.loc 1 1206 0
 2074 0066 84F83930 		strb	r3, [r4, #57]
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2075              		.loc 1 1209 0
 2076 006a 10BD     		pop	{r4, pc}
 2077              		.cfi_endproc
 2078              	.LFE80:
 2080              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2081              		.align	2
 2082              		.global	HAL_UART_AbortTransmit
 2083              		.thumb
 2084              		.thumb_func
 2086              	HAL_UART_AbortTransmit:
 2087              	.LFB81:
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  /tmp/ccQPxto7.s 			page 87


 2088              		.loc 1 1224 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              	.LVL185:
 2093 0000 10B5     		push	{r4, lr}
 2094              	.LCFI28:
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 4, -8
 2097              		.cfi_offset 14, -4
 2098 0002 0446     		mov	r4, r0
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2099              		.loc 1 1226 0
 2100 0004 0268     		ldr	r2, [r0]
 2101 0006 D368     		ldr	r3, [r2, #12]
 2102 0008 23F0C003 		bic	r3, r3, #192
 2103 000c D360     		str	r3, [r2, #12]
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2104              		.loc 1 1229 0
 2105 000e 0368     		ldr	r3, [r0]
 2106 0010 5A69     		ldr	r2, [r3, #20]
 2107 0012 12F0800F 		tst	r2, #128
 2108 0016 0AD0     		beq	.L138
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2109              		.loc 1 1231 0
 2110 0018 5A69     		ldr	r2, [r3, #20]
 2111 001a 22F08002 		bic	r2, r2, #128
 2112 001e 5A61     		str	r2, [r3, #20]
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2113              		.loc 1 1234 0
 2114 0020 036B     		ldr	r3, [r0, #48]
 2115 0022 23B1     		cbz	r3, .L138
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2116              		.loc 1 1238 0
 2117 0024 0022     		movs	r2, #0
 2118 0026 5A63     		str	r2, [r3, #52]
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2119              		.loc 1 1240 0
 2120 0028 006B     		ldr	r0, [r0, #48]
 2121              	.LVL186:
 2122 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2123              	.LVL187:
 2124              	.L138:
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2125              		.loc 1 1245 0
 2126 002e 0020     		movs	r0, #0
 2127 0030 E084     		strh	r0, [r4, #38]	@ movhi
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2128              		.loc 1 1248 0
 2129 0032 2023     		movs	r3, #32
 2130 0034 84F83930 		strb	r3, [r4, #57]
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2131              		.loc 1 1251 0
 2132 0038 10BD     		pop	{r4, pc}
 2133              		.cfi_endproc
 2134              	.LFE81:
 2136 003a 00BF     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
ARM GAS  /tmp/ccQPxto7.s 			page 88


 2137              		.align	2
 2138              		.global	HAL_UART_AbortReceive
 2139              		.thumb
 2140              		.thumb_func
 2142              	HAL_UART_AbortReceive:
 2143              	.LFB82:
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2144              		.loc 1 1266 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              	.LVL188:
 2149 0000 10B5     		push	{r4, lr}
 2150              	.LCFI29:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 4, -8
 2153              		.cfi_offset 14, -4
 2154 0002 0446     		mov	r4, r0
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2155              		.loc 1 1268 0
 2156 0004 0268     		ldr	r2, [r0]
 2157 0006 D368     		ldr	r3, [r2, #12]
 2158 0008 23F49073 		bic	r3, r3, #288
 2159 000c D360     		str	r3, [r2, #12]
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2160              		.loc 1 1269 0
 2161 000e 0268     		ldr	r2, [r0]
 2162 0010 5369     		ldr	r3, [r2, #20]
 2163 0012 23F00103 		bic	r3, r3, #1
 2164 0016 5361     		str	r3, [r2, #20]
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2165              		.loc 1 1272 0
 2166 0018 0368     		ldr	r3, [r0]
 2167 001a 5A69     		ldr	r2, [r3, #20]
 2168 001c 12F0400F 		tst	r2, #64
 2169 0020 0AD0     		beq	.L141
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2170              		.loc 1 1274 0
 2171 0022 5A69     		ldr	r2, [r3, #20]
 2172 0024 22F04002 		bic	r2, r2, #64
 2173 0028 5A61     		str	r2, [r3, #20]
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2174              		.loc 1 1277 0
 2175 002a 436B     		ldr	r3, [r0, #52]
 2176 002c 23B1     		cbz	r3, .L141
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2177              		.loc 1 1281 0
 2178 002e 0022     		movs	r2, #0
 2179 0030 5A63     		str	r2, [r3, #52]
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2180              		.loc 1 1283 0
 2181 0032 406B     		ldr	r0, [r0, #52]
 2182              	.LVL189:
 2183 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2184              	.LVL190:
 2185              	.L141:
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 89


 2186              		.loc 1 1288 0
 2187 0038 0020     		movs	r0, #0
 2188 003a E085     		strh	r0, [r4, #46]	@ movhi
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2189              		.loc 1 1291 0
 2190 003c 2023     		movs	r3, #32
 2191 003e 84F83A30 		strb	r3, [r4, #58]
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2192              		.loc 1 1294 0
 2193 0042 10BD     		pop	{r4, pc}
 2194              		.cfi_endproc
 2195              	.LFE82:
 2197              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2198              		.align	2
 2199              		.weak	HAL_UART_TxCpltCallback
 2200              		.thumb
 2201              		.thumb_func
 2203              	HAL_UART_TxCpltCallback:
 2204              	.LFB87:
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2205              		.loc 1 1683 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 2209              		@ link register save eliminated.
 2210              	.LVL191:
 2211 0000 7047     		bx	lr
 2212              		.cfi_endproc
 2213              	.LFE87:
 2215 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2216              		.align	2
 2217              		.thumb
 2218              		.thumb_func
 2220              	UART_DMATransmitCplt:
 2221              	.LFB102:
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2222              		.loc 1 2027 0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 0
 2225              		@ frame_needed = 0, uses_anonymous_args = 0
 2226              	.LVL192:
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2227              		.loc 1 2027 0
 2228 0000 08B5     		push	{r3, lr}
 2229              	.LCFI30:
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 3, -8
 2232              		.cfi_offset 14, -4
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2233              		.loc 1 2028 0
 2234 0002 436A     		ldr	r3, [r0, #36]
 2235              	.LVL193:
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2236              		.loc 1 2030 0
 2237 0004 0268     		ldr	r2, [r0]
 2238 0006 1268     		ldr	r2, [r2]
 2239 0008 12F0200F 		tst	r2, #32
ARM GAS  /tmp/ccQPxto7.s 			page 90


 2240 000c 0CD1     		bne	.L145
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2241              		.loc 1 2032 0
 2242 000e 0022     		movs	r2, #0
 2243 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2244              		.loc 1 2036 0
 2245 0012 1968     		ldr	r1, [r3]
 2246 0014 4A69     		ldr	r2, [r1, #20]
 2247 0016 22F08002 		bic	r2, r2, #128
 2248 001a 4A61     		str	r2, [r1, #20]
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2249              		.loc 1 2039 0
 2250 001c 1A68     		ldr	r2, [r3]
 2251 001e D368     		ldr	r3, [r2, #12]
 2252              	.LVL194:
 2253 0020 43F04003 		orr	r3, r3, #64
 2254 0024 D360     		str	r3, [r2, #12]
 2255 0026 08BD     		pop	{r3, pc}
 2256              	.LVL195:
 2257              	.L145:
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2258              		.loc 1 2045 0
 2259 0028 1846     		mov	r0, r3
 2260              	.LVL196:
 2261 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2262              	.LVL197:
 2263 002e 08BD     		pop	{r3, pc}
 2264              		.cfi_endproc
 2265              	.LFE102:
 2267              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2268              		.align	2
 2269              		.thumb
 2270              		.thumb_func
 2272              	UART_EndTransmit_IT:
 2273              	.LFB116:
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2274              		.loc 1 2385 0
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 0, uses_anonymous_args = 0
 2278              	.LVL198:
 2279 0000 08B5     		push	{r3, lr}
 2280              	.LCFI31:
 2281              		.cfi_def_cfa_offset 8
 2282              		.cfi_offset 3, -8
 2283              		.cfi_offset 14, -4
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2284              		.loc 1 2387 0
 2285 0002 0168     		ldr	r1, [r0]
 2286 0004 CB68     		ldr	r3, [r1, #12]
 2287 0006 23F04003 		bic	r3, r3, #64
 2288 000a CB60     		str	r3, [r1, #12]
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2289              		.loc 1 2390 0
 2290 000c 2023     		movs	r3, #32
 2291 000e 80F83930 		strb	r3, [r0, #57]
ARM GAS  /tmp/ccQPxto7.s 			page 91


2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2292              		.loc 1 2391 0
 2293 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2294              	.LVL199:
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2295              		.loc 1 2394 0
 2296 0016 0020     		movs	r0, #0
 2297 0018 08BD     		pop	{r3, pc}
 2298              		.cfi_endproc
 2299              	.LFE116:
 2301 001a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2302              		.align	2
 2303              		.weak	HAL_UART_TxHalfCpltCallback
 2304              		.thumb
 2305              		.thumb_func
 2307              	HAL_UART_TxHalfCpltCallback:
 2308              	.LFB88:
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2309              		.loc 1 1698 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 0
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313              		@ link register save eliminated.
 2314              	.LVL200:
 2315 0000 7047     		bx	lr
 2316              		.cfi_endproc
 2317              	.LFE88:
 2319 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2320              		.align	2
 2321              		.thumb
 2322              		.thumb_func
 2324              	UART_DMATxHalfCplt:
 2325              	.LFB103:
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2326              		.loc 1 2056 0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330              	.LVL201:
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2331              		.loc 1 2056 0
 2332 0000 08B5     		push	{r3, lr}
 2333              	.LCFI32:
 2334              		.cfi_def_cfa_offset 8
 2335              		.cfi_offset 3, -8
 2336              		.cfi_offset 14, -4
 2337              	.LVL202:
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2338              		.loc 1 2059 0
 2339 0002 406A     		ldr	r0, [r0, #36]
 2340              	.LVL203:
 2341 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2342              	.LVL204:
 2343 0008 08BD     		pop	{r3, pc}
 2344              		.cfi_endproc
 2345              	.LFE103:
 2347 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccQPxto7.s 			page 92


 2348              		.align	2
 2349              		.weak	HAL_UART_RxCpltCallback
 2350              		.thumb
 2351              		.thumb_func
 2353              	HAL_UART_RxCpltCallback:
 2354              	.LFB89:
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2355              		.loc 1 1713 0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              		@ link register save eliminated.
 2360              	.LVL205:
 2361 0000 7047     		bx	lr
 2362              		.cfi_endproc
 2363              	.LFE89:
 2365 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2366              		.align	2
 2367              		.thumb
 2368              		.thumb_func
 2370              	UART_DMAReceiveCplt:
 2371              	.LFB104:
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2372              		.loc 1 2068 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376              	.LVL206:
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2377              		.loc 1 2068 0
 2378 0000 08B5     		push	{r3, lr}
 2379              	.LCFI33:
 2380              		.cfi_def_cfa_offset 8
 2381              		.cfi_offset 3, -8
 2382              		.cfi_offset 14, -4
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2383              		.loc 1 2069 0
 2384 0002 436A     		ldr	r3, [r0, #36]
 2385              	.LVL207:
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2386              		.loc 1 2071 0
 2387 0004 0268     		ldr	r2, [r0]
 2388 0006 1268     		ldr	r2, [r2]
 2389 0008 12F0200F 		tst	r2, #32
 2390 000c 13D1     		bne	.L155
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2391              		.loc 1 2073 0
 2392 000e 0022     		movs	r2, #0
 2393 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2394              		.loc 1 2076 0
 2395 0012 1968     		ldr	r1, [r3]
 2396 0014 CA68     		ldr	r2, [r1, #12]
 2397 0016 22F48072 		bic	r2, r2, #256
 2398 001a CA60     		str	r2, [r1, #12]
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 2399              		.loc 1 2077 0
ARM GAS  /tmp/ccQPxto7.s 			page 93


 2400 001c 1968     		ldr	r1, [r3]
 2401 001e 4A69     		ldr	r2, [r1, #20]
 2402 0020 22F00102 		bic	r2, r2, #1
 2403 0024 4A61     		str	r2, [r1, #20]
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2404              		.loc 1 2081 0
 2405 0026 1968     		ldr	r1, [r3]
 2406 0028 4A69     		ldr	r2, [r1, #20]
 2407 002a 22F04002 		bic	r2, r2, #64
 2408 002e 4A61     		str	r2, [r1, #20]
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2409              		.loc 1 2084 0
 2410 0030 2022     		movs	r2, #32
 2411 0032 83F83A20 		strb	r2, [r3, #58]
 2412              	.L155:
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2413              		.loc 1 2086 0
 2414 0036 1846     		mov	r0, r3
 2415              	.LVL208:
 2416 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2417              	.LVL209:
 2418 003c 08BD     		pop	{r3, pc}
 2419              		.cfi_endproc
 2420              	.LFE104:
 2422 003e 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 2423              		.align	2
 2424              		.thumb
 2425              		.thumb_func
 2427              	UART_Receive_IT:
 2428              	.LFB117:
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 2429              		.loc 1 2403 0
 2430              		.cfi_startproc
 2431              		@ args = 0, pretend = 0, frame = 0
 2432              		@ frame_needed = 0, uses_anonymous_args = 0
 2433              	.LVL210:
 2434 0000 08B5     		push	{r3, lr}
 2435              	.LCFI34:
 2436              		.cfi_def_cfa_offset 8
 2437              		.cfi_offset 3, -8
 2438              		.cfi_offset 14, -4
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2439              		.loc 1 2407 0
 2440 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2441 0006 DBB2     		uxtb	r3, r3
 2442 0008 222B     		cmp	r3, #34
 2443 000a 44D1     		bne	.L163
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2444              		.loc 1 2409 0
 2445 000c 8368     		ldr	r3, [r0, #8]
 2446 000e B3F5805F 		cmp	r3, #4096
 2447 0012 13D1     		bne	.L159
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2448              		.loc 1 2411 0
 2449 0014 826A     		ldr	r2, [r0, #40]
 2450              	.LVL211:
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  /tmp/ccQPxto7.s 			page 94


 2451              		.loc 1 2412 0
 2452 0016 0369     		ldr	r3, [r0, #16]
 2453 0018 43B9     		cbnz	r3, .L160
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2454              		.loc 1 2414 0
 2455 001a 0368     		ldr	r3, [r0]
 2456 001c 5B68     		ldr	r3, [r3, #4]
 2457 001e C3F30803 		ubfx	r3, r3, #0, #9
 2458 0022 1380     		strh	r3, [r2]	@ movhi
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2459              		.loc 1 2415 0
 2460 0024 836A     		ldr	r3, [r0, #40]
 2461 0026 0233     		adds	r3, r3, #2
 2462 0028 8362     		str	r3, [r0, #40]
 2463 002a 18E0     		b	.L161
 2464              	.L160:
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2465              		.loc 1 2419 0
 2466 002c 0368     		ldr	r3, [r0]
 2467 002e 5B68     		ldr	r3, [r3, #4]
 2468 0030 DBB2     		uxtb	r3, r3
 2469 0032 1380     		strh	r3, [r2]	@ movhi
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2470              		.loc 1 2420 0
 2471 0034 836A     		ldr	r3, [r0, #40]
 2472 0036 0133     		adds	r3, r3, #1
 2473 0038 8362     		str	r3, [r0, #40]
 2474 003a 10E0     		b	.L161
 2475              	.LVL212:
 2476              	.L159:
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2477              		.loc 1 2425 0
 2478 003c 0369     		ldr	r3, [r0, #16]
 2479 003e 33B9     		cbnz	r3, .L162
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2480              		.loc 1 2427 0
 2481 0040 836A     		ldr	r3, [r0, #40]
 2482 0042 5A1C     		adds	r2, r3, #1
 2483 0044 8262     		str	r2, [r0, #40]
 2484 0046 0268     		ldr	r2, [r0]
 2485 0048 5268     		ldr	r2, [r2, #4]
 2486 004a 1A70     		strb	r2, [r3]
 2487 004c 07E0     		b	.L161
 2488              	.L162:
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2489              		.loc 1 2431 0
 2490 004e 826A     		ldr	r2, [r0, #40]
 2491 0050 531C     		adds	r3, r2, #1
 2492 0052 8362     		str	r3, [r0, #40]
 2493 0054 0368     		ldr	r3, [r0]
 2494 0056 5B68     		ldr	r3, [r3, #4]
 2495 0058 03F07F03 		and	r3, r3, #127
 2496 005c 1370     		strb	r3, [r2]
 2497              	.L161:
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2498              		.loc 1 2435 0
 2499 005e C38D     		ldrh	r3, [r0, #46]
ARM GAS  /tmp/ccQPxto7.s 			page 95


 2500 0060 9BB2     		uxth	r3, r3
 2501 0062 013B     		subs	r3, r3, #1
 2502 0064 9BB2     		uxth	r3, r3
 2503 0066 C385     		strh	r3, [r0, #46]	@ movhi
 2504 0068 BBB9     		cbnz	r3, .L164
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2505              		.loc 1 2438 0
 2506 006a 0268     		ldr	r2, [r0]
 2507 006c D368     		ldr	r3, [r2, #12]
 2508 006e 23F02003 		bic	r3, r3, #32
 2509 0072 D360     		str	r3, [r2, #12]
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 2510              		.loc 1 2441 0
 2511 0074 0268     		ldr	r2, [r0]
 2512 0076 D368     		ldr	r3, [r2, #12]
 2513 0078 23F48073 		bic	r3, r3, #256
 2514 007c D360     		str	r3, [r2, #12]
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2515              		.loc 1 2443 0
 2516 007e 0268     		ldr	r2, [r0]
 2517 0080 5369     		ldr	r3, [r2, #20]
 2518 0082 23F00103 		bic	r3, r3, #1
 2519 0086 5361     		str	r3, [r2, #20]
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2520              		.loc 1 2446 0
 2521 0088 2023     		movs	r3, #32
 2522 008a 80F83A30 		strb	r3, [r0, #58]
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2523              		.loc 1 2448 0
 2524 008e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2525              	.LVL213:
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2526              		.loc 1 2450 0
 2527 0092 0020     		movs	r0, #0
 2528 0094 08BD     		pop	{r3, pc}
 2529              	.LVL214:
 2530              	.L163:
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2531              		.loc 1 2456 0
 2532 0096 0220     		movs	r0, #2
 2533              	.LVL215:
 2534 0098 08BD     		pop	{r3, pc}
 2535              	.LVL216:
 2536              	.L164:
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2537              		.loc 1 2452 0
 2538 009a 0020     		movs	r0, #0
 2539              	.LVL217:
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2540              		.loc 1 2458 0
 2541 009c 08BD     		pop	{r3, pc}
 2542              		.cfi_endproc
 2543              	.LFE117:
 2545 009e 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2546              		.align	2
 2547              		.weak	HAL_UART_RxHalfCpltCallback
 2548              		.thumb
ARM GAS  /tmp/ccQPxto7.s 			page 96


 2549              		.thumb_func
 2551              	HAL_UART_RxHalfCpltCallback:
 2552              	.LFB90:
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2553              		.loc 1 1728 0
 2554              		.cfi_startproc
 2555              		@ args = 0, pretend = 0, frame = 0
 2556              		@ frame_needed = 0, uses_anonymous_args = 0
 2557              		@ link register save eliminated.
 2558              	.LVL218:
 2559 0000 7047     		bx	lr
 2560              		.cfi_endproc
 2561              	.LFE90:
 2563 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2564              		.align	2
 2565              		.thumb
 2566              		.thumb_func
 2568              	UART_DMARxHalfCplt:
 2569              	.LFB105:
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2570              		.loc 1 2096 0
 2571              		.cfi_startproc
 2572              		@ args = 0, pretend = 0, frame = 0
 2573              		@ frame_needed = 0, uses_anonymous_args = 0
 2574              	.LVL219:
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2575              		.loc 1 2096 0
 2576 0000 08B5     		push	{r3, lr}
 2577              	.LCFI35:
 2578              		.cfi_def_cfa_offset 8
 2579              		.cfi_offset 3, -8
 2580              		.cfi_offset 14, -4
 2581              	.LVL220:
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2582              		.loc 1 2098 0
 2583 0002 406A     		ldr	r0, [r0, #36]
 2584              	.LVL221:
 2585 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2586              	.LVL222:
 2587 0008 08BD     		pop	{r3, pc}
 2588              		.cfi_endproc
 2589              	.LFE105:
 2591 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2592              		.align	2
 2593              		.weak	HAL_UART_ErrorCallback
 2594              		.thumb
 2595              		.thumb_func
 2597              	HAL_UART_ErrorCallback:
 2598              	.LFB91:
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2599              		.loc 1 1743 0
 2600              		.cfi_startproc
 2601              		@ args = 0, pretend = 0, frame = 0
 2602              		@ frame_needed = 0, uses_anonymous_args = 0
 2603              		@ link register save eliminated.
 2604              	.LVL223:
 2605 0000 7047     		bx	lr
ARM GAS  /tmp/ccQPxto7.s 			page 97


 2606              		.cfi_endproc
 2607              	.LFE91:
 2609 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2610              		.align	2
 2611              		.thumb
 2612              		.thumb_func
 2614              	UART_DMAError:
 2615              	.LFB106:
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2616              		.loc 1 2107 0
 2617              		.cfi_startproc
 2618              		@ args = 0, pretend = 0, frame = 0
 2619              		@ frame_needed = 0, uses_anonymous_args = 0
 2620              	.LVL224:
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2621              		.loc 1 2107 0
 2622 0000 10B5     		push	{r4, lr}
 2623              	.LCFI36:
 2624              		.cfi_def_cfa_offset 8
 2625              		.cfi_offset 4, -8
 2626              		.cfi_offset 14, -4
 2627              	.LVL225:
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2628              		.loc 1 2109 0
 2629 0002 446A     		ldr	r4, [r0, #36]
 2630              	.LVL226:
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2631              		.loc 1 2112 0
 2632 0004 2368     		ldr	r3, [r4]
 2633 0006 5B69     		ldr	r3, [r3, #20]
 2634 0008 03F08002 		and	r2, r3, #128
 2635              	.LVL227:
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2636              		.loc 1 2113 0
 2637 000c 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2638 0010 DBB2     		uxtb	r3, r3
 2639 0012 212B     		cmp	r3, #33
 2640 0014 05D1     		bne	.L171
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2641              		.loc 1 2113 0 is_stmt 0 discriminator 1
 2642 0016 22B1     		cbz	r2, .L171
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2643              		.loc 1 2115 0 is_stmt 1
 2644 0018 0023     		movs	r3, #0
 2645 001a E384     		strh	r3, [r4, #38]	@ movhi
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2646              		.loc 1 2116 0
 2647 001c 2046     		mov	r0, r4
 2648              	.LVL228:
 2649 001e FFF7FEFF 		bl	UART_EndTxTransfer
 2650              	.LVL229:
 2651              	.L171:
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2652              		.loc 1 2120 0
 2653 0022 2368     		ldr	r3, [r4]
 2654 0024 5B69     		ldr	r3, [r3, #20]
 2655 0026 03F04002 		and	r2, r3, #64
ARM GAS  /tmp/ccQPxto7.s 			page 98


 2656              	.LVL230:
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2657              		.loc 1 2121 0
 2658 002a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2659 002e DBB2     		uxtb	r3, r3
 2660 0030 222B     		cmp	r3, #34
 2661 0032 05D1     		bne	.L172
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2662              		.loc 1 2121 0 is_stmt 0 discriminator 1
 2663 0034 22B1     		cbz	r2, .L172
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2664              		.loc 1 2123 0 is_stmt 1
 2665 0036 0023     		movs	r3, #0
 2666 0038 E385     		strh	r3, [r4, #46]	@ movhi
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2667              		.loc 1 2124 0
 2668 003a 2046     		mov	r0, r4
 2669 003c FFF7FEFF 		bl	UART_EndRxTransfer
 2670              	.LVL231:
 2671              	.L172:
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2672              		.loc 1 2127 0
 2673 0040 E36B     		ldr	r3, [r4, #60]
 2674 0042 43F01003 		orr	r3, r3, #16
 2675 0046 E363     		str	r3, [r4, #60]
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2676              		.loc 1 2128 0
 2677 0048 2046     		mov	r0, r4
 2678 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2679              	.LVL232:
 2680 004e 10BD     		pop	{r4, pc}
 2681              		.cfi_endproc
 2682              	.LFE106:
 2684              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2685              		.align	2
 2686              		.global	HAL_UART_IRQHandler
 2687              		.thumb
 2688              		.thumb_func
 2690              	HAL_UART_IRQHandler:
 2691              	.LFB86:
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2692              		.loc 1 1556 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 0, uses_anonymous_args = 0
 2696              	.LVL233:
 2697 0000 10B5     		push	{r4, lr}
 2698              	.LCFI37:
 2699              		.cfi_def_cfa_offset 8
 2700              		.cfi_offset 4, -8
 2701              		.cfi_offset 14, -4
 2702 0002 0446     		mov	r4, r0
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2703              		.loc 1 1557 0
 2704 0004 0268     		ldr	r2, [r0]
 2705 0006 1368     		ldr	r3, [r2]
 2706              	.LVL234:
ARM GAS  /tmp/ccQPxto7.s 			page 99


1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2707              		.loc 1 1558 0
 2708 0008 D168     		ldr	r1, [r2, #12]
 2709              	.LVL235:
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2710              		.loc 1 1559 0
 2711 000a 5269     		ldr	r2, [r2, #20]
 2712              	.LVL236:
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2713              		.loc 1 1565 0
 2714 000c 13F00F00 		ands	r0, r3, #15
 2715              	.LVL237:
 2716 0010 09D1     		bne	.L175
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2717              		.loc 1 1568 0
 2718 0012 13F0200F 		tst	r3, #32
 2719 0016 06D0     		beq	.L175
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2720              		.loc 1 1568 0 is_stmt 0 discriminator 1
 2721 0018 11F0200F 		tst	r1, #32
 2722 001c 03D0     		beq	.L175
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 2723              		.loc 1 1570 0 is_stmt 1
 2724 001e 2046     		mov	r0, r4
 2725              	.LVL238:
 2726 0020 FFF7FEFF 		bl	UART_Receive_IT
 2727              	.LVL239:
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2728              		.loc 1 1571 0
 2729 0024 10BD     		pop	{r4, pc}
 2730              	.LVL240:
 2731              	.L175:
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2732              		.loc 1 1576 0
 2733 0026 0028     		cmp	r0, #0
 2734 0028 62D0     		beq	.L177
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2735              		.loc 1 1576 0 is_stmt 0 discriminator 1
 2736 002a 12F00102 		ands	r2, r2, #1
 2737              	.LVL241:
 2738 002e 02D1     		bne	.L178
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2739              		.loc 1 1576 0 discriminator 2
 2740 0030 11F4907F 		tst	r1, #288
 2741 0034 5CD0     		beq	.L177
 2742              	.L178:
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2743              		.loc 1 1579 0 is_stmt 1
 2744 0036 13F0010F 		tst	r3, #1
 2745 003a 06D0     		beq	.L179
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2746              		.loc 1 1579 0 is_stmt 0 discriminator 1
 2747 003c 11F4807F 		tst	r1, #256
 2748 0040 03D0     		beq	.L179
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2749              		.loc 1 1581 0 is_stmt 1
 2750 0042 E06B     		ldr	r0, [r4, #60]
ARM GAS  /tmp/ccQPxto7.s 			page 100


 2751              	.LVL242:
 2752 0044 40F00100 		orr	r0, r0, #1
 2753 0048 E063     		str	r0, [r4, #60]
 2754              	.L179:
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2755              		.loc 1 1585 0
 2756 004a 13F0040F 		tst	r3, #4
 2757 004e 04D0     		beq	.L180
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2758              		.loc 1 1585 0 is_stmt 0 discriminator 1
 2759 0050 1AB1     		cbz	r2, .L180
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2760              		.loc 1 1587 0 is_stmt 1
 2761 0052 E06B     		ldr	r0, [r4, #60]
 2762 0054 40F00200 		orr	r0, r0, #2
 2763 0058 E063     		str	r0, [r4, #60]
 2764              	.L180:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2765              		.loc 1 1591 0
 2766 005a 13F0020F 		tst	r3, #2
 2767 005e 04D0     		beq	.L181
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2768              		.loc 1 1591 0 is_stmt 0 discriminator 1
 2769 0060 1AB1     		cbz	r2, .L181
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2770              		.loc 1 1593 0 is_stmt 1
 2771 0062 E06B     		ldr	r0, [r4, #60]
 2772 0064 40F00400 		orr	r0, r0, #4
 2773 0068 E063     		str	r0, [r4, #60]
 2774              	.L181:
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2775              		.loc 1 1597 0
 2776 006a 13F0080F 		tst	r3, #8
 2777 006e 04D0     		beq	.L182
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2778              		.loc 1 1597 0 is_stmt 0 discriminator 1
 2779 0070 1AB1     		cbz	r2, .L182
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2780              		.loc 1 1599 0 is_stmt 1
 2781 0072 E26B     		ldr	r2, [r4, #60]
 2782 0074 42F00802 		orr	r2, r2, #8
 2783 0078 E263     		str	r2, [r4, #60]
 2784              	.L182:
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2785              		.loc 1 1603 0
 2786 007a E26B     		ldr	r2, [r4, #60]
 2787 007c 002A     		cmp	r2, #0
 2788 007e 4AD0     		beq	.L174
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2789              		.loc 1 1606 0
 2790 0080 13F0200F 		tst	r3, #32
 2791 0084 05D0     		beq	.L183
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2792              		.loc 1 1606 0 is_stmt 0 discriminator 1
 2793 0086 11F0200F 		tst	r1, #32
 2794 008a 02D0     		beq	.L183
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
ARM GAS  /tmp/ccQPxto7.s 			page 101


 2795              		.loc 1 1608 0 is_stmt 1
 2796 008c 2046     		mov	r0, r4
 2797 008e FFF7FEFF 		bl	UART_Receive_IT
 2798              	.LVL243:
 2799              	.L183:
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2800              		.loc 1 1613 0
 2801 0092 2368     		ldr	r3, [r4]
 2802 0094 5B69     		ldr	r3, [r3, #20]
 2803 0096 03F04003 		and	r3, r3, #64
 2804              	.LVL244:
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2805              		.loc 1 1614 0
 2806 009a E26B     		ldr	r2, [r4, #60]
 2807 009c 12F0080F 		tst	r2, #8
 2808 00a0 00D1     		bne	.L184
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2809              		.loc 1 1614 0 is_stmt 0 discriminator 1
 2810 00a2 FBB1     		cbz	r3, .L185
 2811              	.L184:
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2812              		.loc 1 1619 0 is_stmt 1
 2813 00a4 2046     		mov	r0, r4
 2814 00a6 FFF7FEFF 		bl	UART_EndRxTransfer
 2815              	.LVL245:
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2816              		.loc 1 1622 0
 2817 00aa 2368     		ldr	r3, [r4]
 2818 00ac 5A69     		ldr	r2, [r3, #20]
 2819 00ae 12F0400F 		tst	r2, #64
 2820 00b2 13D0     		beq	.L186
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2821              		.loc 1 1624 0
 2822 00b4 5A69     		ldr	r2, [r3, #20]
 2823 00b6 22F04002 		bic	r2, r2, #64
 2824 00ba 5A61     		str	r2, [r3, #20]
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 2825              		.loc 1 1627 0
 2826 00bc 636B     		ldr	r3, [r4, #52]
 2827 00be 4BB1     		cbz	r3, .L187
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2828              		.loc 1 1631 0
 2829 00c0 154A     		ldr	r2, .L190
 2830 00c2 5A63     		str	r2, [r3, #52]
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
 2831              		.loc 1 1632 0
 2832 00c4 606B     		ldr	r0, [r4, #52]
 2833 00c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2834              	.LVL246:
 2835 00ca 20B3     		cbz	r0, .L174
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
 2836              		.loc 1 1635 0
 2837 00cc 606B     		ldr	r0, [r4, #52]
 2838 00ce 436B     		ldr	r3, [r0, #52]
 2839 00d0 9847     		blx	r3
 2840              	.LVL247:
 2841 00d2 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccQPxto7.s 			page 102


 2842              	.LVL248:
 2843              	.L187:
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
 2844              		.loc 1 1641 0
 2845 00d4 2046     		mov	r0, r4
 2846 00d6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2847              	.LVL249:
 2848 00da 10BD     		pop	{r4, pc}
 2849              	.LVL250:
 2850              	.L186:
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2851              		.loc 1 1647 0
 2852 00dc 2046     		mov	r0, r4
 2853 00de FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2854              	.LVL251:
 2855 00e2 10BD     		pop	{r4, pc}
 2856              	.LVL252:
 2857              	.L185:
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2858              		.loc 1 1654 0
 2859 00e4 2046     		mov	r0, r4
 2860 00e6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2861              	.LVL253:
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2862              		.loc 1 1655 0
 2863 00ea 0023     		movs	r3, #0
 2864 00ec E363     		str	r3, [r4, #60]
 2865 00ee 10BD     		pop	{r4, pc}
 2866              	.LVL254:
 2867              	.L177:
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2868              		.loc 1 1662 0
 2869 00f0 13F0800F 		tst	r3, #128
 2870 00f4 06D0     		beq	.L188
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2871              		.loc 1 1662 0 is_stmt 0 discriminator 1
 2872 00f6 11F0800F 		tst	r1, #128
 2873 00fa 03D0     		beq	.L188
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 2874              		.loc 1 1664 0 is_stmt 1
 2875 00fc 2046     		mov	r0, r4
 2876              	.LVL255:
 2877 00fe FFF7FEFF 		bl	UART_Transmit_IT
 2878              	.LVL256:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2879              		.loc 1 1665 0
 2880 0102 10BD     		pop	{r4, pc}
 2881              	.LVL257:
 2882              	.L188:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2883              		.loc 1 1669 0
 2884 0104 13F0400F 		tst	r3, #64
 2885 0108 05D0     		beq	.L174
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2886              		.loc 1 1669 0 is_stmt 0 discriminator 1
 2887 010a 11F0400F 		tst	r1, #64
 2888 010e 02D0     		beq	.L174
ARM GAS  /tmp/ccQPxto7.s 			page 103


1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 2889              		.loc 1 1671 0 is_stmt 1
 2890 0110 2046     		mov	r0, r4
 2891              	.LVL258:
 2892 0112 FFF7FEFF 		bl	UART_EndTransmit_IT
 2893              	.LVL259:
 2894              	.L174:
 2895 0116 10BD     		pop	{r4, pc}
 2896              	.LVL260:
 2897              	.L191:
 2898              		.align	2
 2899              	.L190:
 2900 0118 00000000 		.word	UART_DMAAbortOnError
 2901              		.cfi_endproc
 2902              	.LFE86:
 2904              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2905              		.align	2
 2906              		.thumb
 2907              		.thumb_func
 2909              	UART_DMAAbortOnError:
 2910              	.LFB110:
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2911              		.loc 1 2205 0
 2912              		.cfi_startproc
 2913              		@ args = 0, pretend = 0, frame = 0
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 2915              	.LVL261:
 2916 0000 08B5     		push	{r3, lr}
 2917              	.LCFI38:
 2918              		.cfi_def_cfa_offset 8
 2919              		.cfi_offset 3, -8
 2920              		.cfi_offset 14, -4
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2921              		.loc 1 2206 0
 2922 0002 406A     		ldr	r0, [r0, #36]
 2923              	.LVL262:
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2924              		.loc 1 2207 0
 2925 0004 0023     		movs	r3, #0
 2926 0006 C385     		strh	r3, [r0, #46]	@ movhi
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2927              		.loc 1 2208 0
 2928 0008 C384     		strh	r3, [r0, #38]	@ movhi
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2929              		.loc 1 2210 0
 2930 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2931              	.LVL263:
 2932 000e 08BD     		pop	{r3, pc}
 2933              		.cfi_endproc
 2934              	.LFE110:
 2936              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2937              		.align	2
 2938              		.weak	HAL_UART_AbortCpltCallback
 2939              		.thumb
 2940              		.thumb_func
 2942              	HAL_UART_AbortCpltCallback:
 2943              	.LFB92:
ARM GAS  /tmp/ccQPxto7.s 			page 104


1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2944              		.loc 1 1757 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 0
 2947              		@ frame_needed = 0, uses_anonymous_args = 0
 2948              		@ link register save eliminated.
 2949              	.LVL264:
 2950 0000 7047     		bx	lr
 2951              		.cfi_endproc
 2952              	.LFE92:
 2954 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2955              		.align	2
 2956              		.global	HAL_UART_Abort_IT
 2957              		.thumb
 2958              		.thumb_func
 2960              	HAL_UART_Abort_IT:
 2961              	.LFB83:
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 2962              		.loc 1 1311 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL265:
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 2967              		.loc 1 1311 0
 2968 0000 10B5     		push	{r4, lr}
 2969              	.LCFI39:
 2970              		.cfi_def_cfa_offset 8
 2971              		.cfi_offset 4, -8
 2972              		.cfi_offset 14, -4
 2973 0002 0446     		mov	r4, r0
 2974              	.LVL266:
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2975              		.loc 1 1315 0
 2976 0004 0268     		ldr	r2, [r0]
 2977 0006 D368     		ldr	r3, [r2, #12]
 2978 0008 23F4F073 		bic	r3, r3, #480
 2979 000c D360     		str	r3, [r2, #12]
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2980              		.loc 1 1316 0
 2981 000e 0268     		ldr	r2, [r0]
 2982 0010 5369     		ldr	r3, [r2, #20]
 2983 0012 23F00103 		bic	r3, r3, #1
 2984 0016 5361     		str	r3, [r2, #20]
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2985              		.loc 1 1321 0
 2986 0018 036B     		ldr	r3, [r0, #48]
 2987 001a 4BB1     		cbz	r3, .L196
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2988              		.loc 1 1325 0
 2989 001c 0268     		ldr	r2, [r0]
 2990 001e 5269     		ldr	r2, [r2, #20]
 2991 0020 12F0800F 		tst	r2, #128
 2992 0024 02D0     		beq	.L197
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2993              		.loc 1 1327 0
 2994 0026 264A     		ldr	r2, .L208
ARM GAS  /tmp/ccQPxto7.s 			page 105


 2995 0028 5A63     		str	r2, [r3, #52]
 2996 002a 01E0     		b	.L196
 2997              	.L197:
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2998              		.loc 1 1331 0
 2999 002c 0022     		movs	r2, #0
 3000 002e 5A63     		str	r2, [r3, #52]
 3001              	.L196:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3002              		.loc 1 1335 0
 3003 0030 636B     		ldr	r3, [r4, #52]
 3004 0032 4BB1     		cbz	r3, .L198
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3005              		.loc 1 1339 0
 3006 0034 2268     		ldr	r2, [r4]
 3007 0036 5269     		ldr	r2, [r2, #20]
 3008 0038 12F0400F 		tst	r2, #64
 3009 003c 02D0     		beq	.L199
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3010              		.loc 1 1341 0
 3011 003e 214A     		ldr	r2, .L208+4
 3012 0040 5A63     		str	r2, [r3, #52]
 3013 0042 01E0     		b	.L198
 3014              	.L199:
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3015              		.loc 1 1345 0
 3016 0044 0022     		movs	r2, #0
 3017 0046 5A63     		str	r2, [r3, #52]
 3018              	.L198:
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3019              		.loc 1 1350 0
 3020 0048 2368     		ldr	r3, [r4]
 3021 004a 5A69     		ldr	r2, [r3, #20]
 3022 004c 12F0800F 		tst	r2, #128
 3023 0050 0DD0     		beq	.L203
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3024              		.loc 1 1353 0
 3025 0052 5A69     		ldr	r2, [r3, #20]
 3026 0054 22F08002 		bic	r2, r2, #128
 3027 0058 5A61     		str	r2, [r3, #20]
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3028              		.loc 1 1356 0
 3029 005a 206B     		ldr	r0, [r4, #48]
 3030              	.LVL267:
 3031 005c 48B1     		cbz	r0, .L204
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3032              		.loc 1 1362 0
 3033 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3034              	.LVL268:
 3035 0062 40B1     		cbz	r0, .L205
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3036              		.loc 1 1364 0
 3037 0064 236B     		ldr	r3, [r4, #48]
 3038 0066 0022     		movs	r2, #0
 3039 0068 5A63     		str	r2, [r3, #52]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3040              		.loc 1 1312 0
ARM GAS  /tmp/ccQPxto7.s 			page 106


 3041 006a 0122     		movs	r2, #1
 3042 006c 04E0     		b	.L200
 3043              	.LVL269:
 3044              	.L203:
 3045 006e 0122     		movs	r2, #1
 3046 0070 02E0     		b	.L200
 3047              	.LVL270:
 3048              	.L204:
 3049 0072 0122     		movs	r2, #1
 3050 0074 00E0     		b	.L200
 3051              	.L205:
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3052              		.loc 1 1368 0
 3053 0076 0022     		movs	r2, #0
 3054              	.L200:
 3055              	.LVL271:
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3056              		.loc 1 1374 0
 3057 0078 2368     		ldr	r3, [r4]
 3058 007a 5969     		ldr	r1, [r3, #20]
 3059 007c 11F0400F 		tst	r1, #64
 3060 0080 0ED0     		beq	.L201
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3061              		.loc 1 1376 0
 3062 0082 5969     		ldr	r1, [r3, #20]
 3063 0084 21F04001 		bic	r1, r1, #64
 3064 0088 5961     		str	r1, [r3, #20]
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3065              		.loc 1 1379 0
 3066 008a 606B     		ldr	r0, [r4, #52]
 3067 008c 40B1     		cbz	r0, .L201
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3068              		.loc 1 1385 0
 3069 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3070              	.LVL272:
 3071 0092 20B1     		cbz	r0, .L206
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 3072              		.loc 1 1387 0
 3073 0094 636B     		ldr	r3, [r4, #52]
 3074 0096 0022     		movs	r2, #0
 3075 0098 5A63     		str	r2, [r3, #52]
 3076              	.LVL273:
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3077              		.loc 1 1388 0
 3078 009a 0122     		movs	r2, #1
 3079 009c 00E0     		b	.L201
 3080              	.LVL274:
 3081              	.L206:
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3082              		.loc 1 1392 0
 3083 009e 0022     		movs	r2, #0
 3084              	.L201:
 3085              	.LVL275:
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3086              		.loc 1 1398 0
 3087 00a0 5AB1     		cbz	r2, .L202
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
ARM GAS  /tmp/ccQPxto7.s 			page 107


 3088              		.loc 1 1401 0
 3089 00a2 0023     		movs	r3, #0
 3090 00a4 E384     		strh	r3, [r4, #38]	@ movhi
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3091              		.loc 1 1402 0
 3092 00a6 E385     		strh	r3, [r4, #46]	@ movhi
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3093              		.loc 1 1405 0
 3094 00a8 E363     		str	r3, [r4, #60]
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3095              		.loc 1 1408 0
 3096 00aa 2023     		movs	r3, #32
 3097 00ac 84F83930 		strb	r3, [r4, #57]
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3098              		.loc 1 1409 0
 3099 00b0 84F83A30 		strb	r3, [r4, #58]
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3100              		.loc 1 1412 0
 3101 00b4 2046     		mov	r0, r4
 3102 00b6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3103              	.LVL276:
 3104              	.L202:
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3105              		.loc 1 1416 0
 3106 00ba 0020     		movs	r0, #0
 3107 00bc 10BD     		pop	{r4, pc}
 3108              	.LVL277:
 3109              	.L209:
 3110 00be 00BF     		.align	2
 3111              	.L208:
 3112 00c0 00000000 		.word	UART_DMATxAbortCallback
 3113 00c4 00000000 		.word	UART_DMARxAbortCallback
 3114              		.cfi_endproc
 3115              	.LFE83:
 3117              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3118              		.align	2
 3119              		.thumb
 3120              		.thumb_func
 3122              	UART_DMARxAbortCallback:
 3123              	.LFB112:
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3124              		.loc 1 2260 0
 3125              		.cfi_startproc
 3126              		@ args = 0, pretend = 0, frame = 0
 3127              		@ frame_needed = 0, uses_anonymous_args = 0
 3128              	.LVL278:
 3129 0000 08B5     		push	{r3, lr}
 3130              	.LCFI40:
 3131              		.cfi_def_cfa_offset 8
 3132              		.cfi_offset 3, -8
 3133              		.cfi_offset 14, -4
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3134              		.loc 1 2261 0
 3135 0002 406A     		ldr	r0, [r0, #36]
 3136              	.LVL279:
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3137              		.loc 1 2263 0
ARM GAS  /tmp/ccQPxto7.s 			page 108


 3138 0004 436B     		ldr	r3, [r0, #52]
 3139 0006 0022     		movs	r2, #0
 3140 0008 5A63     		str	r2, [r3, #52]
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3141              		.loc 1 2266 0
 3142 000a 036B     		ldr	r3, [r0, #48]
 3143 000c 0BB1     		cbz	r3, .L211
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3144              		.loc 1 2268 0
 3145 000e 5B6B     		ldr	r3, [r3, #52]
 3146 0010 53B9     		cbnz	r3, .L210
 3147              	.L211:
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3148              		.loc 1 2275 0
 3149 0012 0023     		movs	r3, #0
 3150 0014 C384     		strh	r3, [r0, #38]	@ movhi
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3151              		.loc 1 2276 0
 3152 0016 C385     		strh	r3, [r0, #46]	@ movhi
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3153              		.loc 1 2279 0
 3154 0018 C363     		str	r3, [r0, #60]
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3155              		.loc 1 2282 0
 3156 001a 2023     		movs	r3, #32
 3157 001c 80F83930 		strb	r3, [r0, #57]
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3158              		.loc 1 2283 0
 3159 0020 80F83A30 		strb	r3, [r0, #58]
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3160              		.loc 1 2286 0
 3161 0024 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3162              	.LVL280:
 3163              	.L210:
 3164 0028 08BD     		pop	{r3, pc}
 3165              		.cfi_endproc
 3166              	.LFE112:
 3168 002a 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3169              		.align	2
 3170              		.thumb
 3171              		.thumb_func
 3173              	UART_DMATxAbortCallback:
 3174              	.LFB111:
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3175              		.loc 1 2222 0
 3176              		.cfi_startproc
 3177              		@ args = 0, pretend = 0, frame = 0
 3178              		@ frame_needed = 0, uses_anonymous_args = 0
 3179              	.LVL281:
 3180 0000 08B5     		push	{r3, lr}
 3181              	.LCFI41:
 3182              		.cfi_def_cfa_offset 8
 3183              		.cfi_offset 3, -8
 3184              		.cfi_offset 14, -4
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3185              		.loc 1 2223 0
 3186 0002 406A     		ldr	r0, [r0, #36]
ARM GAS  /tmp/ccQPxto7.s 			page 109


 3187              	.LVL282:
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3188              		.loc 1 2225 0
 3189 0004 036B     		ldr	r3, [r0, #48]
 3190 0006 0022     		movs	r2, #0
 3191 0008 5A63     		str	r2, [r3, #52]
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3192              		.loc 1 2228 0
 3193 000a 436B     		ldr	r3, [r0, #52]
 3194 000c 0BB1     		cbz	r3, .L215
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3195              		.loc 1 2230 0
 3196 000e 5B6B     		ldr	r3, [r3, #52]
 3197 0010 53B9     		cbnz	r3, .L214
 3198              	.L215:
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3199              		.loc 1 2237 0
 3200 0012 0023     		movs	r3, #0
 3201 0014 C384     		strh	r3, [r0, #38]	@ movhi
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3202              		.loc 1 2238 0
 3203 0016 C385     		strh	r3, [r0, #46]	@ movhi
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3204              		.loc 1 2241 0
 3205 0018 C363     		str	r3, [r0, #60]
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3206              		.loc 1 2244 0
 3207 001a 2023     		movs	r3, #32
 3208 001c 80F83930 		strb	r3, [r0, #57]
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3209              		.loc 1 2245 0
 3210 0020 80F83A30 		strb	r3, [r0, #58]
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3211              		.loc 1 2248 0
 3212 0024 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3213              	.LVL283:
 3214              	.L214:
 3215 0028 08BD     		pop	{r3, pc}
 3216              		.cfi_endproc
 3217              	.LFE111:
 3219 002a 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3220              		.align	2
 3221              		.weak	HAL_UART_AbortTransmitCpltCallback
 3222              		.thumb
 3223              		.thumb_func
 3225              	HAL_UART_AbortTransmitCpltCallback:
 3226              	.LFB93:
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3227              		.loc 1 1771 0
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 0
 3230              		@ frame_needed = 0, uses_anonymous_args = 0
 3231              		@ link register save eliminated.
 3232              	.LVL284:
 3233 0000 7047     		bx	lr
 3234              		.cfi_endproc
 3235              	.LFE93:
ARM GAS  /tmp/ccQPxto7.s 			page 110


 3237 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3238              		.align	2
 3239              		.global	HAL_UART_AbortTransmit_IT
 3240              		.thumb
 3241              		.thumb_func
 3243              	HAL_UART_AbortTransmit_IT:
 3244              	.LFB84:
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3245              		.loc 1 1433 0
 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 0, uses_anonymous_args = 0
 3249              	.LVL285:
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3250              		.loc 1 1433 0
 3251 0000 10B5     		push	{r4, lr}
 3252              	.LCFI42:
 3253              		.cfi_def_cfa_offset 8
 3254              		.cfi_offset 4, -8
 3255              		.cfi_offset 14, -4
 3256 0002 0446     		mov	r4, r0
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3257              		.loc 1 1435 0
 3258 0004 0268     		ldr	r2, [r0]
 3259 0006 D368     		ldr	r3, [r2, #12]
 3260 0008 23F0C003 		bic	r3, r3, #192
 3261 000c D360     		str	r3, [r2, #12]
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3262              		.loc 1 1438 0
 3263 000e 0368     		ldr	r3, [r0]
 3264 0010 5A69     		ldr	r2, [r3, #20]
 3265 0012 12F0800F 		tst	r2, #128
 3266 0016 17D0     		beq	.L220
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3267              		.loc 1 1440 0
 3268 0018 5A69     		ldr	r2, [r3, #20]
 3269 001a 22F08002 		bic	r2, r2, #128
 3270 001e 5A61     		str	r2, [r3, #20]
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3271              		.loc 1 1443 0
 3272 0020 036B     		ldr	r3, [r0, #48]
 3273 0022 4BB1     		cbz	r3, .L221
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3274              		.loc 1 1447 0
 3275 0024 0D4A     		ldr	r2, .L224
 3276 0026 5A63     		str	r2, [r3, #52]
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3277              		.loc 1 1450 0
 3278 0028 006B     		ldr	r0, [r0, #48]
 3279              	.LVL286:
 3280 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3281              	.LVL287:
 3282 002e 90B1     		cbz	r0, .L222
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3283              		.loc 1 1453 0
 3284 0030 206B     		ldr	r0, [r4, #48]
 3285 0032 436B     		ldr	r3, [r0, #52]
ARM GAS  /tmp/ccQPxto7.s 			page 111


 3286 0034 9847     		blx	r3
 3287              	.LVL288:
 3288 0036 0EE0     		b	.L222
 3289              	.LVL289:
 3290              	.L221:
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3291              		.loc 1 1459 0
 3292 0038 0023     		movs	r3, #0
 3293 003a C384     		strh	r3, [r0, #38]	@ movhi
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3294              		.loc 1 1462 0
 3295 003c 2023     		movs	r3, #32
 3296 003e 80F83930 		strb	r3, [r0, #57]
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3297              		.loc 1 1465 0
 3298 0042 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3299              	.LVL290:
 3300 0046 06E0     		b	.L222
 3301              	.LVL291:
 3302              	.L220:
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3303              		.loc 1 1471 0
 3304 0048 0023     		movs	r3, #0
 3305 004a C384     		strh	r3, [r0, #38]	@ movhi
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3306              		.loc 1 1474 0
 3307 004c 2023     		movs	r3, #32
 3308 004e 80F83930 		strb	r3, [r0, #57]
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3309              		.loc 1 1477 0
 3310 0052 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3311              	.LVL292:
 3312              	.L222:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3313              		.loc 1 1481 0
 3314 0056 0020     		movs	r0, #0
 3315 0058 10BD     		pop	{r4, pc}
 3316              	.LVL293:
 3317              	.L225:
 3318 005a 00BF     		.align	2
 3319              	.L224:
 3320 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3321              		.cfi_endproc
 3322              	.LFE84:
 3324              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3325              		.align	2
 3326              		.thumb
 3327              		.thumb_func
 3329              	UART_DMATxOnlyAbortCallback:
 3330              	.LFB113:
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3331              		.loc 1 2298 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 3335              	.LVL294:
 3336 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccQPxto7.s 			page 112


 3337              	.LCFI43:
 3338              		.cfi_def_cfa_offset 8
 3339              		.cfi_offset 3, -8
 3340              		.cfi_offset 14, -4
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3341              		.loc 1 2299 0
 3342 0002 406A     		ldr	r0, [r0, #36]
 3343              	.LVL295:
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3344              		.loc 1 2301 0
 3345 0004 0023     		movs	r3, #0
 3346 0006 C384     		strh	r3, [r0, #38]	@ movhi
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3347              		.loc 1 2304 0
 3348 0008 2023     		movs	r3, #32
 3349 000a 80F83930 		strb	r3, [r0, #57]
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3350              		.loc 1 2307 0
 3351 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3352              	.LVL296:
 3353 0012 08BD     		pop	{r3, pc}
 3354              		.cfi_endproc
 3355              	.LFE113:
 3357              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3358              		.align	2
 3359              		.weak	HAL_UART_AbortReceiveCpltCallback
 3360              		.thumb
 3361              		.thumb_func
 3363              	HAL_UART_AbortReceiveCpltCallback:
 3364              	.LFB94:
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3365              		.loc 1 1786 0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 0
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 3369              		@ link register save eliminated.
 3370              	.LVL297:
 3371 0000 7047     		bx	lr
 3372              		.cfi_endproc
 3373              	.LFE94:
 3375 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3376              		.align	2
 3377              		.global	HAL_UART_AbortReceive_IT
 3378              		.thumb
 3379              		.thumb_func
 3381              	HAL_UART_AbortReceive_IT:
 3382              	.LFB85:
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3383              		.loc 1 1498 0
 3384              		.cfi_startproc
 3385              		@ args = 0, pretend = 0, frame = 0
 3386              		@ frame_needed = 0, uses_anonymous_args = 0
 3387              	.LVL298:
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3388              		.loc 1 1498 0
 3389 0000 10B5     		push	{r4, lr}
 3390              	.LCFI44:
ARM GAS  /tmp/ccQPxto7.s 			page 113


 3391              		.cfi_def_cfa_offset 8
 3392              		.cfi_offset 4, -8
 3393              		.cfi_offset 14, -4
 3394 0002 0446     		mov	r4, r0
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3395              		.loc 1 1500 0
 3396 0004 0268     		ldr	r2, [r0]
 3397 0006 D368     		ldr	r3, [r2, #12]
 3398 0008 23F49073 		bic	r3, r3, #288
 3399 000c D360     		str	r3, [r2, #12]
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3400              		.loc 1 1501 0
 3401 000e 0268     		ldr	r2, [r0]
 3402 0010 5369     		ldr	r3, [r2, #20]
 3403 0012 23F00103 		bic	r3, r3, #1
 3404 0016 5361     		str	r3, [r2, #20]
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3405              		.loc 1 1504 0
 3406 0018 0368     		ldr	r3, [r0]
 3407 001a 5A69     		ldr	r2, [r3, #20]
 3408 001c 12F0400F 		tst	r2, #64
 3409 0020 17D0     		beq	.L230
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3410              		.loc 1 1506 0
 3411 0022 5A69     		ldr	r2, [r3, #20]
 3412 0024 22F04002 		bic	r2, r2, #64
 3413 0028 5A61     		str	r2, [r3, #20]
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3414              		.loc 1 1509 0
 3415 002a 436B     		ldr	r3, [r0, #52]
 3416 002c 4BB1     		cbz	r3, .L231
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3417              		.loc 1 1513 0
 3418 002e 0D4A     		ldr	r2, .L234
 3419 0030 5A63     		str	r2, [r3, #52]
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3420              		.loc 1 1516 0
 3421 0032 406B     		ldr	r0, [r0, #52]
 3422              	.LVL299:
 3423 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3424              	.LVL300:
 3425 0038 90B1     		cbz	r0, .L232
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3426              		.loc 1 1519 0
 3427 003a 606B     		ldr	r0, [r4, #52]
 3428 003c 436B     		ldr	r3, [r0, #52]
 3429 003e 9847     		blx	r3
 3430              	.LVL301:
 3431 0040 0EE0     		b	.L232
 3432              	.LVL302:
 3433              	.L231:
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3434              		.loc 1 1525 0
 3435 0042 0023     		movs	r3, #0
 3436 0044 C385     		strh	r3, [r0, #46]	@ movhi
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3437              		.loc 1 1528 0
ARM GAS  /tmp/ccQPxto7.s 			page 114


 3438 0046 2023     		movs	r3, #32
 3439 0048 80F83A30 		strb	r3, [r0, #58]
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3440              		.loc 1 1531 0
 3441 004c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3442              	.LVL303:
 3443 0050 06E0     		b	.L232
 3444              	.LVL304:
 3445              	.L230:
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3446              		.loc 1 1537 0
 3447 0052 0023     		movs	r3, #0
 3448 0054 C385     		strh	r3, [r0, #46]	@ movhi
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3449              		.loc 1 1540 0
 3450 0056 2023     		movs	r3, #32
 3451 0058 80F83A30 		strb	r3, [r0, #58]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3452              		.loc 1 1543 0
 3453 005c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3454              	.LVL305:
 3455              	.L232:
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3456              		.loc 1 1547 0
 3457 0060 0020     		movs	r0, #0
 3458 0062 10BD     		pop	{r4, pc}
 3459              	.LVL306:
 3460              	.L235:
 3461              		.align	2
 3462              	.L234:
 3463 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3464              		.cfi_endproc
 3465              	.LFE85:
 3467              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3468              		.align	2
 3469              		.thumb
 3470              		.thumb_func
 3472              	UART_DMARxOnlyAbortCallback:
 3473              	.LFB114:
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3474              		.loc 1 2319 0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              	.LVL307:
 3479 0000 08B5     		push	{r3, lr}
 3480              	.LCFI45:
 3481              		.cfi_def_cfa_offset 8
 3482              		.cfi_offset 3, -8
 3483              		.cfi_offset 14, -4
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3484              		.loc 1 2320 0
 3485 0002 406A     		ldr	r0, [r0, #36]
 3486              	.LVL308:
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3487              		.loc 1 2322 0
 3488 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccQPxto7.s 			page 115


 3489 0006 C385     		strh	r3, [r0, #46]	@ movhi
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3490              		.loc 1 2325 0
 3491 0008 2023     		movs	r3, #32
 3492 000a 80F83A30 		strb	r3, [r0, #58]
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3493              		.loc 1 2328 0
 3494 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3495              	.LVL309:
 3496 0012 08BD     		pop	{r3, pc}
 3497              		.cfi_endproc
 3498              	.LFE114:
 3500              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3501              		.align	2
 3502              		.global	HAL_LIN_SendBreak
 3503              		.thumb
 3504              		.thumb_func
 3506              	HAL_LIN_SendBreak:
 3507              	.LFB95:
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3508              		.loc 1 1825 0
 3509              		.cfi_startproc
 3510              		@ args = 0, pretend = 0, frame = 0
 3511              		@ frame_needed = 0, uses_anonymous_args = 0
 3512              		@ link register save eliminated.
 3513              	.LVL310:
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3514              		.loc 1 1830 0
 3515 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3516 0004 012B     		cmp	r3, #1
 3517 0006 12D0     		beq	.L240
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3518              		.loc 1 1830 0 is_stmt 0 discriminator 2
 3519 0008 0123     		movs	r3, #1
 3520 000a 80F83830 		strb	r3, [r0, #56]
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3521              		.loc 1 1832 0 is_stmt 1 discriminator 2
 3522 000e 2423     		movs	r3, #36
 3523 0010 80F83930 		strb	r3, [r0, #57]
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 3524              		.loc 1 1835 0 discriminator 2
 3525 0014 0268     		ldr	r2, [r0]
 3526 0016 D368     		ldr	r3, [r2, #12]
 3527 0018 43F00103 		orr	r3, r3, #1
 3528 001c D360     		str	r3, [r2, #12]
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3529              		.loc 1 1837 0 discriminator 2
 3530 001e 2023     		movs	r3, #32
 3531 0020 80F83930 		strb	r3, [r0, #57]
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3532              		.loc 1 1840 0 discriminator 2
 3533 0024 0023     		movs	r3, #0
 3534 0026 80F83830 		strb	r3, [r0, #56]
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3535              		.loc 1 1842 0 discriminator 2
 3536 002a 1846     		mov	r0, r3
 3537              	.LVL311:
ARM GAS  /tmp/ccQPxto7.s 			page 116


 3538 002c 7047     		bx	lr
 3539              	.LVL312:
 3540              	.L240:
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3541              		.loc 1 1830 0
 3542 002e 0220     		movs	r0, #2
 3543              	.LVL313:
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3544              		.loc 1 1843 0
 3545 0030 7047     		bx	lr
 3546              		.cfi_endproc
 3547              	.LFE95:
 3549 0032 00BF     		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3550              		.align	2
 3551              		.global	HAL_MultiProcessor_EnterMuteMode
 3552              		.thumb
 3553              		.thumb_func
 3555              	HAL_MultiProcessor_EnterMuteMode:
 3556              	.LFB96:
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3557              		.loc 1 1852 0
 3558              		.cfi_startproc
 3559              		@ args = 0, pretend = 0, frame = 0
 3560              		@ frame_needed = 0, uses_anonymous_args = 0
 3561              		@ link register save eliminated.
 3562              	.LVL314:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3563              		.loc 1 1857 0
 3564 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3565 0004 012B     		cmp	r3, #1
 3566 0006 12D0     		beq	.L243
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3567              		.loc 1 1857 0 is_stmt 0 discriminator 2
 3568 0008 0123     		movs	r3, #1
 3569 000a 80F83830 		strb	r3, [r0, #56]
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3570              		.loc 1 1859 0 is_stmt 1 discriminator 2
 3571 000e 2423     		movs	r3, #36
 3572 0010 80F83930 		strb	r3, [r0, #57]
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3573              		.loc 1 1862 0 discriminator 2
 3574 0014 0268     		ldr	r2, [r0]
 3575 0016 D368     		ldr	r3, [r2, #12]
 3576 0018 43F00203 		orr	r3, r3, #2
 3577 001c D360     		str	r3, [r2, #12]
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3578              		.loc 1 1864 0 discriminator 2
 3579 001e 2023     		movs	r3, #32
 3580 0020 80F83930 		strb	r3, [r0, #57]
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3581              		.loc 1 1867 0 discriminator 2
 3582 0024 0023     		movs	r3, #0
 3583 0026 80F83830 		strb	r3, [r0, #56]
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3584              		.loc 1 1869 0 discriminator 2
 3585 002a 1846     		mov	r0, r3
 3586              	.LVL315:
ARM GAS  /tmp/ccQPxto7.s 			page 117


 3587 002c 7047     		bx	lr
 3588              	.LVL316:
 3589              	.L243:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3590              		.loc 1 1857 0
 3591 002e 0220     		movs	r0, #2
 3592              	.LVL317:
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3593              		.loc 1 1870 0
 3594 0030 7047     		bx	lr
 3595              		.cfi_endproc
 3596              	.LFE96:
 3598 0032 00BF     		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3599              		.align	2
 3600              		.global	HAL_MultiProcessor_ExitMuteMode
 3601              		.thumb
 3602              		.thumb_func
 3604              	HAL_MultiProcessor_ExitMuteMode:
 3605              	.LFB97:
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3606              		.loc 1 1879 0
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 0
 3609              		@ frame_needed = 0, uses_anonymous_args = 0
 3610              		@ link register save eliminated.
 3611              	.LVL318:
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3612              		.loc 1 1884 0
 3613 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3614 0004 012B     		cmp	r3, #1
 3615 0006 12D0     		beq	.L246
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3616              		.loc 1 1884 0 is_stmt 0 discriminator 2
 3617 0008 0123     		movs	r3, #1
 3618 000a 80F83830 		strb	r3, [r0, #56]
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3619              		.loc 1 1886 0 is_stmt 1 discriminator 2
 3620 000e 2423     		movs	r3, #36
 3621 0010 80F83930 		strb	r3, [r0, #57]
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3622              		.loc 1 1889 0 discriminator 2
 3623 0014 0268     		ldr	r2, [r0]
 3624 0016 D368     		ldr	r3, [r2, #12]
 3625 0018 23F00203 		bic	r3, r3, #2
 3626 001c D360     		str	r3, [r2, #12]
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3627              		.loc 1 1891 0 discriminator 2
 3628 001e 2023     		movs	r3, #32
 3629 0020 80F83930 		strb	r3, [r0, #57]
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3630              		.loc 1 1894 0 discriminator 2
 3631 0024 0023     		movs	r3, #0
 3632 0026 80F83830 		strb	r3, [r0, #56]
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3633              		.loc 1 1896 0 discriminator 2
 3634 002a 1846     		mov	r0, r3
 3635              	.LVL319:
ARM GAS  /tmp/ccQPxto7.s 			page 118


 3636 002c 7047     		bx	lr
 3637              	.LVL320:
 3638              	.L246:
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3639              		.loc 1 1884 0
 3640 002e 0220     		movs	r0, #2
 3641              	.LVL321:
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3642              		.loc 1 1897 0
 3643 0030 7047     		bx	lr
 3644              		.cfi_endproc
 3645              	.LFE97:
 3647 0032 00BF     		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3648              		.align	2
 3649              		.global	HAL_HalfDuplex_EnableTransmitter
 3650              		.thumb
 3651              		.thumb_func
 3653              	HAL_HalfDuplex_EnableTransmitter:
 3654              	.LFB98:
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3655              		.loc 1 1906 0
 3656              		.cfi_startproc
 3657              		@ args = 0, pretend = 0, frame = 0
 3658              		@ frame_needed = 0, uses_anonymous_args = 0
 3659              		@ link register save eliminated.
 3660              	.LVL322:
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3661              		.loc 1 1910 0
 3662 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3663 0004 012B     		cmp	r3, #1
 3664 0006 14D0     		beq	.L249
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3665              		.loc 1 1910 0 is_stmt 0 discriminator 2
 3666 0008 0123     		movs	r3, #1
 3667 000a 80F83830 		strb	r3, [r0, #56]
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3668              		.loc 1 1912 0 is_stmt 1 discriminator 2
 3669 000e 2423     		movs	r3, #36
 3670 0010 80F83930 		strb	r3, [r0, #57]
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3671              		.loc 1 1915 0 discriminator 2
 3672 0014 0268     		ldr	r2, [r0]
 3673 0016 D368     		ldr	r3, [r2, #12]
 3674              	.LVL323:
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3675              		.loc 1 1918 0 discriminator 2
 3676 0018 23F00C03 		bic	r3, r3, #12
 3677              	.LVL324:
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3678              		.loc 1 1921 0 discriminator 2
 3679 001c 43F00803 		orr	r3, r3, #8
 3680              	.LVL325:
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3681              		.loc 1 1924 0 discriminator 2
 3682 0020 D360     		str	r3, [r2, #12]
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3683              		.loc 1 1926 0 discriminator 2
ARM GAS  /tmp/ccQPxto7.s 			page 119


 3684 0022 2023     		movs	r3, #32
 3685              	.LVL326:
 3686 0024 80F83930 		strb	r3, [r0, #57]
 3687              	.LVL327:
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3688              		.loc 1 1929 0 discriminator 2
 3689 0028 0023     		movs	r3, #0
 3690 002a 80F83830 		strb	r3, [r0, #56]
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3691              		.loc 1 1931 0 discriminator 2
 3692 002e 1846     		mov	r0, r3
 3693              	.LVL328:
 3694 0030 7047     		bx	lr
 3695              	.LVL329:
 3696              	.L249:
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3697              		.loc 1 1910 0
 3698 0032 0220     		movs	r0, #2
 3699              	.LVL330:
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3700              		.loc 1 1932 0
 3701 0034 7047     		bx	lr
 3702              		.cfi_endproc
 3703              	.LFE98:
 3705 0036 00BF     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3706              		.align	2
 3707              		.global	HAL_HalfDuplex_EnableReceiver
 3708              		.thumb
 3709              		.thumb_func
 3711              	HAL_HalfDuplex_EnableReceiver:
 3712              	.LFB99:
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3713              		.loc 1 1941 0
 3714              		.cfi_startproc
 3715              		@ args = 0, pretend = 0, frame = 0
 3716              		@ frame_needed = 0, uses_anonymous_args = 0
 3717              		@ link register save eliminated.
 3718              	.LVL331:
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3719              		.loc 1 1945 0
 3720 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3721 0004 012B     		cmp	r3, #1
 3722 0006 14D0     		beq	.L252
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3723              		.loc 1 1945 0 is_stmt 0 discriminator 2
 3724 0008 0123     		movs	r3, #1
 3725 000a 80F83830 		strb	r3, [r0, #56]
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3726              		.loc 1 1947 0 is_stmt 1 discriminator 2
 3727 000e 2423     		movs	r3, #36
 3728 0010 80F83930 		strb	r3, [r0, #57]
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3729              		.loc 1 1950 0 discriminator 2
 3730 0014 0268     		ldr	r2, [r0]
 3731 0016 D368     		ldr	r3, [r2, #12]
 3732              	.LVL332:
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/ccQPxto7.s 			page 120


 3733              		.loc 1 1953 0 discriminator 2
 3734 0018 23F00C03 		bic	r3, r3, #12
 3735              	.LVL333:
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3736              		.loc 1 1956 0 discriminator 2
 3737 001c 43F00403 		orr	r3, r3, #4
 3738              	.LVL334:
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3739              		.loc 1 1959 0 discriminator 2
 3740 0020 D360     		str	r3, [r2, #12]
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3741              		.loc 1 1961 0 discriminator 2
 3742 0022 2023     		movs	r3, #32
 3743              	.LVL335:
 3744 0024 80F83930 		strb	r3, [r0, #57]
 3745              	.LVL336:
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3746              		.loc 1 1964 0 discriminator 2
 3747 0028 0023     		movs	r3, #0
 3748 002a 80F83830 		strb	r3, [r0, #56]
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3749              		.loc 1 1966 0 discriminator 2
 3750 002e 1846     		mov	r0, r3
 3751              	.LVL337:
 3752 0030 7047     		bx	lr
 3753              	.LVL338:
 3754              	.L252:
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3755              		.loc 1 1945 0
 3756 0032 0220     		movs	r0, #2
 3757              	.LVL339:
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3758              		.loc 1 1967 0
 3759 0034 7047     		bx	lr
 3760              		.cfi_endproc
 3761              	.LFE99:
 3763 0036 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 3764              		.align	2
 3765              		.global	HAL_UART_GetState
 3766              		.thumb
 3767              		.thumb_func
 3769              	HAL_UART_GetState:
 3770              	.LFB100:
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 3771              		.loc 1 1998 0
 3772              		.cfi_startproc
 3773              		@ args = 0, pretend = 0, frame = 0
 3774              		@ frame_needed = 0, uses_anonymous_args = 0
 3775              		@ link register save eliminated.
 3776              	.LVL340:
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 3777              		.loc 1 2000 0
 3778 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 3779              	.LVL341:
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3780              		.loc 1 2001 0
 3781 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
ARM GAS  /tmp/ccQPxto7.s 			page 121


 3782              	.LVL342:
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3783              		.loc 1 2004 0
 3784 0008 1843     		orrs	r0, r0, r3
 3785              	.LVL343:
 3786 000a 7047     		bx	lr
 3787              		.cfi_endproc
 3788              	.LFE100:
 3790              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3791              		.align	2
 3792              		.global	HAL_UART_GetError
 3793              		.thumb
 3794              		.thumb_func
 3796              	HAL_UART_GetError:
 3797              	.LFB101:
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 3798              		.loc 1 2013 0
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 0
 3801              		@ frame_needed = 0, uses_anonymous_args = 0
 3802              		@ link register save eliminated.
 3803              	.LVL344:
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3804              		.loc 1 2014 0
 3805 0000 C06B     		ldr	r0, [r0, #60]
 3806              	.LVL345:
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3807              		.loc 1 2015 0
 3808 0002 7047     		bx	lr
 3809              		.cfi_endproc
 3810              	.LFE101:
 3812              		.text
 3813              	.Letext0:
 3814              		.file 2 "/home/user/Library/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_ty
 3815              		.file 3 "/home/user/Library/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 3816              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 3817              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3818              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3819              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3820              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 3821              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 3822              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3823              		.file 11 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccQPxto7.s 			page 122


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_uart.c
     /tmp/ccQPxto7.s:20     .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccQPxto7.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccQPxto7.s:46     .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccQPxto7.s:50     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccQPxto7.s:76     .text.UART_Transmit_IT:00000000 $t
     /tmp/ccQPxto7.s:80     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
     /tmp/ccQPxto7.s:168    .text.UART_SetConfig:00000000 $t
     /tmp/ccQPxto7.s:172    .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccQPxto7.s:353    .text.UART_SetConfig:000001b4 $d
     /tmp/ccQPxto7.s:359    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccQPxto7.s:363    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccQPxto7.s:440    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccQPxto7.s:445    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccQPxto7.s:458    .text.HAL_UART_Init:00000000 $t
     /tmp/ccQPxto7.s:463    .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccQPxto7.s:541    .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccQPxto7.s:546    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccQPxto7.s:630    .text.HAL_LIN_Init:00000000 $t
     /tmp/ccQPxto7.s:635    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/ccQPxto7.s:731    .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccQPxto7.s:736    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccQPxto7.s:834    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccQPxto7.s:839    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccQPxto7.s:852    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccQPxto7.s:857    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccQPxto7.s:904    .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccQPxto7.s:909    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccQPxto7.s:1092   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccQPxto7.s:1097   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccQPxto7.s:1287   .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccQPxto7.s:1292   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccQPxto7.s:1367   .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccQPxto7.s:1372   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccQPxto7.s:1457   .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccQPxto7.s:1462   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccQPxto7.s:1573   .text.HAL_UART_Transmit_DMA:00000080 $d
     /tmp/ccQPxto7.s:2220   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccQPxto7.s:2324   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccQPxto7.s:2614   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccQPxto7.s:1580   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccQPxto7.s:1585   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccQPxto7.s:1718   .text.HAL_UART_Receive_DMA:0000009c $d
     /tmp/ccQPxto7.s:2370   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccQPxto7.s:2568   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccQPxto7.s:1725   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccQPxto7.s:1730   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccQPxto7.s:1808   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccQPxto7.s:1813   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccQPxto7.s:1911   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccQPxto7.s:1916   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccQPxto7.s:1994   .text.HAL_UART_Abort:00000000 $t
     /tmp/ccQPxto7.s:1999   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccQPxto7.s:2081   .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccQPxto7.s:2086   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/ccQPxto7.s:2137   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  /tmp/ccQPxto7.s 			page 123


     /tmp/ccQPxto7.s:2142   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccQPxto7.s:2198   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:2203   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccQPxto7.s:2216   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccQPxto7.s:2268   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccQPxto7.s:2272   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccQPxto7.s:2302   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:2307   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccQPxto7.s:2320   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccQPxto7.s:2348   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:2353   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccQPxto7.s:2366   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccQPxto7.s:2423   .text.UART_Receive_IT:00000000 $t
     /tmp/ccQPxto7.s:2427   .text.UART_Receive_IT:00000000 UART_Receive_IT
     /tmp/ccQPxto7.s:2546   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:2551   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccQPxto7.s:2564   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccQPxto7.s:2592   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccQPxto7.s:2597   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccQPxto7.s:2610   .text.UART_DMAError:00000000 $t
     /tmp/ccQPxto7.s:2685   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccQPxto7.s:2690   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccQPxto7.s:2900   .text.HAL_UART_IRQHandler:00000118 $d
     /tmp/ccQPxto7.s:2909   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccQPxto7.s:2905   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccQPxto7.s:2937   .text.HAL_UART_AbortCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:2942   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccQPxto7.s:2955   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccQPxto7.s:2960   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccQPxto7.s:3112   .text.HAL_UART_Abort_IT:000000c0 $d
     /tmp/ccQPxto7.s:3173   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccQPxto7.s:3122   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccQPxto7.s:3118   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccQPxto7.s:3169   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccQPxto7.s:3220   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:3225   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccQPxto7.s:3238   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccQPxto7.s:3243   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccQPxto7.s:3320   .text.HAL_UART_AbortTransmit_IT:0000005c $d
     /tmp/ccQPxto7.s:3329   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccQPxto7.s:3325   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccQPxto7.s:3358   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccQPxto7.s:3363   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccQPxto7.s:3376   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccQPxto7.s:3381   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccQPxto7.s:3463   .text.HAL_UART_AbortReceive_IT:00000064 $d
     /tmp/ccQPxto7.s:3472   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/ccQPxto7.s:3468   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccQPxto7.s:3501   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccQPxto7.s:3506   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccQPxto7.s:3550   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccQPxto7.s:3555   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccQPxto7.s:3599   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
     /tmp/ccQPxto7.s:3604   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccQPxto7.s:3648   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccQPxto7.s:3653   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccQPxto7.s:3706   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
ARM GAS  /tmp/ccQPxto7.s 			page 124


     /tmp/ccQPxto7.s:3711   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccQPxto7.s:3764   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccQPxto7.s:3769   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccQPxto7.s:3791   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccQPxto7.s:3796   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
